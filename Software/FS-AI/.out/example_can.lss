
example_can.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .ident        0000000c  00000080  00000080  00000078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .C2F_Info     0000002e  00000100  00000100  000000f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         0000090c  10000000  00011008  00011000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  3 .text         0000f008  00002000  00002000  00001ff8  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  4 .bss          000006bc  10000910  00011918  0001190c  2**3
                  ALLOC
  5 .debug_info   00010dfa  00000000  00000000  0001190c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002fe4  00000000  00000000  00022706  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_loc    000089de  00000000  00000000  000256ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 000004b0  00000000  00000000  0002e0c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000042a4  00000000  00000000  0002e578  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000332b  00000000  00000000  0003281c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .comment      00000011  00000000  00000000  00035b47  2**0
                  CONTENTS, READONLY
 12 .ARM.attributes 00000033  00000000  00000000  00035b58  2**0
                  CONTENTS, READONLY
 13 .debug_frame  000012b4  00000000  00000000  00035b8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000240  00000000  00000000  00036e40  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00002000 <g_pfnVectors>:
    2000:	00 80 00 10 9d 21 00 00 69 22 00 00 71 22 00 00     .....!..i"..q"..
    2010:	79 22 00 00 81 22 00 00 89 22 00 00 06 b2 fe ef     y"..."..."......
	...
    202c:	91 22 00 00 99 22 00 00 00 00 00 00 a1 22 00 00     ."..."......."..
    203c:	a9 22 00 00 b1 22 00 00 c5 29 00 00 b1 22 00 00     ."..."...)..."..
    204c:	b1 22 00 00 b1 22 00 00 a5 72 00 00 f5 73 00 00     ."..."...r...s..
    205c:	41 75 00 00 b1 22 00 00 b1 22 00 00 b1 22 00 00     Au..."..."..."..
    206c:	b1 22 00 00 b1 22 00 00 b1 22 00 00 f5 66 00 00     ."..."..."...f..
    207c:	b1 68 00 00 b1 22 00 00 b1 22 00 00 b1 22 00 00     .h..."..."..."..
    208c:	b1 22 00 00 b1 22 00 00 b1 22 00 00 b1 22 00 00     ."..."..."..."..
    209c:	4d 8c 00 00 b1 22 00 00 31 ac 00 00 b1 22 00 00     M...."..1...."..
    20ac:	b1 22 00 00 b1 22 00 00 b1 22 00 00 b1 22 00 00     ."..."..."..."..
    20bc:	b1 22 00 00 b1 22 00 00 b1 22 00 00 b1 22 00 00     ."..."..."..."..
    20cc:	b1 22 00 00 6d 6a 00 00 b1 22 00 00 b1 22 00 00     ."..mj..."..."..
    20dc:	b1 22 00 00 b1 22 00 00                             ."..."..

000020e4 <__data_section_table>:
    20e4:	00011008 	.word	0x00011008
    20e8:	10000000 	.word	0x10000000
    20ec:	0000090c 	.word	0x0000090c
    20f0:	1000090c 	.word	0x1000090c
    20f4:	20000000 	.word	0x20000000
    20f8:	00000000 	.word	0x00000000

000020fc <__bss_section_table>:
    20fc:	10000910 	.word	0x10000910
    2100:	000006bc 	.word	0x000006bc
    2104:	20000000 	.word	0x20000000
    2108:	00000000 	.word	0x00000000

0000210c <data_init>:
    210c:	b089b480 	.word	0xb089b480
    2110:	60f8af00 	.word	0x60f8af00
    2114:	607a60b9 	.word	0x607a60b9
    2118:	61fb68bb 	.word	0x61fb68bb
    211c:	61bb68fb 	.word	0x61bb68fb
    2120:	0300f04f 	.word	0x0300f04f
    2124:	e00f617b 	.word	0xe00f617b
    2128:	681a69bb 	.word	0x681a69bb
    212c:	601a69fb 	.word	0x601a69fb
    2130:	f10369fb 	.word	0xf10369fb
    2134:	61fb0304 	.word	0x61fb0304
    2138:	f10369bb 	.word	0xf10369bb
    213c:	61bb0304 	.word	0x61bb0304
    2140:	f103697b 	.word	0xf103697b
    2144:	617b0304 	.word	0x617b0304
    2148:	687b697a 	.word	0x687b697a
    214c:	d3eb429a 	.word	0xd3eb429a
    2150:	0724f107 	.word	0x0724f107
    2154:	bc8046bd 	.word	0xbc8046bd
    2158:	bf004770 	.word	0xbf004770

0000215c <bss_init>:
    215c:	b085b480 	.word	0xb085b480
    2160:	6078af00 	.word	0x6078af00
    2164:	687b6039 	.word	0x687b6039
    2168:	f04f60fb 	.word	0xf04f60fb
    216c:	60bb0300 	.word	0x60bb0300
    2170:	68fbe00b 	.word	0x68fbe00b
    2174:	0200f04f 	.word	0x0200f04f
    2178:	68fb601a 	.word	0x68fb601a
    217c:	0304f103 	.word	0x0304f103
    2180:	68bb60fb 	.word	0x68bb60fb
    2184:	0304f103 	.word	0x0304f103
    2188:	68ba60bb 	.word	0x68ba60bb
    218c:	429a683b 	.word	0x429a683b
    2190:	f107d3ef 	.word	0xf107d3ef
    2194:	46bd0714 	.word	0x46bd0714
    2198:	4770bc80 	.word	0x4770bc80

0000219c <ResetISR>:
    219c:	b082b580 	.word	0xb082b580
    21a0:	f248af00 	.word	0xf248af00
    21a4:	f2c10300 	.word	0xf2c10300
    21a8:	607b0300 	.word	0x607b0300
    21ac:	f383687b 	.word	0xf383687b
    21b0:	f0008808 	.word	0xf0008808
    21b4:	f107f805 	.word	0xf107f805
    21b8:	46bd0708 	.word	0x46bd0708
    21bc:	bf00bd80 	.word	0xbf00bd80

000021c0 <PostResetISR>:
    21c0:	b086b580 	.word	0xb086b580
    21c4:	f242af00 	.word	0xf242af00
    21c8:	f2c003e4 	.word	0xf2c003e4
    21cc:	617b0300 	.word	0x617b0300
    21d0:	697be019 	.word	0x697be019
    21d4:	613b681b 	.word	0x613b681b
    21d8:	f103697b 	.word	0xf103697b
    21dc:	617b0304 	.word	0x617b0304
    21e0:	681b697b 	.word	0x681b697b
    21e4:	697b60fb 	.word	0x697b60fb
    21e8:	0304f103 	.word	0x0304f103
    21ec:	697b617b 	.word	0x697b617b
    21f0:	60bb681b 	.word	0x60bb681b
    21f4:	f103697b 	.word	0xf103697b
    21f8:	617b0304 	.word	0x617b0304
    21fc:	68f96938 	.word	0x68f96938
    2200:	f7ff68ba 	.word	0xf7ff68ba
    2204:	697aff83 	.word	0x697aff83
    2208:	03fcf242 	.word	0x03fcf242
    220c:	0300f2c0 	.word	0x0300f2c0
    2210:	d3de429a 	.word	0xd3de429a
    2214:	697be011 	.word	0x697be011
    2218:	60fb681b 	.word	0x60fb681b
    221c:	f103697b 	.word	0xf103697b
    2220:	617b0304 	.word	0x617b0304
    2224:	681b697b 	.word	0x681b697b
    2228:	697b60bb 	.word	0x697b60bb
    222c:	0304f103 	.word	0x0304f103
    2230:	68f8617b 	.word	0x68f8617b
    2234:	f7ff68b9 	.word	0xf7ff68b9
    2238:	697aff91 	.word	0x697aff91
    223c:	130cf242 	.word	0x130cf242
    2240:	0300f2c0 	.word	0x0300f2c0
    2244:	d3e6429a 	.word	0xd3e6429a
    2248:	5308f64e 	.word	0x5308f64e
    224c:	0300f2ce 	.word	0x0300f2ce
    2250:	f242607b 	.word	0xf242607b
    2254:	f2c00300 	.word	0xf2c00300
    2258:	687a0300 	.word	0x687a0300
    225c:	f00a6013 	.word	0xf00a6013
    2260:	f000fb89 	.word	0xf000fb89
    2264:	e7fef873 	.word	0xe7fef873

00002268 <NMI_Handler>:
    2268:	af00b480 	.word	0xaf00b480
    226c:	bf00e7fe 	.word	0xbf00e7fe

00002270 <HardFault_Handler>:
    2270:	af00b480 	.word	0xaf00b480
    2274:	bf00e7fe 	.word	0xbf00e7fe

00002278 <MemManage_Handler>:
    2278:	af00b480 	.word	0xaf00b480
    227c:	bf00e7fe 	.word	0xbf00e7fe

00002280 <BusFault_Handler>:
    2280:	af00b480 	.word	0xaf00b480
    2284:	bf00e7fe 	.word	0xbf00e7fe

00002288 <UsageFault_Handler>:
    2288:	af00b480 	.word	0xaf00b480
    228c:	bf00e7fe 	.word	0xbf00e7fe

00002290 <SVC_Handler>:
    2290:	af00b480 	.word	0xaf00b480
    2294:	bf00e7fe 	.word	0xbf00e7fe

00002298 <DebugMon_Handler>:
    2298:	af00b480 	.word	0xaf00b480
    229c:	bf00e7fe 	.word	0xbf00e7fe

000022a0 <PendSV_Handler>:
    22a0:	af00b480 	.word	0xaf00b480
    22a4:	bf00e7fe 	.word	0xbf00e7fe

000022a8 <SysTick_Handler>:
    22a8:	af00b480 	.word	0xaf00b480
    22ac:	bf00e7fe 	.word	0xbf00e7fe

000022b0 <ADC_IRQHandler>:
    22b0:	af00b480 	.word	0xaf00b480
    22b4:	bf00e7fe 	.word	0xbf00e7fe

000022b8 <Timer_1000usec>:
//------------------------------------------------------------------------------
//! void Timer_1000usec(void)
//------------------------------------------------------------------------------
//! @brief	this function is called every 1[ms] by timer0 match-interrupt ISR
//------------------------------------------------------------------------------
void Timer_1000usec(void){
    22b8:	b580      	push	{r7, lr}
    22ba:	af00      	add	r7, sp, #0
	static u32_t  LedBlink_counter=0;
	static u8_t	toggle_led = 0;

	if (!Initialized)
    22bc:	f640 1310 	movw	r3, #2320	; 0x910
    22c0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    22c4:	781b      	ldrb	r3, [r3, #0]
    22c6:	2b00      	cmp	r3, #0
    22c8:	d03e      	beq.n	2348 <Timer_1000usec+0x90>
		return;

	if (LedBlink_counter < 1000){
    22ca:	f640 1328 	movw	r3, #2344	; 0x928
    22ce:	f2c1 0300 	movt	r3, #4096	; 0x1000
    22d2:	681a      	ldr	r2, [r3, #0]
    22d4:	f240 33e7 	movw	r3, #999	; 0x3e7
    22d8:	429a      	cmp	r2, r3
    22da:	d80c      	bhi.n	22f6 <Timer_1000usec+0x3e>
		LedBlink_counter++;
    22dc:	f640 1328 	movw	r3, #2344	; 0x928
    22e0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    22e4:	681b      	ldr	r3, [r3, #0]
    22e6:	f103 0201 	add.w	r2, r3, #1
    22ea:	f640 1328 	movw	r3, #2344	; 0x928
    22ee:	f2c1 0300 	movt	r3, #4096	; 0x1000
    22f2:	601a      	str	r2, [r3, #0]
    22f4:	e029      	b.n	234a <Timer_1000usec+0x92>
	}else{
		LedBlink_counter = 0;
    22f6:	f640 1328 	movw	r3, #2344	; 0x928
    22fa:	f2c1 0300 	movt	r3, #4096	; 0x1000
    22fe:	f04f 0200 	mov.w	r2, #0
    2302:	601a      	str	r2, [r3, #0]

		toggle_led ^= 1;		// invert flag and set new value
    2304:	f640 132c 	movw	r3, #2348	; 0x92c
    2308:	f2c1 0300 	movt	r3, #4096	; 0x1000
    230c:	781b      	ldrb	r3, [r3, #0]
    230e:	f083 0301 	eor.w	r3, r3, #1
    2312:	b2da      	uxtb	r2, r3
    2314:	f640 132c 	movw	r3, #2348	; 0x92c
    2318:	f2c1 0300 	movt	r3, #4096	; 0x1000
    231c:	701a      	strb	r2, [r3, #0]
		if (toggle_led){
    231e:	f640 132c 	movw	r3, #2348	; 0x92c
    2322:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2326:	781b      	ldrb	r3, [r3, #0]
    2328:	2b00      	cmp	r3, #0
    232a:	d006      	beq.n	233a <Timer_1000usec+0x82>
			HW_SetLED (HW_LED_STATUS_1, HW_LED_GREEN);
    232c:	f04f 0001 	mov.w	r0, #1
    2330:	f04f 0102 	mov.w	r1, #2
    2334:	f006 f83e 	bl	83b4 <HW_SetLED>
    2338:	e007      	b.n	234a <Timer_1000usec+0x92>
		} else {
			HW_SetLED(HW_LED_STATUS_1, HW_LED_OFF);
    233a:	f04f 0001 	mov.w	r0, #1
    233e:	f04f 0100 	mov.w	r1, #0
    2342:	f006 f837 	bl	83b4 <HW_SetLED>
    2346:	e000      	b.n	234a <Timer_1000usec+0x92>
void Timer_1000usec(void){
	static u32_t  LedBlink_counter=0;
	static u8_t	toggle_led = 0;

	if (!Initialized)
		return;
    2348:	bf00      	nop
			HW_SetLED (HW_LED_STATUS_1, HW_LED_GREEN);
		} else {
			HW_SetLED(HW_LED_STATUS_1, HW_LED_OFF);
		}
	}
}
    234a:	bd80      	pop	{r7, pc}

0000234c <main>:
//! int main(void)
//------------------------------------------------------------------------------
//! @brief	initialization and main loop
//------------------------------------------------------------------------------
int main(void)
{
    234c:	b580      	push	{r7, lr}
    234e:	af00      	add	r7, sp, #0

	Initialized = 0;
    2350:	f640 1310 	movw	r3, #2320	; 0x910
    2354:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2358:	f04f 0200 	mov.w	r2, #0
    235c:	701a      	strb	r2, [r3, #0]

	init_system();
    235e:	f000 f88f 	bl	2480 <init_system>
    2362:	e000      	b.n	2366 <main+0x1a>
//			CAN_UserSendRTCTime();
//		}
		//-------------------------

//		CAN_UserProcessMsg();
	} // end while (1)
    2364:	bf00      	nop
		static u32_t  		MAX7Wtask_counter=0;
		static u32_t  		DIO_counter=0;
		static u32_t  		TIME_counter=0;

		// read new compass/accelerometer/temperature data
		if (SYSTIME_DIFF(BMC050task_counter, SYSTIME_NOW) >= 5000)
    2366:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    236a:	689a      	ldr	r2, [r3, #8]
    236c:	f640 1314 	movw	r3, #2324	; 0x914
    2370:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2374:	681b      	ldr	r3, [r3, #0]
    2376:	429a      	cmp	r2, r3
    2378:	d310      	bcc.n	239c <main+0x50>
    237a:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    237e:	689a      	ldr	r2, [r3, #8]
    2380:	f640 1314 	movw	r3, #2324	; 0x914
    2384:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2388:	681b      	ldr	r3, [r3, #0]
    238a:	1ad2      	subs	r2, r2, r3
    238c:	f241 3387 	movw	r3, #4999	; 0x1387
    2390:	429a      	cmp	r2, r3
    2392:	bf94      	ite	ls
    2394:	2300      	movls	r3, #0
    2396:	2301      	movhi	r3, #1
    2398:	b2db      	uxtb	r3, r3
    239a:	e011      	b.n	23c0 <main+0x74>
    239c:	f640 1314 	movw	r3, #2324	; 0x914
    23a0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    23a4:	681b      	ldr	r3, [r3, #0]
    23a6:	ea6f 0203 	mvn.w	r2, r3
    23aa:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    23ae:	689b      	ldr	r3, [r3, #8]
    23b0:	18d2      	adds	r2, r2, r3
    23b2:	f241 3387 	movw	r3, #4999	; 0x1387
    23b6:	429a      	cmp	r2, r3
    23b8:	bf94      	ite	ls
    23ba:	2300      	movls	r3, #0
    23bc:	2301      	movhi	r3, #1
    23be:	b2db      	uxtb	r3, r3
    23c0:	2b00      	cmp	r3, #0
    23c2:	d019      	beq.n	23f8 <main+0xac>
		{
			// update time interval
			BMC050task_counter = SYSTIME_NOW;
    23c4:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    23c8:	689a      	ldr	r2, [r3, #8]
    23ca:	f640 1314 	movw	r3, #2324	; 0x914
    23ce:	f2c1 0300 	movt	r3, #4096	; 0x1000
    23d2:	601a      	str	r2, [r3, #0]
			// as long as there is not a complete set of readings
			if (BMC050_Readings.data_valid == FALSE)
    23d4:	f640 6348 	movw	r3, #3656	; 0xe48
    23d8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    23dc:	7c5b      	ldrb	r3, [r3, #17]
    23de:	2b00      	cmp	r3, #0
    23e0:	d10a      	bne.n	23f8 <main+0xac>
			{
				MEMS_BMC050_task();
    23e2:	f002 fc89 	bl	4cf8 <MEMS_BMC050_task>
			
				if (BMC050_Readings.data_valid == TRUE){
    23e6:	f640 6348 	movw	r3, #3656	; 0xe48
    23ea:	f2c1 0300 	movt	r3, #4096	; 0x1000
    23ee:	7c5b      	ldrb	r3, [r3, #17]
    23f0:	2b01      	cmp	r3, #1
    23f2:	d101      	bne.n	23f8 <main+0xac>
					CAN_UserSendBMCData();
    23f4:	f000 fc36 	bl	2c64 <CAN_UserSendBMCData>
			}
		}
		//-------------------------
		
		// read new gyro/temperature data
		if (SYSTIME_DIFF (L3GD20task_counter, SYSTIME_NOW) >= 5000)
    23f8:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    23fc:	689a      	ldr	r2, [r3, #8]
    23fe:	f640 1318 	movw	r3, #2328	; 0x918
    2402:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2406:	681b      	ldr	r3, [r3, #0]
    2408:	429a      	cmp	r2, r3
    240a:	d310      	bcc.n	242e <main+0xe2>
    240c:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    2410:	689a      	ldr	r2, [r3, #8]
    2412:	f640 1318 	movw	r3, #2328	; 0x918
    2416:	f2c1 0300 	movt	r3, #4096	; 0x1000
    241a:	681b      	ldr	r3, [r3, #0]
    241c:	1ad2      	subs	r2, r2, r3
    241e:	f241 3387 	movw	r3, #4999	; 0x1387
    2422:	429a      	cmp	r2, r3
    2424:	bf94      	ite	ls
    2426:	2300      	movls	r3, #0
    2428:	2301      	movhi	r3, #1
    242a:	b2db      	uxtb	r3, r3
    242c:	e011      	b.n	2452 <main+0x106>
    242e:	f640 1318 	movw	r3, #2328	; 0x918
    2432:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2436:	681b      	ldr	r3, [r3, #0]
    2438:	ea6f 0203 	mvn.w	r2, r3
    243c:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    2440:	689b      	ldr	r3, [r3, #8]
    2442:	18d2      	adds	r2, r2, r3
    2444:	f241 3387 	movw	r3, #4999	; 0x1387
    2448:	429a      	cmp	r2, r3
    244a:	bf94      	ite	ls
    244c:	2300      	movls	r3, #0
    244e:	2301      	movhi	r3, #1
    2450:	b2db      	uxtb	r3, r3
    2452:	2b00      	cmp	r3, #0
    2454:	d086      	beq.n	2364 <main+0x18>
		{
			// update time interval
			L3GD20task_counter = SYSTIME_NOW;
    2456:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    245a:	689a      	ldr	r2, [r3, #8]
    245c:	f640 1318 	movw	r3, #2328	; 0x918
    2460:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2464:	601a      	str	r2, [r3, #0]
			// as long as there is not a complete set of readings
			MEMS_L3GD20_task();
    2466:	f003 fbb1 	bl	5bcc <MEMS_L3GD20_task>
			
			if (L3GD20_Readings.data_valid == TRUE)
    246a:	f640 6380 	movw	r3, #3712	; 0xe80
    246e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2472:	7a1b      	ldrb	r3, [r3, #8]
    2474:	2b01      	cmp	r3, #1
    2476:	f47f af75 	bne.w	2364 <main+0x18>
				CAN_UserSendL3GDData();
    247a:	f000 fc3f 	bl	2cfc <CAN_UserSendL3GDData>
//			CAN_UserSendRTCTime();
//		}
		//-------------------------

//		CAN_UserProcessMsg();
	} // end while (1)
    247e:	e771      	b.n	2364 <main+0x18>

00002480 <init_system>:
//------------------------------------------------------------------------------
//! s32_t init_system(void)
//------------------------------------------------------------------------------
//! @brief initializes system
//------------------------------------------------------------------------------
s32_t init_system(void){
    2480:	b580      	push	{r7, lr}
    2482:	b082      	sub	sp, #8
    2484:	af00      	add	r7, sp, #0
	s32_t res = 0;
    2486:	f04f 0300 	mov.w	r3, #0
    248a:	607b      	str	r3, [r7, #4]

	// Initialize Basic Parts
	HW_Init();
    248c:	f006 f9ba 	bl	8804 <HW_Init>

	// Initialize Systemtimer
	Init_Timer0();
    2490:	f000 fa58 	bl	2944 <Init_Timer0>

	rtc_initialize();
    2494:	f003 fd8c 	bl	5fb0 <rtc_initialize>

	// read configuration values from EEPROM if present
	res = read_persistent_config();
    2498:	f000 f898 	bl	25cc <read_persistent_config>
    249c:	6078      	str	r0, [r7, #4]
	if(res!=RET_OK)
    249e:	687b      	ldr	r3, [r7, #4]
    24a0:	2b00      	cmp	r3, #0
    24a2:	d001      	beq.n	24a8 <init_system+0x28>
		get_default_config();
    24a4:	f000 f836 	bl	2514 <get_default_config>

	// Initialize CAN Controller
	CAN_UserInit();
    24a8:	f000 fb7c 	bl	2ba4 <CAN_UserInit>

	// Init GPS and UART2
	UBLOX_MAX7W_init();
    24ac:	f001 f884 	bl	35b8 <UBLOX_MAX7W_init>

	// Initialize gyroscope
	MEMS_L3GD20_init();
    24b0:	f003 fa6e 	bl	5990 <MEMS_L3GD20_init>

	// Initialize magnetometer and accelerometer
	MEMS_BMC050_init_Accelerometer();
    24b4:	f002 f804 	bl	44c0 <MEMS_BMC050_init_Accelerometer>
	MEMS_BMC050_init_Magnetometer();
    24b8:	f002 f994 	bl	47e4 <MEMS_BMC050_init_Magnetometer>

	// set values read from EEPROM *after* initialization of sensors with
	// default values
	MEMS_BMC050_SetAccCalTargets(	&cfg_data.Acc.cmp_target_x,
    24bc:	f640 406c 	movw	r0, #3180	; 0xc6c
    24c0:	f2c1 0000 	movt	r0, #4096	; 0x1000
    24c4:	4911      	ldr	r1, [pc, #68]	; (250c <init_system+0x8c>)
    24c6:	4a12      	ldr	r2, [pc, #72]	; (2510 <init_system+0x90>)
    24c8:	f002 faaa 	bl	4a20 <MEMS_BMC050_SetAccCalTargets>
									&cfg_data.Acc.cmp_target_y,
									&cfg_data.Acc.cmp_target_z);
	MEMS_BMC050_SetAccRange(cfg_data.Acc.range);
    24cc:	f640 436c 	movw	r3, #3180	; 0xc6c
    24d0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    24d4:	7a5b      	ldrb	r3, [r3, #9]
    24d6:	4618      	mov	r0, r3
    24d8:	f002 fbcc 	bl	4c74 <MEMS_BMC050_SetAccRange>

	MEMS_L3GD20_SetRange(cfg_data.Gyro.range);
    24dc:	f640 436c 	movw	r3, #3180	; 0xc6c
    24e0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    24e4:	7adb      	ldrb	r3, [r3, #11]
    24e6:	4618      	mov	r0, r3
    24e8:	f003 fbba 	bl	5c60 <MEMS_L3GD20_SetRange>

	// Transmit initial configuration values once
	CAN_UserResetPanelValues();
    24ec:	f000 ff98 	bl	3420 <CAN_UserResetPanelValues>

	Initialized = 1;
    24f0:	f640 1310 	movw	r3, #2320	; 0x910
    24f4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    24f8:	f04f 0201 	mov.w	r2, #1
    24fc:	701a      	strb	r2, [r3, #0]
	return RET_OK;
    24fe:	f04f 0300 	mov.w	r3, #0
}
    2502:	4618      	mov	r0, r3
    2504:	f107 0708 	add.w	r7, r7, #8
    2508:	46bd      	mov	sp, r7
    250a:	bd80      	pop	{r7, pc}
    250c:	10000c6d 	.word	0x10000c6d
    2510:	10000c6e 	.word	0x10000c6e

00002514 <get_default_config>:
//------------------------------------------------------------------------------
//! static s32_t get_default_config(void)
//------------------------------------------------------------------------------
//! @brief	sets system configuration to default values
//------------------------------------------------------------------------------
static s32_t get_default_config(void){
    2514:	b480      	push	{r7}
    2516:	af00      	add	r7, sp, #0

	cfg_data.Acc.cmp_target_x = 0;
    2518:	f640 436c 	movw	r3, #3180	; 0xc6c
    251c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2520:	f04f 0200 	mov.w	r2, #0
    2524:	701a      	strb	r2, [r3, #0]
	cfg_data.Acc.cmp_target_y = 0;
    2526:	f640 436c 	movw	r3, #3180	; 0xc6c
    252a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    252e:	f04f 0200 	mov.w	r2, #0
    2532:	705a      	strb	r2, [r3, #1]
	cfg_data.Acc.cmp_target_z = 0;	
    2534:	f640 436c 	movw	r3, #3180	; 0xc6c
    2538:	f2c1 0300 	movt	r3, #4096	; 0x1000
    253c:	f04f 0200 	mov.w	r2, #0
    2540:	709a      	strb	r2, [r3, #2]
	cfg_data.Acc.cmp_filt_x = 0;
    2542:	f640 436c 	movw	r3, #3180	; 0xc6c
    2546:	f2c1 0300 	movt	r3, #4096	; 0x1000
    254a:	f04f 0200 	mov.w	r2, #0
    254e:	719a      	strb	r2, [r3, #6]
	cfg_data.Acc.cmp_filt_y = 0;
    2550:	f640 436c 	movw	r3, #3180	; 0xc6c
    2554:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2558:	f04f 0200 	mov.w	r2, #0
    255c:	71da      	strb	r2, [r3, #7]
	cfg_data.Acc.cmp_filt_z = 0;
    255e:	f640 436c 	movw	r3, #3180	; 0xc6c
    2562:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2566:	f04f 0200 	mov.w	r2, #0
    256a:	721a      	strb	r2, [r3, #8]
	cfg_data.Acc.cmp_raw_x = 0;
    256c:	f640 436c 	movw	r3, #3180	; 0xc6c
    2570:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2574:	f04f 0200 	mov.w	r2, #0
    2578:	70da      	strb	r2, [r3, #3]
	cfg_data.Acc.cmp_raw_y = 0;
    257a:	f640 436c 	movw	r3, #3180	; 0xc6c
    257e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2582:	f04f 0200 	mov.w	r2, #0
    2586:	711a      	strb	r2, [r3, #4]
	cfg_data.Acc.cmp_raw_z = 0;
    2588:	f640 436c 	movw	r3, #3180	; 0xc6c
    258c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2590:	f04f 0200 	mov.w	r2, #0
    2594:	715a      	strb	r2, [r3, #5]
	cfg_data.Acc.flags = 0;
    2596:	f640 436c 	movw	r3, #3180	; 0xc6c
    259a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    259e:	f04f 0200 	mov.w	r2, #0
    25a2:	729a      	strb	r2, [r3, #10]
	
	cfg_data.Acc.range = 1;
    25a4:	f640 436c 	movw	r3, #3180	; 0xc6c
    25a8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    25ac:	f04f 0201 	mov.w	r2, #1
    25b0:	725a      	strb	r2, [r3, #9]

	cfg_data.Gyro.range = 0;
    25b2:	f640 436c 	movw	r3, #3180	; 0xc6c
    25b6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    25ba:	f04f 0200 	mov.w	r2, #0
    25be:	72da      	strb	r2, [r3, #11]
	
	return RET_OK;
    25c0:	f04f 0300 	mov.w	r3, #0
}
    25c4:	4618      	mov	r0, r3
    25c6:	46bd      	mov	sp, r7
    25c8:	bc80      	pop	{r7}
    25ca:	4770      	bx	lr

000025cc <read_persistent_config>:
//! @brief reads configuration from EEPROM
//------------------------------------------------------------------------------
//! @return	RET_ERR if EEPROM read fails or if CRC checksum was not valid
//!			RET_OK	elsewise
//------------------------------------------------------------------------------
static s32_t read_persistent_config(void){
    25cc:	b590      	push	{r4, r7, lr}
    25ce:	b089      	sub	sp, #36	; 0x24
    25d0:	af02      	add	r7, sp, #8
	CRCInit_t cfg= CRC32_CONFIG;
    25d2:	f640 1358 	movw	r3, #2392	; 0x958
    25d6:	f2c0 0301 	movt	r3, #1
    25da:	f107 0404 	add.w	r4, r7, #4
    25de:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
    25e2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	u32_t res=0;
    25e6:	f04f 0300 	mov.w	r3, #0
    25ea:	617b      	str	r3, [r7, #20]
	u32_t cnt=0;
    25ec:	f04f 0300 	mov.w	r3, #0
    25f0:	613b      	str	r3, [r7, #16]
	
	//! read static configuration data from eeprom
	if(EEPROM_Read(EEPROM_INT, EEPROM_CFG_ADDR,
    25f2:	f04f 0000 	mov.w	r0, #0
    25f6:	f04f 0100 	mov.w	r1, #0
    25fa:	f640 426c 	movw	r2, #3180	; 0xc6c
    25fe:	f2c1 0200 	movt	r2, #4096	; 0x1000
    2602:	f04f 0324 	mov.w	r3, #36	; 0x24
    2606:	f006 fd5f 	bl	90c8 <EEPROM_Read>
    260a:	4603      	mov	r3, r0
    260c:	2b00      	cmp	r3, #0
    260e:	d002      	beq.n	2616 <read_persistent_config+0x4a>
			(u8_t*)&cfg_data, sizeof(cfg_data))!=EEPROM_ERR_OK)
		return RET_ERR;
    2610:	f04f 33ff 	mov.w	r3, #4294967295
    2614:	e023      	b.n	265e <read_persistent_config+0x92>

	cnt = sizeof(cfg_data)-sizeofmember(S_CONFIG_DATA_t, crc32);
    2616:	f04f 0320 	mov.w	r3, #32
    261a:	613b      	str	r3, [r7, #16]
	res = CRC_Valid(&cfg_data, cnt, t_crc_8_bit, &cfg, cfg_data.crc32);
    261c:	f640 436c 	movw	r3, #3180	; 0xc6c
    2620:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2624:	6a1a      	ldr	r2, [r3, #32]
    2626:	f107 0304 	add.w	r3, r7, #4
    262a:	9200      	str	r2, [sp, #0]
    262c:	f640 406c 	movw	r0, #3180	; 0xc6c
    2630:	f2c1 0000 	movt	r0, #4096	; 0x1000
    2634:	6939      	ldr	r1, [r7, #16]
    2636:	f04f 0200 	mov.w	r2, #0
    263a:	f006 ff8d 	bl	9558 <CRC_Valid>
    263e:	6178      	str	r0, [r7, #20]
	if(res!=1)
    2640:	697b      	ldr	r3, [r7, #20]
    2642:	2b01      	cmp	r3, #1
    2644:	d002      	beq.n	264c <read_persistent_config+0x80>
		return RET_ERR;
    2646:	f04f 33ff 	mov.w	r3, #4294967295
    264a:	e008      	b.n	265e <read_persistent_config+0x92>

	persistant_config_used = 1;
    264c:	f640 1311 	movw	r3, #2321	; 0x911
    2650:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2654:	f04f 0201 	mov.w	r2, #1
    2658:	701a      	strb	r2, [r3, #0]

	return RET_OK;
    265a:	f04f 0300 	mov.w	r3, #0
}
    265e:	4618      	mov	r0, r3
    2660:	f107 071c 	add.w	r7, r7, #28
    2664:	46bd      	mov	sp, r7
    2666:	bd90      	pop	{r4, r7, pc}

00002668 <_read_r>:




_ssize_t _read_r ( struct _reent *r, int file, void *ptr, size_t len)
{
    2668:	b580      	push	{r7, lr}
    266a:	b088      	sub	sp, #32
    266c:	af00      	add	r7, sp, #0
    266e:	60f8      	str	r0, [r7, #12]
    2670:	60b9      	str	r1, [r7, #8]
    2672:	607a      	str	r2, [r7, #4]
    2674:	603b      	str	r3, [r7, #0]
  char c;
  int  i;
	u8_t  rd=0;
    2676:	f04f 0300 	mov.w	r3, #0
    267a:	75bb      	strb	r3, [r7, #22]
  unsigned char *p;

  p = (unsigned char*)ptr;
    267c:	687b      	ldr	r3, [r7, #4]
    267e:	61bb      	str	r3, [r7, #24]

  for (i = 0; i < len; i++)
    2680:	f04f 0300 	mov.w	r3, #0
    2684:	61fb      	str	r3, [r7, #28]
    2686:	e029      	b.n	26dc <_read_r+0x74>
  {
    //UART_read(&c,1,0);
		if(SER_Read(SER_PORT1, &c, 1, &rd) != SER_ERR_OK)
    2688:	f107 0217 	add.w	r2, r7, #23
    268c:	f107 0316 	add.w	r3, r7, #22
    2690:	f04f 0000 	mov.w	r0, #0
    2694:	4611      	mov	r1, r2
    2696:	f04f 0201 	mov.w	r2, #1
    269a:	f004 fc99 	bl	6fd0 <SER_Read>
    269e:	4603      	mov	r3, r0
    26a0:	2b00      	cmp	r3, #0
    26a2:	d120      	bne.n	26e6 <_read_r+0x7e>
			break;;

    *p++ = c;
    26a4:	7dfa      	ldrb	r2, [r7, #23]
    26a6:	69bb      	ldr	r3, [r7, #24]
    26a8:	701a      	strb	r2, [r3, #0]
    26aa:	69bb      	ldr	r3, [r7, #24]
    26ac:	f103 0301 	add.w	r3, r3, #1
    26b0:	61bb      	str	r3, [r7, #24]

    if (c == 0x0D && i <= (len - 2))
    26b2:	7dfb      	ldrb	r3, [r7, #23]
    26b4:	2b0d      	cmp	r3, #13
    26b6:	d10d      	bne.n	26d4 <_read_r+0x6c>
    26b8:	69fa      	ldr	r2, [r7, #28]
    26ba:	683b      	ldr	r3, [r7, #0]
    26bc:	f1a3 0302 	sub.w	r3, r3, #2
    26c0:	429a      	cmp	r2, r3
    26c2:	d807      	bhi.n	26d4 <_read_r+0x6c>
    {
      *p = 0x0A;
    26c4:	69bb      	ldr	r3, [r7, #24]
    26c6:	f04f 020a 	mov.w	r2, #10
    26ca:	701a      	strb	r2, [r3, #0]
      return i + 2;
    26cc:	69fb      	ldr	r3, [r7, #28]
    26ce:	f103 0302 	add.w	r3, r3, #2
    26d2:	e00a      	b.n	26ea <_read_r+0x82>
	u8_t  rd=0;
  unsigned char *p;

  p = (unsigned char*)ptr;

  for (i = 0; i < len; i++)
    26d4:	69fb      	ldr	r3, [r7, #28]
    26d6:	f103 0301 	add.w	r3, r3, #1
    26da:	61fb      	str	r3, [r7, #28]
    26dc:	69fa      	ldr	r2, [r7, #28]
    26de:	683b      	ldr	r3, [r7, #0]
    26e0:	429a      	cmp	r2, r3
    26e2:	d3d1      	bcc.n	2688 <_read_r+0x20>
    26e4:	e000      	b.n	26e8 <_read_r+0x80>
  {
    //UART_read(&c,1,0);
		if(SER_Read(SER_PORT1, &c, 1, &rd) != SER_ERR_OK)
			break;;
    26e6:	bf00      	nop
    {
      *p = 0x0A;
      return i + 2;
    }
  }
  return i;
    26e8:	69fb      	ldr	r3, [r7, #28]
}
    26ea:	4618      	mov	r0, r3
    26ec:	f107 0720 	add.w	r7, r7, #32
    26f0:	46bd      	mov	sp, r7
    26f2:	bd80      	pop	{r7, pc}

000026f4 <_write_r>:



_ssize_t _write_r ( struct _reent *r, int file, const void *ptr, size_t len)
{
    26f4:	b580      	push	{r7, lr}
    26f6:	b088      	sub	sp, #32
    26f8:	af00      	add	r7, sp, #0
    26fa:	60f8      	str	r0, [r7, #12]
    26fc:	60b9      	str	r1, [r7, #8]
    26fe:	607a      	str	r2, [r7, #4]
    2700:	603b      	str	r3, [r7, #0]
	int i;
	const unsigned char *p;
	u8_t c;

	p = (const unsigned char*) ptr;
    2702:	687b      	ldr	r3, [r7, #4]
    2704:	61bb      	str	r3, [r7, #24]
	

	for (i = 0; i < len; i++) {
    2706:	f04f 0300 	mov.w	r3, #0
    270a:	61fb      	str	r3, [r7, #28]
    270c:	e021      	b.n	2752 <_write_r+0x5e>
		if (*p == '\n' ){
    270e:	69bb      	ldr	r3, [r7, #24]
    2710:	781b      	ldrb	r3, [r3, #0]
    2712:	2b0a      	cmp	r3, #10
    2714:	d109      	bne.n	272a <_write_r+0x36>
			//UART_write("\r",1,0);
			SER_Write (SER_PORT1, "\r", 1);
    2716:	f04f 0000 	mov.w	r0, #0
    271a:	f640 1164 	movw	r1, #2404	; 0x964
    271e:	f2c0 0101 	movt	r1, #1
    2722:	f04f 0201 	mov.w	r2, #1
    2726:	f004 fb29 	bl	6d7c <SER_Write>
		}
		//UART_write(p++,1,0);
		c = *p++;
    272a:	69bb      	ldr	r3, [r7, #24]
    272c:	781b      	ldrb	r3, [r3, #0]
    272e:	75fb      	strb	r3, [r7, #23]
    2730:	69bb      	ldr	r3, [r7, #24]
    2732:	f103 0301 	add.w	r3, r3, #1
    2736:	61bb      	str	r3, [r7, #24]
		SER_Write (SER_PORT1, &c, 1);
    2738:	f107 0317 	add.w	r3, r7, #23
    273c:	f04f 0000 	mov.w	r0, #0
    2740:	4619      	mov	r1, r3
    2742:	f04f 0201 	mov.w	r2, #1
    2746:	f004 fb19 	bl	6d7c <SER_Write>
	u8_t c;

	p = (const unsigned char*) ptr;
	

	for (i = 0; i < len; i++) {
    274a:	69fb      	ldr	r3, [r7, #28]
    274c:	f103 0301 	add.w	r3, r3, #1
    2750:	61fb      	str	r3, [r7, #28]
    2752:	69fa      	ldr	r2, [r7, #28]
    2754:	683b      	ldr	r3, [r7, #0]
    2756:	429a      	cmp	r2, r3
    2758:	d3d9      	bcc.n	270e <_write_r+0x1a>
		//UART_write(p++,1,0);
		c = *p++;
		SER_Write (SER_PORT1, &c, 1);
	}

	return len;
    275a:	683b      	ldr	r3, [r7, #0]
}
    275c:	4618      	mov	r0, r3
    275e:	f107 0720 	add.w	r7, r7, #32
    2762:	46bd      	mov	sp, r7
    2764:	bd80      	pop	{r7, pc}
    2766:	bf00      	nop

00002768 <_close_r>:



int _close_r ( struct _reent *r, int file)
{
    2768:	b480      	push	{r7}
    276a:	b083      	sub	sp, #12
    276c:	af00      	add	r7, sp, #0
    276e:	6078      	str	r0, [r7, #4]
    2770:	6039      	str	r1, [r7, #0]

return 0;
    2772:	f04f 0300 	mov.w	r3, #0
}
    2776:	4618      	mov	r0, r3
    2778:	f107 070c 	add.w	r7, r7, #12
    277c:	46bd      	mov	sp, r7
    277e:	bc80      	pop	{r7}
    2780:	4770      	bx	lr
    2782:	bf00      	nop

00002784 <_lseek_r>:



_off_t _lseek_r ( struct _reent *r, int file, off_t ptr, int dir)
{
    2784:	b480      	push	{r7}
    2786:	b085      	sub	sp, #20
    2788:	af00      	add	r7, sp, #0
    278a:	60f8      	str	r0, [r7, #12]
    278c:	60b9      	str	r1, [r7, #8]
    278e:	607a      	str	r2, [r7, #4]
    2790:	603b      	str	r3, [r7, #0]

return (_off_t)0;	/*  Always indicate we are at file beginning.	*/
    2792:	f04f 0300 	mov.w	r3, #0
}
    2796:	4618      	mov	r0, r3
    2798:	f107 0714 	add.w	r7, r7, #20
    279c:	46bd      	mov	sp, r7
    279e:	bc80      	pop	{r7}
    27a0:	4770      	bx	lr
    27a2:	bf00      	nop

000027a4 <_fstat_r>:




int _fstat_r ( struct _reent *r, int file, struct stat *st)
{
    27a4:	b480      	push	{r7}
    27a6:	b085      	sub	sp, #20
    27a8:	af00      	add	r7, sp, #0
    27aa:	60f8      	str	r0, [r7, #12]
    27ac:	60b9      	str	r1, [r7, #8]
    27ae:	607a      	str	r2, [r7, #4]

/*  Always set as character device.				*/
st->st_mode = S_IFCHR;
    27b0:	687b      	ldr	r3, [r7, #4]
    27b2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
    27b6:	605a      	str	r2, [r3, #4]
/* assigned to strong type with implicit 	*/
/* signed/unsigned conversion.  Required by 	*/
/* newlib.					*/

return 0;
    27b8:	f04f 0300 	mov.w	r3, #0
}
    27bc:	4618      	mov	r0, r3
    27be:	f107 0714 	add.w	r7, r7, #20
    27c2:	46bd      	mov	sp, r7
    27c4:	bc80      	pop	{r7}
    27c6:	4770      	bx	lr

000027c8 <isatty>:




int isatty(int file)
{
    27c8:	b480      	push	{r7}
    27ca:	b083      	sub	sp, #12
    27cc:	af00      	add	r7, sp, #0
    27ce:	6078      	str	r0, [r7, #4]

return 1;
    27d0:	f04f 0301 	mov.w	r3, #1
}
    27d4:	4618      	mov	r0, r3
    27d6:	f107 070c 	add.w	r7, r7, #12
    27da:	46bd      	mov	sp, r7
    27dc:	bc80      	pop	{r7}
    27de:	4770      	bx	lr

000027e0 <_exit>:




void _exit ( int n)
{
    27e0:	b480      	push	{r7}
    27e2:	b083      	sub	sp, #12
    27e4:	af00      	add	r7, sp, #0
    27e6:	6078      	str	r0, [r7, #4]

while (1)
 {}
    27e8:	e7fe      	b.n	27e8 <_exit+0x8>
    27ea:	bf00      	nop

000027ec <_sbrk_r>:
/* _reent structure as a parameter).  					*/
/*  Since _s_r is not used in the current implementation, the following	*/
/* messages must be suppressed.						*/

void * _sbrk_r ( struct _reent *_s_r, ptrdiff_t nbytes)
{
    27ec:	b480      	push	{r7}
    27ee:	b085      	sub	sp, #20
    27f0:	af00      	add	r7, sp, #0
    27f2:	6078      	str	r0, [r7, #4]
    27f4:	6039      	str	r1, [r7, #0]
	char  *base;		/*  errno should be set to  ENOMEM on error	*/

	if (!heap_ptr) {	/*  Initialize if first time through.		*/
    27f6:	f640 1330 	movw	r3, #2352	; 0x930
    27fa:	f2c1 0300 	movt	r3, #4096	; 0x1000
    27fe:	681b      	ldr	r3, [r3, #0]
    2800:	2b00      	cmp	r3, #0
    2802:	d108      	bne.n	2816 <_sbrk_r+0x2a>
		heap_ptr = end;
    2804:	f640 1330 	movw	r3, #2352	; 0x930
    2808:	f2c1 0300 	movt	r3, #4096	; 0x1000
    280c:	f640 72cc 	movw	r2, #4044	; 0xfcc
    2810:	f2c1 0200 	movt	r2, #4096	; 0x1000
    2814:	601a      	str	r2, [r3, #0]
	}
	base = heap_ptr;	/*  Point to end of heap.			*/
    2816:	f640 1330 	movw	r3, #2352	; 0x930
    281a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    281e:	681b      	ldr	r3, [r3, #0]
    2820:	60fb      	str	r3, [r7, #12]
	heap_ptr += nbytes;	/*  Increase heap.				*/
    2822:	f640 1330 	movw	r3, #2352	; 0x930
    2826:	f2c1 0300 	movt	r3, #4096	; 0x1000
    282a:	681a      	ldr	r2, [r3, #0]
    282c:	683b      	ldr	r3, [r7, #0]
    282e:	18d2      	adds	r2, r2, r3
    2830:	f640 1330 	movw	r3, #2352	; 0x930
    2834:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2838:	601a      	str	r2, [r3, #0]

	return base;		/*  Return pointer to start of new heap area.	*/
    283a:	68fb      	ldr	r3, [r7, #12]
}
    283c:	4618      	mov	r0, r3
    283e:	f107 0714 	add.w	r7, r7, #20
    2842:	46bd      	mov	sp, r7
    2844:	bc80      	pop	{r7}
    2846:	4770      	bx	lr

00002848 <_getpid>:
/*
* getpid -- only one process, so just return 1.
*/
#define __MYPID 1
int _getpid()
{
    2848:	b480      	push	{r7}
    284a:	af00      	add	r7, sp, #0
return __MYPID;
    284c:	f04f 0301 	mov.w	r3, #1
}
    2850:	4618      	mov	r0, r3
    2852:	46bd      	mov	sp, r7
    2854:	bc80      	pop	{r7}
    2856:	4770      	bx	lr

00002858 <_kill>:

/*
* kill -- go out via exit...
*/
int _kill(int pid, int sig)
{
    2858:	b480      	push	{r7}
    285a:	b083      	sub	sp, #12
    285c:	af00      	add	r7, sp, #0
    285e:	6078      	str	r0, [r7, #4]
    2860:	6039      	str	r1, [r7, #0]
return -1;
    2862:	f04f 33ff 	mov.w	r3, #4294967295
}
    2866:	4618      	mov	r0, r3
    2868:	f107 070c 	add.w	r7, r7, #12
    286c:	46bd      	mov	sp, r7
    286e:	bc80      	pop	{r7}
    2870:	4770      	bx	lr
    2872:	bf00      	nop

00002874 <NVIC_EnableIRQ>:
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
    2874:	b480      	push	{r7}
    2876:	b083      	sub	sp, #12
    2878:	af00      	add	r7, sp, #0
    287a:	4603      	mov	r3, r0
    287c:	71fb      	strb	r3, [r7, #7]
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
    287e:	f44f 4361 	mov.w	r3, #57600	; 0xe100
    2882:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2886:	f997 2007 	ldrsb.w	r2, [r7, #7]
    288a:	ea4f 1252 	mov.w	r2, r2, lsr #5
    288e:	79f9      	ldrb	r1, [r7, #7]
    2890:	f001 011f 	and.w	r1, r1, #31
    2894:	f04f 0001 	mov.w	r0, #1
    2898:	fa00 f101 	lsl.w	r1, r0, r1
    289c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
}
    28a0:	f107 070c 	add.w	r7, r7, #12
    28a4:	46bd      	mov	sp, r7
    28a6:	bc80      	pop	{r7}
    28a8:	4770      	bx	lr
    28aa:	bf00      	nop

000028ac <NVIC_DisableIRQ>:
    The function disables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
    28ac:	b480      	push	{r7}
    28ae:	b083      	sub	sp, #12
    28b0:	af00      	add	r7, sp, #0
    28b2:	4603      	mov	r3, r0
    28b4:	71fb      	strb	r3, [r7, #7]
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
    28b6:	f44f 4361 	mov.w	r3, #57600	; 0xe100
    28ba:	f2ce 0300 	movt	r3, #57344	; 0xe000
    28be:	f997 2007 	ldrsb.w	r2, [r7, #7]
    28c2:	ea4f 1252 	mov.w	r2, r2, lsr #5
    28c6:	79f9      	ldrb	r1, [r7, #7]
    28c8:	f001 011f 	and.w	r1, r1, #31
    28cc:	f04f 0001 	mov.w	r0, #1
    28d0:	fa00 f101 	lsl.w	r1, r0, r1
    28d4:	f102 0220 	add.w	r2, r2, #32
    28d8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
}
    28dc:	f107 070c 	add.w	r7, r7, #12
    28e0:	46bd      	mov	sp, r7
    28e2:	bc80      	pop	{r7}
    28e4:	4770      	bx	lr
    28e6:	bf00      	nop

000028e8 <NVIC_SetPriority>:

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
    28e8:	b480      	push	{r7}
    28ea:	b083      	sub	sp, #12
    28ec:	af00      	add	r7, sp, #0
    28ee:	4603      	mov	r3, r0
    28f0:	6039      	str	r1, [r7, #0]
    28f2:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
    28f4:	f997 3007 	ldrsb.w	r3, [r7, #7]
    28f8:	2b00      	cmp	r3, #0
    28fa:	da10      	bge.n	291e <NVIC_SetPriority+0x36>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
    28fc:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2900:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2904:	79fa      	ldrb	r2, [r7, #7]
    2906:	f002 020f 	and.w	r2, r2, #15
    290a:	f1a2 0104 	sub.w	r1, r2, #4
    290e:	683a      	ldr	r2, [r7, #0]
    2910:	b2d2      	uxtb	r2, r2
    2912:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    2916:	b2d2      	uxtb	r2, r2
    2918:	185b      	adds	r3, r3, r1
    291a:	761a      	strb	r2, [r3, #24]
    291c:	e00d      	b.n	293a <NVIC_SetPriority+0x52>
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
    291e:	f44f 4361 	mov.w	r3, #57600	; 0xe100
    2922:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2926:	f997 1007 	ldrsb.w	r1, [r7, #7]
    292a:	683a      	ldr	r2, [r7, #0]
    292c:	b2d2      	uxtb	r2, r2
    292e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    2932:	b2d2      	uxtb	r2, r2
    2934:	185b      	adds	r3, r3, r1
    2936:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
    293a:	f107 070c 	add.w	r7, r7, #12
    293e:	46bd      	mov	sp, r7
    2940:	bc80      	pop	{r7}
    2942:	4770      	bx	lr

00002944 <Init_Timer0>:
//------------------------------------------------------------------------------
//! void Init_Timer0 (void)
//------------------------------------------------------------------------------
//! @brief	initializes timer 0 as system timer
//------------------------------------------------------------------------------
void Init_Timer0 (void){
    2944:	b580      	push	{r7, lr}
    2946:	af00      	add	r7, sp, #0
	NVIC_DisableIRQ ( TIMER0_IRQn);
    2948:	f04f 0001 	mov.w	r0, #1
    294c:	f7ff ffae 	bl	28ac <NVIC_DisableIRQ>
	
	LPC_SC->PCONP  |= 1 << 1; 	// Power on for Timer0
    2950:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2954:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2958:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    295c:	f2c4 020f 	movt	r2, #16399	; 0x400f
    2960:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    2964:	f042 0202 	orr.w	r2, r2, #2
    2968:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4

	LPC_TIM0->TCR = 2;					// Timer0 stop
    296c:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    2970:	f04f 0202 	mov.w	r2, #2
    2974:	605a      	str	r2, [r3, #4]

	// Set Prescaler
	LPC_TIM0->PR = 119; 				// Divide PCLK=120MHz by 120
    2976:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    297a:	f04f 0277 	mov.w	r2, #119	; 0x77
    297e:	60da      	str	r2, [r3, #12]
	//from here Timer0 = 1MHz = 1usec
	
	LPC_TIM0->MCR = 1<<0;
    2980:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    2984:	f04f 0201 	mov.w	r2, #1
    2988:	615a      	str	r2, [r3, #20]

	LPC_TIM0->MR0 = SYSTIME_NOW + 1000;
    298a:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    298e:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    2992:	6892      	ldr	r2, [r2, #8]
    2994:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
    2998:	619a      	str	r2, [r3, #24]
	
	
	// start timer
	LPC_TIM0->IR 	= 0xFFFFFFFF;	// Clear all interrupts
    299a:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    299e:	f04f 32ff 	mov.w	r2, #4294967295
    29a2:	601a      	str	r2, [r3, #0]
	LPC_TIM0->TCR = 1;					// Timer0 start
    29a4:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    29a8:	f04f 0201 	mov.w	r2, #1
    29ac:	605a      	str	r2, [r3, #4]
	
	NVIC_SetPriority ( TIMER0_IRQn, 0);
    29ae:	f04f 0001 	mov.w	r0, #1
    29b2:	f04f 0100 	mov.w	r1, #0
    29b6:	f7ff ff97 	bl	28e8 <NVIC_SetPriority>
	NVIC_EnableIRQ ( TIMER0_IRQn);
    29ba:	f04f 0001 	mov.w	r0, #1
    29be:	f7ff ff59 	bl	2874 <NVIC_EnableIRQ>
}
    29c2:	bd80      	pop	{r7, pc}

000029c4 <TIMER0_IRQHandler>:
//! void  TIMER0_IRQHandler (void)
//------------------------------------------------------------------------------
//! @brief	ISR for timer 0
//------------------------------------------------------------------------------
void  TIMER0_IRQHandler (void)
{
    29c4:	b580      	push	{r7, lr}
    29c6:	af00      	add	r7, sp, #0
	if ( LPC_TIM0->IR & 1) 	// Timer0 interrupt
    29c8:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    29cc:	681b      	ldr	r3, [r3, #0]
    29ce:	f003 0301 	and.w	r3, r3, #1
    29d2:	2b00      	cmp	r3, #0
    29d4:	d00f      	beq.n	29f6 <TIMER0_IRQHandler+0x32>
	{
		// update match value for next interrupt
		LPC_TIM0->MR0 = SYSTIME_NOW + 1000;
    29d6:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    29da:	f04f 2240 	mov.w	r2, #1073758208	; 0x40004000
    29de:	6892      	ldr	r2, [r2, #8]
    29e0:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
    29e4:	619a      	str	r2, [r3, #24]

		LPC_TIM0->IR  = 0x00000001;	// ack this interrupts
    29e6:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    29ea:	f04f 0201 	mov.w	r2, #1
    29ee:	601a      	str	r2, [r3, #0]

		Timer_1000usec();			// process 1000usec task in main.c
    29f0:	f7ff fc62 	bl	22b8 <Timer_1000usec>
    29f4:	e004      	b.n	2a00 <TIMER0_IRQHandler+0x3c>
	}
	else
	{
		LPC_TIM0->IR  = 0x0000003E;		// ack all other interrupts
    29f6:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    29fa:	f04f 023e 	mov.w	r2, #62	; 0x3e
    29fe:	601a      	str	r2, [r3, #0]
	}
}
    2a00:	bd80      	pop	{r7, pc}
    2a02:	bf00      	nop

00002a04 <Wait_Usec>:
//------------------------------------------------------------------------------
//! void	Wait_Usec (u32_t  Usec)
//------------------------------------------------------------------------------
//! @brief	waits n microseconds (blocking).
//------------------------------------------------------------------------------
void Wait_Usec (u32_t  Usec){
    2a04:	b480      	push	{r7}
    2a06:	b085      	sub	sp, #20
    2a08:	af00      	add	r7, sp, #0
    2a0a:	6078      	str	r0, [r7, #4]
	u32_t  TimeStart, TimeNow;

	if (Usec) 
    2a0c:	687b      	ldr	r3, [r7, #4]
    2a0e:	2b00      	cmp	r3, #0
    2a10:	d017      	beq.n	2a42 <Wait_Usec+0x3e>
	{
		TimeStart = SYSTIME_NOW;	
    2a12:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    2a16:	689b      	ldr	r3, [r3, #8]
    2a18:	60fb      	str	r3, [r7, #12]

		do 
		{
			TimeNow = SYSTIME_NOW;
    2a1a:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    2a1e:	689b      	ldr	r3, [r3, #8]
    2a20:	60bb      	str	r3, [r7, #8]
		} 
		while ((SYSTIME_DIFF (TimeStart, TimeNow)) < Usec);
    2a22:	68fa      	ldr	r2, [r7, #12]
    2a24:	68bb      	ldr	r3, [r7, #8]
    2a26:	429a      	cmp	r2, r3
    2a28:	d803      	bhi.n	2a32 <Wait_Usec+0x2e>
    2a2a:	68ba      	ldr	r2, [r7, #8]
    2a2c:	68fb      	ldr	r3, [r7, #12]
    2a2e:	1ad3      	subs	r3, r2, r3
    2a30:	e004      	b.n	2a3c <Wait_Usec+0x38>
    2a32:	68fb      	ldr	r3, [r7, #12]
    2a34:	ea6f 0203 	mvn.w	r2, r3
    2a38:	68bb      	ldr	r3, [r7, #8]
    2a3a:	18d3      	adds	r3, r2, r3
    2a3c:	687a      	ldr	r2, [r7, #4]
    2a3e:	4293      	cmp	r3, r2
    2a40:	d3eb      	bcc.n	2a1a <Wait_Usec+0x16>
	}
}
    2a42:	f107 0714 	add.w	r7, r7, #20
    2a46:	46bd      	mov	sp, r7
    2a48:	bc80      	pop	{r7}
    2a4a:	4770      	bx	lr

00002a4c <NVIC_EnableIRQ>:
    The function enables a device-specific interrupt in the NVIC interrupt controller.

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
    2a4c:	b480      	push	{r7}
    2a4e:	b083      	sub	sp, #12
    2a50:	af00      	add	r7, sp, #0
    2a52:	4603      	mov	r3, r0
    2a54:	71fb      	strb	r3, [r7, #7]
/*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
    2a56:	f44f 4361 	mov.w	r3, #57600	; 0xe100
    2a5a:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2a5e:	f997 2007 	ldrsb.w	r2, [r7, #7]
    2a62:	ea4f 1252 	mov.w	r2, r2, lsr #5
    2a66:	79f9      	ldrb	r1, [r7, #7]
    2a68:	f001 011f 	and.w	r1, r1, #31
    2a6c:	f04f 0001 	mov.w	r0, #1
    2a70:	fa00 f101 	lsl.w	r1, r0, r1
    2a74:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
}
    2a78:	f107 070c 	add.w	r7, r7, #12
    2a7c:	46bd      	mov	sp, r7
    2a7e:	bc80      	pop	{r7}
    2a80:	4770      	bx	lr
    2a82:	bf00      	nop

00002a84 <NVIC_SetPriority>:

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
    2a84:	b480      	push	{r7}
    2a86:	b083      	sub	sp, #12
    2a88:	af00      	add	r7, sp, #0
    2a8a:	4603      	mov	r3, r0
    2a8c:	6039      	str	r1, [r7, #0]
    2a8e:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
    2a90:	f997 3007 	ldrsb.w	r3, [r7, #7]
    2a94:	2b00      	cmp	r3, #0
    2a96:	da10      	bge.n	2aba <NVIC_SetPriority+0x36>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
    2a98:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2a9c:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2aa0:	79fa      	ldrb	r2, [r7, #7]
    2aa2:	f002 020f 	and.w	r2, r2, #15
    2aa6:	f1a2 0104 	sub.w	r1, r2, #4
    2aaa:	683a      	ldr	r2, [r7, #0]
    2aac:	b2d2      	uxtb	r2, r2
    2aae:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    2ab2:	b2d2      	uxtb	r2, r2
    2ab4:	185b      	adds	r3, r3, r1
    2ab6:	761a      	strb	r2, [r3, #24]
    2ab8:	e00d      	b.n	2ad6 <NVIC_SetPriority+0x52>
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
    2aba:	f44f 4361 	mov.w	r3, #57600	; 0xe100
    2abe:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2ac2:	f997 1007 	ldrsb.w	r1, [r7, #7]
    2ac6:	683a      	ldr	r2, [r7, #0]
    2ac8:	b2d2      	uxtb	r2, r2
    2aca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    2ace:	b2d2      	uxtb	r2, r2
    2ad0:	185b      	adds	r3, r3, r1
    2ad2:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
    2ad6:	f107 070c 	add.w	r7, r7, #12
    2ada:	46bd      	mov	sp, r7
    2adc:	bc80      	pop	{r7}
    2ade:	4770      	bx	lr

00002ae0 <CAN_UserWrite>:
//------------------------------------------------------------------------------
//! CANStatus_t CAN_UserWrite(CANMsg_t *pBuff)
//------------------------------------------------------------------------------
//! @brief	Send a message on CAN bus
//------------------------------------------------------------------------------
CANStatus_t CAN_UserWrite(CANMsg_t *pBuff){
    2ae0:	b580      	push	{r7, lr}
    2ae2:	b084      	sub	sp, #16
    2ae4:	af00      	add	r7, sp, #0
    2ae6:	6078      	str	r0, [r7, #4]
	CANStatus_t ret;
	CANMsg_t *pMsg;

	ret = CAN_ERR_OK;
    2ae8:	f04f 0301 	mov.w	r3, #1
    2aec:	60fb      	str	r3, [r7, #12]

	pMsg = CAN_TxQueueGetNext(CAN_HW_BUS2);
    2aee:	f04f 0001 	mov.w	r0, #1
    2af2:	f007 f809 	bl	9b08 <CAN_TxQueueGetNext>
    2af6:	60b8      	str	r0, [r7, #8]

	if (pMsg != NULL) {
    2af8:	68bb      	ldr	r3, [r7, #8]
    2afa:	2b00      	cmp	r3, #0
    2afc:	d019      	beq.n	2b32 <CAN_UserWrite+0x52>
		pMsg->Id = pBuff->Id;
    2afe:	687b      	ldr	r3, [r7, #4]
    2b00:	685a      	ldr	r2, [r3, #4]
    2b02:	68bb      	ldr	r3, [r7, #8]
    2b04:	605a      	str	r2, [r3, #4]
		pMsg->Len = pBuff->Len;
    2b06:	687b      	ldr	r3, [r7, #4]
    2b08:	78da      	ldrb	r2, [r3, #3]
    2b0a:	68bb      	ldr	r3, [r7, #8]
    2b0c:	70da      	strb	r2, [r3, #3]
		pMsg->Type = pBuff->Type;
    2b0e:	687b      	ldr	r3, [r7, #4]
    2b10:	789a      	ldrb	r2, [r3, #2]
    2b12:	68bb      	ldr	r3, [r7, #8]
    2b14:	709a      	strb	r2, [r3, #2]

		pMsg->Data.Data32[0] = pBuff->Data.Data32[0];
    2b16:	687b      	ldr	r3, [r7, #4]
    2b18:	689a      	ldr	r2, [r3, #8]
    2b1a:	68bb      	ldr	r3, [r7, #8]
    2b1c:	609a      	str	r2, [r3, #8]
		pMsg->Data.Data32[1] = pBuff->Data.Data32[1];
    2b1e:	687b      	ldr	r3, [r7, #4]
    2b20:	68da      	ldr	r2, [r3, #12]
    2b22:	68bb      	ldr	r3, [r7, #8]
    2b24:	60da      	str	r2, [r3, #12]

		// Send Msg
		ret = CAN_TxQueueWriteNext(CAN_HW_BUS2);
    2b26:	f04f 0001 	mov.w	r0, #1
    2b2a:	f007 f877 	bl	9c1c <CAN_TxQueueWriteNext>
    2b2e:	60f8      	str	r0, [r7, #12]
    2b30:	e002      	b.n	2b38 <CAN_UserWrite+0x58>
	} else {
		// Tx Queue FULL
		ret = CAN_ERR_FAIL;
    2b32:	f04f 0300 	mov.w	r3, #0
    2b36:	60fb      	str	r3, [r7, #12]
	}

	return ret;
    2b38:	68fb      	ldr	r3, [r7, #12]
}
    2b3a:	4618      	mov	r0, r3
    2b3c:	f107 0710 	add.w	r7, r7, #16
    2b40:	46bd      	mov	sp, r7
    2b42:	bd80      	pop	{r7, pc}

00002b44 <CAN_UserRead>:
//! @brief	Read message from CAN bus
//------------------------------------------------------------------------------
//! @return	 	1 is a message was read
//! 	 		0 otherwise
//------------------------------------------------------------------------------
u32_t CAN_UserRead(CANMsg_t *pBuff) {
    2b44:	b580      	push	{r7, lr}
    2b46:	b084      	sub	sp, #16
    2b48:	af00      	add	r7, sp, #0
    2b4a:	6078      	str	r0, [r7, #4]
	u32_t ret;
	CANMsg_t *pMsg;

	ret = 0;
    2b4c:	f04f 0300 	mov.w	r3, #0
    2b50:	60fb      	str	r3, [r7, #12]

	pMsg = CAN_RxQueueGetNext(CAN_HW_BUS2);
    2b52:	f04f 0001 	mov.w	r0, #1
    2b56:	f007 f81b 	bl	9b90 <CAN_RxQueueGetNext>
    2b5a:	60b8      	str	r0, [r7, #8]

	if (pMsg != NULL) {
    2b5c:	68bb      	ldr	r3, [r7, #8]
    2b5e:	2b00      	cmp	r3, #0
    2b60:	d01a      	beq.n	2b98 <CAN_UserRead+0x54>
		pBuff->Id = pMsg->Id;
    2b62:	68bb      	ldr	r3, [r7, #8]
    2b64:	685a      	ldr	r2, [r3, #4]
    2b66:	687b      	ldr	r3, [r7, #4]
    2b68:	605a      	str	r2, [r3, #4]
		pBuff->Len = pMsg->Len;
    2b6a:	68bb      	ldr	r3, [r7, #8]
    2b6c:	78da      	ldrb	r2, [r3, #3]
    2b6e:	687b      	ldr	r3, [r7, #4]
    2b70:	70da      	strb	r2, [r3, #3]
		pBuff->Type = pMsg->Type;
    2b72:	68bb      	ldr	r3, [r7, #8]
    2b74:	789a      	ldrb	r2, [r3, #2]
    2b76:	687b      	ldr	r3, [r7, #4]
    2b78:	709a      	strb	r2, [r3, #2]

		pBuff->Data.Data32[0] = pMsg->Data.Data32[0];
    2b7a:	68bb      	ldr	r3, [r7, #8]
    2b7c:	689a      	ldr	r2, [r3, #8]
    2b7e:	687b      	ldr	r3, [r7, #4]
    2b80:	609a      	str	r2, [r3, #8]
		pBuff->Data.Data32[1] = pMsg->Data.Data32[1];
    2b82:	68bb      	ldr	r3, [r7, #8]
    2b84:	68da      	ldr	r2, [r3, #12]
    2b86:	687b      	ldr	r3, [r7, #4]
    2b88:	60da      	str	r2, [r3, #12]

		CAN_RxQueueReadNext(CAN_HW_BUS2);
    2b8a:	f04f 0001 	mov.w	r0, #1
    2b8e:	f007 f927 	bl	9de0 <CAN_RxQueueReadNext>
		ret = 1;
    2b92:	f04f 0301 	mov.w	r3, #1
    2b96:	60fb      	str	r3, [r7, #12]
	}

	return ret;
    2b98:	68fb      	ldr	r3, [r7, #12]
}
    2b9a:	4618      	mov	r0, r3
    2b9c:	f107 0710 	add.w	r7, r7, #16
    2ba0:	46bd      	mov	sp, r7
    2ba2:	bd80      	pop	{r7, pc}

00002ba4 <CAN_UserInit>:
//------------------------------------------------------------------------------
//! void CAN_UserInit(void)
//------------------------------------------------------------------------------
//! @brief	Initializes CAN bus
//------------------------------------------------------------------------------
void CAN_UserInit(void) {
    2ba4:	b580      	push	{r7, lr}
    2ba6:	af00      	add	r7, sp, #0

	CAN_SetBusMode(CAN_HW_BUS2, BUS_OFF);					// CAN Bus On
    2ba8:	f04f 0001 	mov.w	r0, #1
    2bac:	f04f 0101 	mov.w	r1, #1
    2bb0:	f006 ff5c 	bl	9a6c <CAN_SetBusMode>

	//! init CAN interface
	CAN_ReferenceTxQueue(CAN_HW_BUS2, &TxQueueCAN1[0], CAN_TX_QUEUE_SIZE);	// Reference above Arrays as Queues
    2bb4:	f04f 0001 	mov.w	r0, #1
    2bb8:	f640 4190 	movw	r1, #3216	; 0xc90
    2bbc:	f2c1 0100 	movt	r1, #4096	; 0x1000
    2bc0:	f04f 0210 	mov.w	r2, #16
    2bc4:	f006 fd7c 	bl	96c0 <CAN_ReferenceTxQueue>
	CAN_ReferenceRxQueue(CAN_HW_BUS2, &RxQueueCAN1[0], CAN_RX_QUEUE_SIZE);
    2bc8:	f04f 0001 	mov.w	r0, #1
    2bcc:	f640 5190 	movw	r1, #3472	; 0xd90
    2bd0:	f2c1 0100 	movt	r1, #4096	; 0x1000
    2bd4:	f04f 0208 	mov.w	r2, #8
    2bd8:	f006 fdba 	bl	9750 <CAN_ReferenceRxQueue>

	CAN_SetTimestampHandler(CAN_HW_BUS2, NULL);
    2bdc:	f04f 0001 	mov.w	r0, #1
    2be0:	f04f 0100 	mov.w	r1, #0
    2be4:	f006 fe30 	bl	9848 <CAN_SetTimestampHandler>

	CAN_SetErrorLimit(CAN_HW_BUS2, STD_TX_ERRORLIMIT);
    2be8:	f04f 0001 	mov.w	r0, #1
    2bec:	f04f 0160 	mov.w	r1, #96	; 0x60
    2bf0:	f006 fe58 	bl	98a4 <CAN_SetErrorLimit>

	CAN_SetTxErrorCallback(CAN_HW_BUS2, NULL);	// Set ErrorLimit & Callbacks
    2bf4:	f04f 0001 	mov.w	r0, #1
    2bf8:	f04f 0100 	mov.w	r1, #0
    2bfc:	f006 ff08 	bl	9a10 <CAN_SetTxErrorCallback>
	CAN_SetRxCallback(CAN_HW_BUS2, NULL);
    2c00:	f04f 0001 	mov.w	r0, #1
    2c04:	f04f 0100 	mov.w	r1, #0
    2c08:	f006 fe7c 	bl	9904 <CAN_SetRxCallback>

	CAN_SetChannelInfo(CAN_HW_BUS2, NULL);					// Textinfo is NULL
    2c0c:	f04f 0001 	mov.w	r0, #1
    2c10:	f04f 0100 	mov.w	r1, #0
    2c14:	f006 fea4 	bl	9960 <CAN_SetChannelInfo>

	// Setup Filters
	CAN_InitFilters();										// Clear Filter LUT
    2c18:	f007 fd4c 	bl	a6b4 <CAN_InitFilters>
	CAN_SetFilterMode(AF_ON_BYPASS_ON);			// No Filters ( Bypassed)
    2c1c:	f04f 0002 	mov.w	r0, #2
    2c20:	f007 fd2e 	bl	a680 <CAN_SetFilterMode>

	//! init CAN 
	CAN_InitChannel(CAN_HW_BUS2, CAN_BAUD_500K);
    2c24:	f04f 0001 	mov.w	r0, #1
    2c28:	f04f 010f 	mov.w	r1, #15
    2c2c:	f2c0 012a 	movt	r1, #42	; 0x2a
    2c30:	f007 fd82 	bl	a738 <CAN_InitChannel>

	//! bring tranceivers into normal mode
	CAN_SetTransceiverMode(CAN_HW_BUS2, CAN_TRANSCEIVER_MODE_NORMAL);
    2c34:	f04f 0001 	mov.w	r0, #1
    2c38:	f04f 0100 	mov.w	r1, #0
    2c3c:	f007 f97e 	bl	9f3c <CAN_SetTransceiverMode>

	NVIC_SetPriority(CAN_IRQn, 0);
    2c40:	f04f 0019 	mov.w	r0, #25
    2c44:	f04f 0100 	mov.w	r1, #0
    2c48:	f7ff ff1c 	bl	2a84 <NVIC_SetPriority>
	NVIC_EnableIRQ(CAN_IRQn);
    2c4c:	f04f 0019 	mov.w	r0, #25
    2c50:	f7ff fefc 	bl	2a4c <NVIC_EnableIRQ>

	//! Busses on
	CAN_SetBusMode(CAN_HW_BUS2, BUS_ON);					// CAN Bus On
    2c54:	f04f 0001 	mov.w	r0, #1
    2c58:	f04f 0100 	mov.w	r1, #0
    2c5c:	f006 ff06 	bl	9a6c <CAN_SetBusMode>

	return;
    2c60:	bf00      	nop
}
    2c62:	bd80      	pop	{r7, pc}

00002c64 <CAN_UserSendBMCData>:
//------------------------------------------------------------------------------
//! void CAN_UserSendBMCData(void)
//------------------------------------------------------------------------------
//! @brief	Sends last read data of the BMC050 sensor
//------------------------------------------------------------------------------
void CAN_UserSendBMCData(void){
    2c64:	b580      	push	{r7, lr}
    2c66:	b086      	sub	sp, #24
    2c68:	af00      	add	r7, sp, #0
	CANMsg_t TxMsg;
	u8_t tmp8u=0;
    2c6a:	f04f 0300 	mov.w	r3, #0
    2c6e:	75fb      	strb	r3, [r7, #23]

	TxMsg.Id  = SYM_BMC_ACCELERATION;
    2c70:	f44f 63c4 	mov.w	r3, #1568	; 0x620
    2c74:	607b      	str	r3, [r7, #4]
	TxMsg.Len = 8;
    2c76:	f04f 0308 	mov.w	r3, #8
    2c7a:	70fb      	strb	r3, [r7, #3]
	TxMsg.Type = CAN_MSG_STANDARD;
    2c7c:	f04f 0300 	mov.w	r3, #0
    2c80:	70bb      	strb	r3, [r7, #2]
	TxMsg.Data.Data16[0] = BMC050_Readings.Acceleration_X;
    2c82:	f640 6348 	movw	r3, #3656	; 0xe48
    2c86:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2c8a:	885b      	ldrh	r3, [r3, #2]
    2c8c:	b29b      	uxth	r3, r3
    2c8e:	813b      	strh	r3, [r7, #8]
	TxMsg.Data.Data16[1] = BMC050_Readings.Acceleration_Y;
    2c90:	f640 6348 	movw	r3, #3656	; 0xe48
    2c94:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2c98:	889b      	ldrh	r3, [r3, #4]
    2c9a:	b29b      	uxth	r3, r3
    2c9c:	817b      	strh	r3, [r7, #10]
	TxMsg.Data.Data16[2] = BMC050_Readings.Acceleration_Z;
    2c9e:	f640 6348 	movw	r3, #3656	; 0xe48
    2ca2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2ca6:	88db      	ldrh	r3, [r3, #6]
    2ca8:	b29b      	uxth	r3, r3
    2caa:	81bb      	strh	r3, [r7, #12]
	TxMsg.Data.Data8[6] = BMC050_Readings.Temperature;
    2cac:	f640 6348 	movw	r3, #3656	; 0xe48
    2cb0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2cb4:	7a1b      	ldrb	r3, [r3, #8]
    2cb6:	73bb      	strb	r3, [r7, #14]
//	MEMS_BMC050_GetVertialAxis(&tmp8u);
	TxMsg.Data.Data8[7] = (tmp8u&0x3) | (BMC050_Readings.orientation&0x7)<<2;
    2cb8:	7dfb      	ldrb	r3, [r7, #23]
    2cba:	f003 0303 	and.w	r3, r3, #3
    2cbe:	b2da      	uxtb	r2, r3
    2cc0:	f640 6348 	movw	r3, #3656	; 0xe48
    2cc4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2cc8:	7c1b      	ldrb	r3, [r3, #16]
    2cca:	f003 0307 	and.w	r3, r3, #7
    2cce:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2cd2:	b2db      	uxtb	r3, r3
    2cd4:	4313      	orrs	r3, r2
    2cd6:	b2db      	uxtb	r3, r3
    2cd8:	b2db      	uxtb	r3, r3
    2cda:	73fb      	strb	r3, [r7, #15]
	CAN_UserWrite(&TxMsg);
    2cdc:	463b      	mov	r3, r7
    2cde:	4618      	mov	r0, r3
    2ce0:	f7ff fefe 	bl	2ae0 <CAN_UserWrite>
//	TxMsg.Data.Data16[1] = BMC050_Readings.MagField_Y;
//	TxMsg.Data.Data16[2] = BMC050_Readings.MagField_Z;
//	CAN_UserWrite(&TxMsg);

	// allow task for reading new values
	BMC050_Readings.data_valid = FALSE;
    2ce4:	f640 6348 	movw	r3, #3656	; 0xe48
    2ce8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2cec:	f04f 0200 	mov.w	r2, #0
    2cf0:	745a      	strb	r2, [r3, #17]

	return;
}
    2cf2:	f107 0718 	add.w	r7, r7, #24
    2cf6:	46bd      	mov	sp, r7
    2cf8:	bd80      	pop	{r7, pc}
    2cfa:	bf00      	nop

00002cfc <CAN_UserSendL3GDData>:
//------------------------------------------------------------------------------
//! void CAN_UserSendL3GDData(void)
//------------------------------------------------------------------------------
//! @brief	Sends last read data of the L3GD20 sensor
//------------------------------------------------------------------------------
void CAN_UserSendL3GDData(void){
    2cfc:	b580      	push	{r7, lr}
    2cfe:	b084      	sub	sp, #16
    2d00:	af00      	add	r7, sp, #0
	CANMsg_t TxMsg;

	TxMsg.Id = SYM_L3GD_ROTATION_01;
    2d02:	f240 6322 	movw	r3, #1570	; 0x622
    2d06:	607b      	str	r3, [r7, #4]
	TxMsg.Len = 8;
    2d08:	f04f 0308 	mov.w	r3, #8
    2d0c:	70fb      	strb	r3, [r7, #3]
	TxMsg.Type = CAN_MSG_STANDARD;
    2d0e:	f04f 0300 	mov.w	r3, #0
    2d12:	70bb      	strb	r3, [r7, #2]
	TxMsg.Data.Data16s[0] = L3GD20_Readings.Gyro_X;
    2d14:	f640 6380 	movw	r3, #3712	; 0xe80
    2d18:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2d1c:	885b      	ldrh	r3, [r3, #2]
    2d1e:	813b      	strh	r3, [r7, #8]
	TxMsg.Data.Data16s[1] = L3GD20_Readings.Gyro_Y;
    2d20:	f640 6380 	movw	r3, #3712	; 0xe80
    2d24:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2d28:	889b      	ldrh	r3, [r3, #4]
    2d2a:	817b      	strh	r3, [r7, #10]
	TxMsg.Data.Data16s[2] = L3GD20_Readings.Gyro_Z;
    2d2c:	f640 6380 	movw	r3, #3712	; 0xe80
    2d30:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2d34:	88db      	ldrh	r3, [r3, #6]
    2d36:	81bb      	strh	r3, [r7, #12]
	CAN_UserWrite(&TxMsg);
    2d38:	463b      	mov	r3, r7
    2d3a:	4618      	mov	r0, r3
    2d3c:	f7ff fed0 	bl	2ae0 <CAN_UserWrite>
//	TxMsg.Type = CAN_MSG_STANDARD;
//	TxMsg.Data.DataFlt[0] = L3GD20_Readings.Gyro_Z;
//	CAN_UserWrite(&TxMsg);

	return;
}
    2d40:	f107 0710 	add.w	r7, r7, #16
    2d44:	46bd      	mov	sp, r7
    2d46:	bd80      	pop	{r7, pc}

00002d48 <CAN_UserSendGPSData>:
//------------------------------------------------------------------------------
//! void CAN_UserSendGPSData(void)
//------------------------------------------------------------------------------
//! @brief	Sends latest GPS data
//------------------------------------------------------------------------------
void CAN_UserSendGPSData(void){
    2d48:	b590      	push	{r4, r7, lr}
    2d4a:	b089      	sub	sp, #36	; 0x24
    2d4c:	af00      	add	r7, sp, #0
	CANMsg_t TxMsg;
	double frc_tmp, int_tmp;

	TxMsg.Id = SYM_GPS_STATUS;
    2d4e:	f240 6324 	movw	r3, #1572	; 0x624
    2d52:	60fb      	str	r3, [r7, #12]
	TxMsg.Len = 3;
    2d54:	f04f 0303 	mov.w	r3, #3
    2d58:	72fb      	strb	r3, [r7, #11]
	TxMsg.Type = CAN_MSG_STANDARD;
    2d5a:	f04f 0300 	mov.w	r3, #0
    2d5e:	72bb      	strb	r3, [r7, #10]
	TxMsg.Data.Data8[0] = MAX7W_Readings.Gps_AntennaStatus; // (0=INIT, 1=DONTKNOW, 2=OK, 3=SHORT, 4=OPEN)
    2d60:	f640 6310 	movw	r3, #3600	; 0xe10
    2d64:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2d68:	781b      	ldrb	r3, [r3, #0]
    2d6a:	743b      	strb	r3, [r7, #16]
	TxMsg.Data.Data8[1] = MAX7W_Readings.Nav_NumSatellites;
    2d6c:	f640 6310 	movw	r3, #3600	; 0xe10
    2d70:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2d74:	785b      	ldrb	r3, [r3, #1]
    2d76:	747b      	strb	r3, [r7, #17]
	TxMsg.Data.Data8[2] = MAX7W_Readings.Nav_Method;      	// None / 2D / 3D
    2d78:	f640 6310 	movw	r3, #3600	; 0xe10
    2d7c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2d80:	789b      	ldrb	r3, [r3, #2]
    2d82:	74bb      	strb	r3, [r7, #18]
	CAN_UserWrite(&TxMsg);
    2d84:	f107 0308 	add.w	r3, r7, #8
    2d88:	4618      	mov	r0, r3
    2d8a:	f7ff fea9 	bl	2ae0 <CAN_UserWrite>

	TxMsg.Id = SYM_GPS_COURSE_SPEED;
    2d8e:	f240 6325 	movw	r3, #1573	; 0x625
    2d92:	60fb      	str	r3, [r7, #12]
	TxMsg.Len = 8;
    2d94:	f04f 0308 	mov.w	r3, #8
    2d98:	72fb      	strb	r3, [r7, #11]
	TxMsg.Type = CAN_MSG_STANDARD;
    2d9a:	f04f 0300 	mov.w	r3, #0
    2d9e:	72bb      	strb	r3, [r7, #10]
	TxMsg.Data.DataFlt[0] = MAX7W_Readings.Nav_CourseOverGround;
    2da0:	f640 6310 	movw	r3, #3600	; 0xe10
    2da4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2da8:	689b      	ldr	r3, [r3, #8]
    2daa:	613b      	str	r3, [r7, #16]
	TxMsg.Data.DataFlt[1] = MAX7W_Readings.Nav_SpeedOverGroundKmh;
    2dac:	f640 6310 	movw	r3, #3600	; 0xe10
    2db0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2db4:	685b      	ldr	r3, [r3, #4]
    2db6:	617b      	str	r3, [r7, #20]
	CAN_UserWrite(&TxMsg);
    2db8:	f107 0308 	add.w	r3, r7, #8
    2dbc:	4618      	mov	r0, r3
    2dbe:	f7ff fe8f 	bl	2ae0 <CAN_UserWrite>

	TxMsg.Id = SYM_GPS_POS_LONGITUDE;
    2dc2:	f240 6326 	movw	r3, #1574	; 0x626
    2dc6:	60fb      	str	r3, [r7, #12]
	TxMsg.Len = 7;
    2dc8:	f04f 0307 	mov.w	r3, #7
    2dcc:	72fb      	strb	r3, [r7, #11]
	TxMsg.Type = CAN_MSG_STANDARD;
    2dce:	f04f 0300 	mov.w	r3, #0
    2dd2:	72bb      	strb	r3, [r7, #10]
	frc_tmp = modf((MAX7W_Readings.Pos_Longitude/100), &int_tmp);
    2dd4:	f640 6310 	movw	r3, #3600	; 0xe10
    2dd8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2ddc:	68db      	ldr	r3, [r3, #12]
    2dde:	4618      	mov	r0, r3
    2de0:	4971      	ldr	r1, [pc, #452]	; (2fa8 <CAN_UserSendGPSData+0x260>)
    2de2:	f00d fd1d 	bl	10820 <__aeabi_fdiv>
    2de6:	4603      	mov	r3, r0
    2de8:	4618      	mov	r0, r3
    2dea:	f00d f8df 	bl	ffac <__aeabi_f2d>
    2dee:	4602      	mov	r2, r0
    2df0:	460b      	mov	r3, r1
    2df2:	463c      	mov	r4, r7
    2df4:	4610      	mov	r0, r2
    2df6:	4619      	mov	r1, r3
    2df8:	4622      	mov	r2, r4
    2dfa:	f009 ff53 	bl	cca4 <modf>
    2dfe:	e9c7 0106 	strd	r0, r1, [r7, #24]
	TxMsg.Data.DataFlt[0]= (float) frc_tmp*100;
    2e02:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
    2e06:	f00d fc07 	bl	10618 <__aeabi_d2f>
    2e0a:	4603      	mov	r3, r0
    2e0c:	4618      	mov	r0, r3
    2e0e:	4966      	ldr	r1, [pc, #408]	; (2fa8 <CAN_UserSendGPSData+0x260>)
    2e10:	f00d fc52 	bl	106b8 <__aeabi_fmul>
    2e14:	4603      	mov	r3, r0
    2e16:	613b      	str	r3, [r7, #16]
	TxMsg.Data.Data16[2] = (u16_t)int_tmp;
    2e18:	e9d7 2300 	ldrd	r2, r3, [r7]
    2e1c:	4610      	mov	r0, r2
    2e1e:	4619      	mov	r1, r3
    2e20:	f00d fbda 	bl	105d8 <__aeabi_d2uiz>
    2e24:	4603      	mov	r3, r0
    2e26:	b29b      	uxth	r3, r3
    2e28:	82bb      	strh	r3, [r7, #20]
	TxMsg.Data.Data8[6] = MAX7W_Readings.Pos_LongitudeIndEW;
    2e2a:	f640 6310 	movw	r3, #3600	; 0xe10
    2e2e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2e32:	7c1b      	ldrb	r3, [r3, #16]
    2e34:	75bb      	strb	r3, [r7, #22]
	CAN_UserWrite(&TxMsg);
    2e36:	f107 0308 	add.w	r3, r7, #8
    2e3a:	4618      	mov	r0, r3
    2e3c:	f7ff fe50 	bl	2ae0 <CAN_UserWrite>

	TxMsg.Id = SYM_GPS_POS_LATITUDE;
    2e40:	f240 6327 	movw	r3, #1575	; 0x627
    2e44:	60fb      	str	r3, [r7, #12]
	TxMsg.Len = 7;
    2e46:	f04f 0307 	mov.w	r3, #7
    2e4a:	72fb      	strb	r3, [r7, #11]
	TxMsg.Type = CAN_MSG_STANDARD;
    2e4c:	f04f 0300 	mov.w	r3, #0
    2e50:	72bb      	strb	r3, [r7, #10]
	frc_tmp = modf((MAX7W_Readings.Pos_Latitude/100), &int_tmp);
    2e52:	f640 6310 	movw	r3, #3600	; 0xe10
    2e56:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2e5a:	695b      	ldr	r3, [r3, #20]
    2e5c:	4618      	mov	r0, r3
    2e5e:	4952      	ldr	r1, [pc, #328]	; (2fa8 <CAN_UserSendGPSData+0x260>)
    2e60:	f00d fcde 	bl	10820 <__aeabi_fdiv>
    2e64:	4603      	mov	r3, r0
    2e66:	4618      	mov	r0, r3
    2e68:	f00d f8a0 	bl	ffac <__aeabi_f2d>
    2e6c:	4602      	mov	r2, r0
    2e6e:	460b      	mov	r3, r1
    2e70:	463c      	mov	r4, r7
    2e72:	4610      	mov	r0, r2
    2e74:	4619      	mov	r1, r3
    2e76:	4622      	mov	r2, r4
    2e78:	f009 ff14 	bl	cca4 <modf>
    2e7c:	e9c7 0106 	strd	r0, r1, [r7, #24]
	TxMsg.Data.DataFlt[0]= (float) frc_tmp*100;
    2e80:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
    2e84:	f00d fbc8 	bl	10618 <__aeabi_d2f>
    2e88:	4603      	mov	r3, r0
    2e8a:	4618      	mov	r0, r3
    2e8c:	4946      	ldr	r1, [pc, #280]	; (2fa8 <CAN_UserSendGPSData+0x260>)
    2e8e:	f00d fc13 	bl	106b8 <__aeabi_fmul>
    2e92:	4603      	mov	r3, r0
    2e94:	613b      	str	r3, [r7, #16]
	TxMsg.Data.Data16[2] = (u16_t)int_tmp;
    2e96:	e9d7 2300 	ldrd	r2, r3, [r7]
    2e9a:	4610      	mov	r0, r2
    2e9c:	4619      	mov	r1, r3
    2e9e:	f00d fb9b 	bl	105d8 <__aeabi_d2uiz>
    2ea2:	4603      	mov	r3, r0
    2ea4:	b29b      	uxth	r3, r3
    2ea6:	82bb      	strh	r3, [r7, #20]
	TxMsg.Data.Data8[6] = MAX7W_Readings.Pos_LatitudeIndNS;
    2ea8:	f640 6310 	movw	r3, #3600	; 0xe10
    2eac:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2eb0:	7e1b      	ldrb	r3, [r3, #24]
    2eb2:	75bb      	strb	r3, [r7, #22]
	CAN_UserWrite(&TxMsg);
    2eb4:	f107 0308 	add.w	r3, r7, #8
    2eb8:	4618      	mov	r0, r3
    2eba:	f7ff fe11 	bl	2ae0 <CAN_UserWrite>

	TxMsg.Id = SYM_GPS_POS_ALTITUDE;
    2ebe:	f44f 63c5 	mov.w	r3, #1576	; 0x628
    2ec2:	60fb      	str	r3, [r7, #12]
	TxMsg.Len = 4;
    2ec4:	f04f 0304 	mov.w	r3, #4
    2ec8:	72fb      	strb	r3, [r7, #11]
	TxMsg.Type = CAN_MSG_STANDARD;
    2eca:	f04f 0300 	mov.w	r3, #0
    2ece:	72bb      	strb	r3, [r7, #10]
	TxMsg.Data.DataFlt[0] = MAX7W_Readings.Pos_AltitudeOverSea;
    2ed0:	f640 6310 	movw	r3, #3600	; 0xe10
    2ed4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2ed8:	69db      	ldr	r3, [r3, #28]
    2eda:	613b      	str	r3, [r7, #16]
	CAN_UserWrite(&TxMsg);
    2edc:	f107 0308 	add.w	r3, r7, #8
    2ee0:	4618      	mov	r0, r3
    2ee2:	f7ff fdfd 	bl	2ae0 <CAN_UserWrite>

	TxMsg.Id = SYM_GPS_DELUSIONS_01;
    2ee6:	f240 5325 	movw	r3, #1317	; 0x525
    2eea:	60fb      	str	r3, [r7, #12]
	TxMsg.Len = 8;
    2eec:	f04f 0308 	mov.w	r3, #8
    2ef0:	72fb      	strb	r3, [r7, #11]
	TxMsg.Type = CAN_MSG_STANDARD;
    2ef2:	f04f 0300 	mov.w	r3, #0
    2ef6:	72bb      	strb	r3, [r7, #10]
	TxMsg.Data.DataFlt[0] = MAX7W_Readings.PDOP;
    2ef8:	f640 6310 	movw	r3, #3600	; 0xe10
    2efc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2f00:	6a1b      	ldr	r3, [r3, #32]
    2f02:	613b      	str	r3, [r7, #16]
	TxMsg.Data.DataFlt[1] = MAX7W_Readings.HDOP;
    2f04:	f640 6310 	movw	r3, #3600	; 0xe10
    2f08:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2f0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    2f0e:	617b      	str	r3, [r7, #20]
//	CAN_UserWrite(&TxMsg);

	TxMsg.Id = SYM_GPS_DELUSIONS_02;
    2f10:	f240 5326 	movw	r3, #1318	; 0x526
    2f14:	60fb      	str	r3, [r7, #12]
	TxMsg.Len = 4;
    2f16:	f04f 0304 	mov.w	r3, #4
    2f1a:	72fb      	strb	r3, [r7, #11]
	TxMsg.Type = CAN_MSG_STANDARD;
    2f1c:	f04f 0300 	mov.w	r3, #0
    2f20:	72bb      	strb	r3, [r7, #10]
	TxMsg.Data.DataFlt[0] = MAX7W_Readings.VDOP;
    2f22:	f640 6310 	movw	r3, #3600	; 0xe10
    2f26:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2f2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2f2c:	613b      	str	r3, [r7, #16]
//	CAN_UserWrite(&TxMsg);

	TxMsg.Id = SYM_GPS_DATE_TIME;
    2f2e:	f240 6329 	movw	r3, #1577	; 0x629
    2f32:	60fb      	str	r3, [r7, #12]
	TxMsg.Len = 6;
    2f34:	f04f 0306 	mov.w	r3, #6
    2f38:	72fb      	strb	r3, [r7, #11]
	TxMsg.Type = CAN_MSG_STANDARD;
    2f3a:	f04f 0300 	mov.w	r3, #0
    2f3e:	72bb      	strb	r3, [r7, #10]
	TxMsg.Data.Data8[0] = MAX7W_Readings.Date_Year;
    2f40:	f640 6310 	movw	r3, #3600	; 0xe10
    2f44:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2f48:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
    2f4c:	743b      	strb	r3, [r7, #16]
	TxMsg.Data.Data8[1] = MAX7W_Readings.Date_Month;
    2f4e:	f640 6310 	movw	r3, #3600	; 0xe10
    2f52:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2f56:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
    2f5a:	747b      	strb	r3, [r7, #17]
	TxMsg.Data.Data8[2] = MAX7W_Readings.Date_DayOfMonth;
    2f5c:	f640 6310 	movw	r3, #3600	; 0xe10
    2f60:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2f64:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
    2f68:	74bb      	strb	r3, [r7, #18]
	TxMsg.Data.Data8[3] = MAX7W_Readings.Time_Hrs;
    2f6a:	f640 6310 	movw	r3, #3600	; 0xe10
    2f6e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2f72:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
    2f76:	74fb      	strb	r3, [r7, #19]
	TxMsg.Data.Data8[4] = MAX7W_Readings.Time_Min;
    2f78:	f640 6310 	movw	r3, #3600	; 0xe10
    2f7c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2f80:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
    2f84:	753b      	strb	r3, [r7, #20]
	TxMsg.Data.Data8[5] = MAX7W_Readings.Time_Sec;
    2f86:	f640 6310 	movw	r3, #3600	; 0xe10
    2f8a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    2f8e:	f893 302e 	ldrb.w	r3, [r3, #46]	; 0x2e
    2f92:	757b      	strb	r3, [r7, #21]
	CAN_UserWrite(&TxMsg);
    2f94:	f107 0308 	add.w	r3, r7, #8
    2f98:	4618      	mov	r0, r3
    2f9a:	f7ff fda1 	bl	2ae0 <CAN_UserWrite>

	return;
}
    2f9e:	f107 0724 	add.w	r7, r7, #36	; 0x24
    2fa2:	46bd      	mov	sp, r7
    2fa4:	bd90      	pop	{r4, r7, pc}
    2fa6:	bf00      	nop
    2fa8:	42c80000 	.word	0x42c80000

00002fac <CAN_UserSendDioData>:
//------------------------------------------------------------------------------
//! void CAN_UserSendDioData(void)
//------------------------------------------------------------------------------
//! @brief	Sends current IO values
//------------------------------------------------------------------------------
void CAN_UserSendDioData(void){
    2fac:	b580      	push	{r7, lr}
    2fae:	b086      	sub	sp, #24
    2fb0:	af00      	add	r7, sp, #0
	CANMsg_t TxMsg;
	u32_t tmp32=0;
    2fb2:	f04f 0300 	mov.w	r3, #0
    2fb6:	607b      	str	r3, [r7, #4]
	u8_t tmp8=0;
    2fb8:	f04f 0300 	mov.w	r3, #0
    2fbc:	70fb      	strb	r3, [r7, #3]

	TxMsg.Id = SYM_IO;
    2fbe:	f44f 63a6 	mov.w	r3, #1328	; 0x530
    2fc2:	60fb      	str	r3, [r7, #12]
	TxMsg.Len = 1;
    2fc4:	f04f 0301 	mov.w	r3, #1
    2fc8:	72fb      	strb	r3, [r7, #11]
	TxMsg.Type = CAN_MSG_STANDARD;
    2fca:	f04f 0300 	mov.w	r3, #0
    2fce:	72bb      	strb	r3, [r7, #10]
	TxMsg.Data.Data8[0] = tmp8;
    2fd0:	78fb      	ldrb	r3, [r7, #3]
    2fd2:	743b      	strb	r3, [r7, #16]

	HW_GetDIN(&tmp32);
    2fd4:	f107 0304 	add.w	r3, r7, #4
    2fd8:	4618      	mov	r0, r3
    2fda:	f005 fb23 	bl	8624 <HW_GetDIN>
	TxMsg.Data.Data8[0] = (u8_t) (tmp32&0x3);
    2fde:	687b      	ldr	r3, [r7, #4]
    2fe0:	b2db      	uxtb	r3, r3
    2fe2:	f003 0303 	and.w	r3, r3, #3
    2fe6:	b2db      	uxtb	r3, r3
    2fe8:	743b      	strb	r3, [r7, #16]

	HW_GetDOUT(&tmp32);
    2fea:	f107 0304 	add.w	r3, r7, #4
    2fee:	4618      	mov	r0, r3
    2ff0:	f005 fbb2 	bl	8758 <HW_GetDOUT>
	TxMsg.Data.Data8[0] |= (u8_t) (tmp32&0x1)<<2;
    2ff4:	7c3b      	ldrb	r3, [r7, #16]
    2ff6:	b2da      	uxtb	r2, r3
    2ff8:	687b      	ldr	r3, [r7, #4]
    2ffa:	b2db      	uxtb	r3, r3
    2ffc:	f003 0301 	and.w	r3, r3, #1
    3000:	ea4f 0383 	mov.w	r3, r3, lsl #2
    3004:	b2db      	uxtb	r3, r3
    3006:	4313      	orrs	r3, r2
    3008:	b2db      	uxtb	r3, r3
    300a:	b2db      	uxtb	r3, r3
    300c:	743b      	strb	r3, [r7, #16]

	HW_SDCardPresent(&tmp8);
    300e:	f107 0303 	add.w	r3, r7, #3
    3012:	4618      	mov	r0, r3
    3014:	f005 f968 	bl	82e8 <HW_SDCardPresent>
	TxMsg.Data.Data8[0] |= (tmp8&0x1)<<3;
    3018:	7c3b      	ldrb	r3, [r7, #16]
    301a:	b2da      	uxtb	r2, r3
    301c:	78fb      	ldrb	r3, [r7, #3]
    301e:	f003 0301 	and.w	r3, r3, #1
    3022:	ea4f 03c3 	mov.w	r3, r3, lsl #3
    3026:	b2db      	uxtb	r3, r3
    3028:	4313      	orrs	r3, r2
    302a:	b2db      	uxtb	r3, r3
    302c:	b2db      	uxtb	r3, r3
    302e:	743b      	strb	r3, [r7, #16]

	tmp8 = HW_GPS_GetPowerState();
    3030:	f004 ff72 	bl	7f18 <HW_GPS_GetPowerState>
    3034:	4603      	mov	r3, r0
    3036:	70fb      	strb	r3, [r7, #3]
	TxMsg.Data.Data8[0] |= (tmp8&0x1)<<4;
    3038:	7c3b      	ldrb	r3, [r7, #16]
    303a:	b2da      	uxtb	r2, r3
    303c:	78fb      	ldrb	r3, [r7, #3]
    303e:	f003 0301 	and.w	r3, r3, #1
    3042:	ea4f 1303 	mov.w	r3, r3, lsl #4
    3046:	b2db      	uxtb	r3, r3
    3048:	4313      	orrs	r3, r2
    304a:	b2db      	uxtb	r3, r3
    304c:	b2db      	uxtb	r3, r3
    304e:	743b      	strb	r3, [r7, #16]

	HW_GetModuleID(&tmp8);
    3050:	f107 0303 	add.w	r3, r7, #3
    3054:	4618      	mov	r0, r3
    3056:	f005 f96d 	bl	8334 <HW_GetModuleID>
	TxMsg.Data.Data8[0] |= (tmp8&0x7)<<5;
    305a:	7c3b      	ldrb	r3, [r7, #16]
    305c:	b2da      	uxtb	r2, r3
    305e:	78fb      	ldrb	r3, [r7, #3]
    3060:	ea4f 1343 	mov.w	r3, r3, lsl #5
    3064:	b2db      	uxtb	r3, r3
    3066:	4313      	orrs	r3, r2
    3068:	b2db      	uxtb	r3, r3
    306a:	b2db      	uxtb	r3, r3
    306c:	743b      	strb	r3, [r7, #16]

//	CAN_UserWrite(&TxMsg);

	return;
}
    306e:	f107 0718 	add.w	r7, r7, #24
    3072:	46bd      	mov	sp, r7
    3074:	bd80      	pop	{r7, pc}
    3076:	bf00      	nop

00003078 <CAN_UserSendRTCTime>:
//------------------------------------------------------------------------------
//! void CAN_UserSendRTCTime(void)
//------------------------------------------------------------------------------
//! @brief	Sends current RTC time
//------------------------------------------------------------------------------
void CAN_UserSendRTCTime(void){
    3078:	b580      	push	{r7, lr}
    307a:	b086      	sub	sp, #24
    307c:	af00      	add	r7, sp, #0
	RTC rtc;
	CANMsg_t TxMsg;

 	rtc_gettime(&rtc);
    307e:	f107 0310 	add.w	r3, r7, #16
    3082:	4618      	mov	r0, r3
    3084:	f002 ffba 	bl	5ffc <rtc_gettime>

	TxMsg.Id = SYM_RTC_TIME;
    3088:	f44f 63a8 	mov.w	r3, #1344	; 0x540
    308c:	607b      	str	r3, [r7, #4]
	TxMsg.Len = 8;
    308e:	f04f 0308 	mov.w	r3, #8
    3092:	70fb      	strb	r3, [r7, #3]
	TxMsg.Type = CAN_MSG_STANDARD;
    3094:	f04f 0300 	mov.w	r3, #0
    3098:	70bb      	strb	r3, [r7, #2]
	TxMsg.Data.Data8[0] = rtc.sec;
    309a:	7dfb      	ldrb	r3, [r7, #23]
    309c:	723b      	strb	r3, [r7, #8]
	TxMsg.Data.Data8[1] = rtc.min;
    309e:	7dbb      	ldrb	r3, [r7, #22]
    30a0:	727b      	strb	r3, [r7, #9]
	TxMsg.Data.Data8[2] = rtc.hour;
    30a2:	7d7b      	ldrb	r3, [r7, #21]
    30a4:	72bb      	strb	r3, [r7, #10]
	TxMsg.Data.Data8[3] = rtc.wday;
    30a6:	7d3b      	ldrb	r3, [r7, #20]
    30a8:	72fb      	strb	r3, [r7, #11]
	TxMsg.Data.Data8[4] = rtc.mday;
    30aa:	7cfb      	ldrb	r3, [r7, #19]
    30ac:	733b      	strb	r3, [r7, #12]
	TxMsg.Data.Data8[5] = rtc.month;
    30ae:	7cbb      	ldrb	r3, [r7, #18]
    30b0:	737b      	strb	r3, [r7, #13]
	TxMsg.Data.Data16[3] = rtc.year;
    30b2:	8a3b      	ldrh	r3, [r7, #16]
    30b4:	81fb      	strh	r3, [r7, #14]

//	CAN_UserWrite(&TxMsg);

	return;
}
    30b6:	f107 0718 	add.w	r7, r7, #24
    30ba:	46bd      	mov	sp, r7
    30bc:	bd80      	pop	{r7, pc}
    30be:	bf00      	nop

000030c0 <CAN_UserProcessMsg>:
//------------------------------------------------------------------------------
//! void CAN_UserProcessMsg(void)
//------------------------------------------------------------------------------
//! @brief	Processes incoming CAN messages
//------------------------------------------------------------------------------
void CAN_UserProcessMsg(void){
    30c0:	b590      	push	{r4, r7, lr}
    30c2:	b08d      	sub	sp, #52	; 0x34
    30c4:	af00      	add	r7, sp, #0
	RTC rtc;
	CANMsg_t msg;
	u8_t res=0;
    30c6:	f04f 0300 	mov.w	r3, #0
    30ca:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	static u8_t toggle_led=0;
	CRCInit_t cfg= CRC32_CONFIG;
    30ce:	f640 1368 	movw	r3, #2408	; 0x968
    30d2:	f2c0 0301 	movt	r3, #1
    30d6:	f107 0404 	add.w	r4, r7, #4
    30da:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
    30de:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	u32_t cnt=0;
    30e2:	f04f 0300 	mov.w	r3, #0
    30e6:	62bb      	str	r3, [r7, #40]	; 0x28


	res = CAN_UserRead(&msg);
    30e8:	f107 0310 	add.w	r3, r7, #16
    30ec:	4618      	mov	r0, r3
    30ee:	f7ff fd29 	bl	2b44 <CAN_UserRead>
    30f2:	4603      	mov	r3, r0
    30f4:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
	if(!res)
    30f8:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
    30fc:	2b00      	cmp	r3, #0
    30fe:	f000 8174 	beq.w	33ea <CAN_UserProcessMsg+0x32a>
		return;

	if(toggle_led){
    3102:	f640 1334 	movw	r3, #2356	; 0x934
    3106:	f2c1 0300 	movt	r3, #4096	; 0x1000
    310a:	781b      	ldrb	r3, [r3, #0]
    310c:	2b00      	cmp	r3, #0
    310e:	d00d      	beq.n	312c <CAN_UserProcessMsg+0x6c>
		HW_SetLED (HW_LED_STATUS_2, HW_LED_GREEN);
    3110:	f04f 0002 	mov.w	r0, #2
    3114:	f04f 0102 	mov.w	r1, #2
    3118:	f005 f94c 	bl	83b4 <HW_SetLED>
		toggle_led = 0;
    311c:	f640 1334 	movw	r3, #2356	; 0x934
    3120:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3124:	f04f 0200 	mov.w	r2, #0
    3128:	701a      	strb	r2, [r3, #0]
    312a:	e00c      	b.n	3146 <CAN_UserProcessMsg+0x86>
	}else{
		HW_SetLED (HW_LED_STATUS_2, HW_LED_ORANGE);
    312c:	f04f 0002 	mov.w	r0, #2
    3130:	f04f 0103 	mov.w	r1, #3
    3134:	f005 f93e 	bl	83b4 <HW_SetLED>
		toggle_led = 1;
    3138:	f640 1334 	movw	r3, #2356	; 0x934
    313c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3140:	f04f 0201 	mov.w	r2, #1
    3144:	701a      	strb	r2, [r3, #0]
	}

	if(msg.Id<INCOMING_CAN_ID_MIN || msg.Id>INCOMING_CAN_ID_MAX)
    3146:	697a      	ldr	r2, [r7, #20]
    3148:	f240 534f 	movw	r3, #1359	; 0x54f
    314c:	429a      	cmp	r2, r3
    314e:	f240 814c 	bls.w	33ea <CAN_UserProcessMsg+0x32a>
    3152:	697a      	ldr	r2, [r7, #20]
    3154:	f240 5357 	movw	r3, #1367	; 0x557
    3158:	429a      	cmp	r2, r3
    315a:	f200 8146 	bhi.w	33ea <CAN_UserProcessMsg+0x32a>
		return;

	switch(msg.Id){
    315e:	697b      	ldr	r3, [r7, #20]
    3160:	f5a3 63aa 	sub.w	r3, r3, #1360	; 0x550
    3164:	2b07      	cmp	r3, #7
    3166:	f200 812f 	bhi.w	33c8 <CAN_UserProcessMsg+0x308>
    316a:	a201      	add	r2, pc, #4	; (adr r2, 3170 <CAN_UserProcessMsg+0xb0>)
    316c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    3170:	00003191 	.word	0x00003191
    3174:	000031b9 	.word	0x000031b9
    3178:	000031cb 	.word	0x000031cb
    317c:	000031db 	.word	0x000031db
    3180:	000031eb 	.word	0x000031eb
    3184:	000032c1 	.word	0x000032c1
    3188:	000032f5 	.word	0x000032f5
    318c:	00003397 	.word	0x00003397
	case SYM_OUT_IO:
		HW_SetDOUTn(HW_DOUT_1, (msg.Data.Data8[0] & 0x01));
    3190:	7e3b      	ldrb	r3, [r7, #24]
    3192:	f003 0301 	and.w	r3, r3, #1
    3196:	b2db      	uxtb	r3, r3
    3198:	f04f 0000 	mov.w	r0, #0
    319c:	4619      	mov	r1, r3
    319e:	f005 fa73 	bl	8688 <HW_SetDOUTn>

		if (msg.Data.Data8[0] & 0x02)
    31a2:	7e3b      	ldrb	r3, [r7, #24]
    31a4:	f003 0302 	and.w	r3, r3, #2
    31a8:	2b00      	cmp	r3, #0
    31aa:	d002      	beq.n	31b2 <CAN_UserProcessMsg+0xf2>
			HW_GPS_PowerOn();
    31ac:	f004 fe90 	bl	7ed0 <HW_GPS_PowerOn>
		else
			HW_GPS_PowerOff();
		break;
    31b0:	e11b      	b.n	33ea <CAN_UserProcessMsg+0x32a>
		HW_SetDOUTn(HW_DOUT_1, (msg.Data.Data8[0] & 0x01));

		if (msg.Data.Data8[0] & 0x02)
			HW_GPS_PowerOn();
		else
			HW_GPS_PowerOff();
    31b2:	f004 fe9f 	bl	7ef4 <HW_GPS_PowerOff>
		break;
    31b6:	e118      	b.n	33ea <CAN_UserProcessMsg+0x32a>

	case SYM_OUT_POWEROFF:
		if(msg.Data.Data8[0]&0x01)
    31b8:	7e3b      	ldrb	r3, [r7, #24]
    31ba:	f003 0301 	and.w	r3, r3, #1
    31be:	2b00      	cmp	r3, #0
    31c0:	f000 8104 	beq.w	33cc <CAN_UserProcessMsg+0x30c>
			HW_SwitchOFF();
    31c4:	f004 ffce 	bl	8164 <HW_SwitchOFF>
		break;
    31c8:	e100      	b.n	33cc <CAN_UserProcessMsg+0x30c>

	case SYM_OUT_GYRO:
		MEMS_L3GD20_SetRange(msg.Data.Data8[0]&0x03);
    31ca:	7e3b      	ldrb	r3, [r7, #24]
    31cc:	f003 0303 	and.w	r3, r3, #3
    31d0:	b2db      	uxtb	r3, r3
    31d2:	4618      	mov	r0, r3
    31d4:	f002 fd44 	bl	5c60 <MEMS_L3GD20_SetRange>
		break;
    31d8:	e107      	b.n	33ea <CAN_UserProcessMsg+0x32a>

	case SYM_OUT_ACC_SCALE:
		MEMS_BMC050_SetAccRange(msg.Data.Data8[0]&0x7);
    31da:	7e3b      	ldrb	r3, [r7, #24]
    31dc:	f003 0307 	and.w	r3, r3, #7
    31e0:	b2db      	uxtb	r3, r3
    31e2:	4618      	mov	r0, r3
    31e4:	f001 fd46 	bl	4c74 <MEMS_BMC050_SetAccRange>
		break;
    31e8:	e0ff      	b.n	33ea <CAN_UserProcessMsg+0x32a>

	case SYM_OUT_SAVE_CFG:
		// only write configuration if LSB in lowest byte is set
		if(!(msg.Data.Data8[0]&0x1))
    31ea:	7e3b      	ldrb	r3, [r7, #24]
    31ec:	f003 0301 	and.w	r3, r3, #1
    31f0:	2b00      	cmp	r3, #0
    31f2:	f000 80ed 	beq.w	33d0 <CAN_UserProcessMsg+0x310>
			break;

		MEMS_BMC050_GetAccCalTargets(	&cfg_data.Acc.cmp_target_x,
    31f6:	f640 406c 	movw	r0, #3180	; 0xc6c
    31fa:	f2c1 0000 	movt	r0, #4096	; 0x1000
    31fe:	497d      	ldr	r1, [pc, #500]	; (33f4 <CAN_UserProcessMsg+0x334>)
    3200:	4a7d      	ldr	r2, [pc, #500]	; (33f8 <CAN_UserProcessMsg+0x338>)
    3202:	f001 fc69 	bl	4ad8 <MEMS_BMC050_GetAccCalTargets>
										&cfg_data.Acc.cmp_target_y,
										&cfg_data.Acc.cmp_target_z);
		MEMS_BMC050_GetAccRange(&cfg_data.Acc.range);
    3206:	487d      	ldr	r0, [pc, #500]	; (33fc <CAN_UserProcessMsg+0x33c>)
    3208:	f001 fcfa 	bl	4c00 <MEMS_BMC050_GetAccRange>
#if STORE_ACC_COMPENSATION_PERMANENT
		cfg_data.Acc.flags |= ACC_USE_EEPROM_RAW_COMPENSATION_VALUES;
    320c:	f640 436c 	movw	r3, #3180	; 0xc6c
    3210:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3214:	7a9b      	ldrb	r3, [r3, #10]
    3216:	f043 0301 	orr.w	r3, r3, #1
    321a:	b2da      	uxtb	r2, r3
    321c:	f640 436c 	movw	r3, #3180	; 0xc6c
    3220:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3224:	729a      	strb	r2, [r3, #10]
		cfg_data.Acc.flags |= ACC_USE_EEPROM_FILT_COMPENSATION_VALUES;
    3226:	f640 436c 	movw	r3, #3180	; 0xc6c
    322a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    322e:	7a9b      	ldrb	r3, [r3, #10]
    3230:	f043 0302 	orr.w	r3, r3, #2
    3234:	b2da      	uxtb	r2, r3
    3236:	f640 436c 	movw	r3, #3180	; 0xc6c
    323a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    323e:	729a      	strb	r2, [r3, #10]

		MEMS_BMC050_GetAccCalFiltValues(&cfg_data.Acc.cmp_filt_x,
    3240:	486f      	ldr	r0, [pc, #444]	; (3400 <CAN_UserProcessMsg+0x340>)
    3242:	4970      	ldr	r1, [pc, #448]	; (3404 <CAN_UserProcessMsg+0x344>)
    3244:	4a70      	ldr	r2, [pc, #448]	; (3408 <CAN_UserProcessMsg+0x348>)
    3246:	f001 fcad 	bl	4ba4 <MEMS_BMC050_GetAccCalFiltValues>
										&cfg_data.Acc.cmp_filt_y,
										&cfg_data.Acc.cmp_filt_z);
		MEMS_BMC050_GetAccCalRawValues(	&cfg_data.Acc.cmp_raw_x,
    324a:	4870      	ldr	r0, [pc, #448]	; (340c <CAN_UserProcessMsg+0x34c>)
    324c:	4970      	ldr	r1, [pc, #448]	; (3410 <CAN_UserProcessMsg+0x350>)
    324e:	4a71      	ldr	r2, [pc, #452]	; (3414 <CAN_UserProcessMsg+0x354>)
    3250:	f001 fc7a 	bl	4b48 <MEMS_BMC050_GetAccCalRawValues>
										&cfg_data.Acc.cmp_raw_z);
#else
		cfg_data.Acc.flags = 0;
#endif

		MEMS_L3GD20_GetRange(&cfg_data.Gyro.range);
    3254:	4870      	ldr	r0, [pc, #448]	; (3418 <CAN_UserProcessMsg+0x358>)
    3256:	f002 fd33 	bl	5cc0 <MEMS_L3GD20_GetRange>

		res = CRC_Init(&cfg);
    325a:	f107 0304 	add.w	r3, r7, #4
    325e:	4618      	mov	r0, r3
    3260:	f006 f8bc 	bl	93dc <CRC_Init>
    3264:	4603      	mov	r3, r0
    3266:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		if(res != CRC_ERR_OK)
    326a:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
    326e:	2b00      	cmp	r3, #0
    3270:	f040 80b0 	bne.w	33d4 <CAN_UserProcessMsg+0x314>
			break;

		cnt = sizeof(cfg_data)-sizeofmember(S_CONFIG_DATA_t, crc32);
    3274:	f04f 0320 	mov.w	r3, #32
    3278:	62bb      	str	r3, [r7, #40]	; 0x28
		res = CRC_CalcCRC((void*) &cfg_data, cnt, t_crc_8_bit, &cfg_data.crc32);
    327a:	f640 406c 	movw	r0, #3180	; 0xc6c
    327e:	f2c1 0000 	movt	r0, #4096	; 0x1000
    3282:	6ab9      	ldr	r1, [r7, #40]	; 0x28
    3284:	f04f 0200 	mov.w	r2, #0
    3288:	4b64      	ldr	r3, [pc, #400]	; (341c <CAN_UserProcessMsg+0x35c>)
    328a:	f006 f90f 	bl	94ac <CRC_CalcCRC>
    328e:	4603      	mov	r3, r0
    3290:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
		if(res != CRC_ERR_OK)
    3294:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
    3298:	2b00      	cmp	r3, #0
    329a:	f040 809d 	bne.w	33d8 <CAN_UserProcessMsg+0x318>
					break;

		if(EEPROM_Write(EEPROM_INT, EEPROM_CFG_ADDR, &cfg_data,
    329e:	f04f 0000 	mov.w	r0, #0
    32a2:	f04f 0100 	mov.w	r1, #0
    32a6:	f640 426c 	movw	r2, #3180	; 0xc6c
    32aa:	f2c1 0200 	movt	r2, #4096	; 0x1000
    32ae:	f04f 0324 	mov.w	r3, #36	; 0x24
    32b2:	f005 ffad 	bl	9210 <EEPROM_Write>
				sizeof(cfg_data))!= EEPROM_ERR_OK){
			// write failed
		}
		if(EEPROM_FlushCache(EEPROM_INT)!= EEPROM_ERR_OK){
    32b6:	f04f 0000 	mov.w	r0, #0
    32ba:	f006 f85b 	bl	9374 <EEPROM_FlushCache>
			// flush failed
		}
		break;
    32be:	e094      	b.n	33ea <CAN_UserProcessMsg+0x32a>

	case SYM_OUT_RTC_SET_TIME:
		rtc.sec = msg.Data.Data8[0] ;
    32c0:	7e3b      	ldrb	r3, [r7, #24]
    32c2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
		rtc.min	= msg.Data.Data8[1] ;
    32c6:	7e7b      	ldrb	r3, [r7, #25]
    32c8:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
		rtc.hour = msg.Data.Data8[2] ;
    32cc:	7ebb      	ldrb	r3, [r7, #26]
    32ce:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
		rtc.wday = msg.Data.Data8[3] ;
    32d2:	7efb      	ldrb	r3, [r7, #27]
    32d4:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
		rtc.mday = msg.Data.Data8[4] ;
    32d8:	7f3b      	ldrb	r3, [r7, #28]
    32da:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
		rtc.month = msg.Data.Data8[5] ;
    32de:	7f7b      	ldrb	r3, [r7, #29]
    32e0:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
		rtc.year = msg.Data.Data16[3] ;
    32e4:	8bfb      	ldrh	r3, [r7, #30]
    32e6:	843b      	strh	r3, [r7, #32]
		rtc_settime(&rtc);
    32e8:	f107 0320 	add.w	r3, r7, #32
    32ec:	4618      	mov	r0, r3
    32ee:	f002 ff15 	bl	611c <rtc_settime>
		break;
    32f2:	e07a      	b.n	33ea <CAN_UserProcessMsg+0x32a>

	case SYM_OUT_RTC_ADOPT_GPS_TIME:
		if(!(msg.Data.Data8[0]&0x1))
    32f4:	7e3b      	ldrb	r3, [r7, #24]
    32f6:	f003 0301 	and.w	r3, r3, #1
    32fa:	2b00      	cmp	r3, #0
    32fc:	d06e      	beq.n	33dc <CAN_UserProcessMsg+0x31c>
			break;

		// only copy values if they are valid
		if((MAX7W_Readings.Validity & GPS_TIME_VALID)!=GPS_TIME_VALID)
    32fe:	f640 6310 	movw	r3, #3600	; 0xe10
    3302:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3306:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    3308:	f003 0301 	and.w	r3, r3, #1
    330c:	2b00      	cmp	r3, #0
    330e:	d067      	beq.n	33e0 <CAN_UserProcessMsg+0x320>
			break;
		if((MAX7W_Readings.Validity & GPS_DATE_VALID)!=GPS_DATE_VALID)
    3310:	f640 6310 	movw	r3, #3600	; 0xe10
    3314:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3318:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    331a:	f003 0302 	and.w	r3, r3, #2
    331e:	2b00      	cmp	r3, #0
    3320:	d060      	beq.n	33e4 <CAN_UserProcessMsg+0x324>
			break;

		// get old values to keep day of week that was set before
		rtc_gettime(&rtc);
    3322:	f107 0320 	add.w	r3, r7, #32
    3326:	4618      	mov	r0, r3
    3328:	f002 fe68 	bl	5ffc <rtc_gettime>

		rtc.sec = MAX7W_Readings.Time_Sec;
    332c:	f640 6310 	movw	r3, #3600	; 0xe10
    3330:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3334:	f893 302e 	ldrb.w	r3, [r3, #46]	; 0x2e
    3338:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
		rtc.min	= MAX7W_Readings.Time_Min;
    333c:	f640 6310 	movw	r3, #3600	; 0xe10
    3340:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3344:	f893 302d 	ldrb.w	r3, [r3, #45]	; 0x2d
    3348:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
		rtc.hour = MAX7W_Readings.Time_Hrs;
    334c:	f640 6310 	movw	r3, #3600	; 0xe10
    3350:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3354:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
    3358:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
		rtc.mday = MAX7W_Readings.Date_DayOfMonth;
    335c:	f640 6310 	movw	r3, #3600	; 0xe10
    3360:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3364:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
    3368:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
		rtc.month = MAX7W_Readings.Date_Month;
    336c:	f640 6310 	movw	r3, #3600	; 0xe10
    3370:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3374:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
    3378:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
		rtc.year = MAX7W_Readings.Date_Year;
    337c:	f640 6310 	movw	r3, #3600	; 0xe10
    3380:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3384:	f893 302f 	ldrb.w	r3, [r3, #47]	; 0x2f
    3388:	843b      	strh	r3, [r7, #32]
		rtc_settime(&rtc);
    338a:	f107 0320 	add.w	r3, r7, #32
    338e:	4618      	mov	r0, r3
    3390:	f002 fec4 	bl	611c <rtc_settime>
		break;
    3394:	e029      	b.n	33ea <CAN_UserProcessMsg+0x32a>

	case SYM_OUT_ACC_FAST_CALIBRATION:
		MEMS_BMC050_SetAccCalTargets(&msg.Data.Data8[0], &msg.Data.Data8[1], &msg.Data.Data8[2]);
    3396:	f107 0310 	add.w	r3, r7, #16
    339a:	f103 0108 	add.w	r1, r3, #8
    339e:	f107 0310 	add.w	r3, r7, #16
    33a2:	f103 0209 	add.w	r2, r3, #9
    33a6:	f107 0310 	add.w	r3, r7, #16
    33aa:	f103 030a 	add.w	r3, r3, #10
    33ae:	4608      	mov	r0, r1
    33b0:	4611      	mov	r1, r2
    33b2:	461a      	mov	r2, r3
    33b4:	f001 fb34 	bl	4a20 <MEMS_BMC050_SetAccCalTargets>
		if(msg.Data.Data8[3]&0x1)
    33b8:	7efb      	ldrb	r3, [r7, #27]
    33ba:	f003 0301 	and.w	r3, r3, #1
    33be:	2b00      	cmp	r3, #0
    33c0:	d012      	beq.n	33e8 <CAN_UserProcessMsg+0x328>
			MEMS_BMC050_StartFastAccCompensation();
    33c2:	f001 fab5 	bl	4930 <MEMS_BMC050_StartFastAccCompensation>
		break;
    33c6:	e00f      	b.n	33e8 <CAN_UserProcessMsg+0x328>

	default:
		break;
    33c8:	bf00      	nop
    33ca:	e00e      	b.n	33ea <CAN_UserProcessMsg+0x32a>
		break;

	case SYM_OUT_POWEROFF:
		if(msg.Data.Data8[0]&0x01)
			HW_SwitchOFF();
		break;
    33cc:	bf00      	nop
    33ce:	e00c      	b.n	33ea <CAN_UserProcessMsg+0x32a>
		break;

	case SYM_OUT_SAVE_CFG:
		// only write configuration if LSB in lowest byte is set
		if(!(msg.Data.Data8[0]&0x1))
			break;
    33d0:	bf00      	nop
    33d2:	e00a      	b.n	33ea <CAN_UserProcessMsg+0x32a>

		MEMS_L3GD20_GetRange(&cfg_data.Gyro.range);

		res = CRC_Init(&cfg);
		if(res != CRC_ERR_OK)
			break;
    33d4:	bf00      	nop
    33d6:	e008      	b.n	33ea <CAN_UserProcessMsg+0x32a>

		cnt = sizeof(cfg_data)-sizeofmember(S_CONFIG_DATA_t, crc32);
		res = CRC_CalcCRC((void*) &cfg_data, cnt, t_crc_8_bit, &cfg_data.crc32);
		if(res != CRC_ERR_OK)
					break;
    33d8:	bf00      	nop
    33da:	e006      	b.n	33ea <CAN_UserProcessMsg+0x32a>
		rtc_settime(&rtc);
		break;

	case SYM_OUT_RTC_ADOPT_GPS_TIME:
		if(!(msg.Data.Data8[0]&0x1))
			break;
    33dc:	bf00      	nop
    33de:	e004      	b.n	33ea <CAN_UserProcessMsg+0x32a>

		// only copy values if they are valid
		if((MAX7W_Readings.Validity & GPS_TIME_VALID)!=GPS_TIME_VALID)
			break;
    33e0:	bf00      	nop
    33e2:	e002      	b.n	33ea <CAN_UserProcessMsg+0x32a>
		if((MAX7W_Readings.Validity & GPS_DATE_VALID)!=GPS_DATE_VALID)
			break;
    33e4:	bf00      	nop
    33e6:	e000      	b.n	33ea <CAN_UserProcessMsg+0x32a>

	case SYM_OUT_ACC_FAST_CALIBRATION:
		MEMS_BMC050_SetAccCalTargets(&msg.Data.Data8[0], &msg.Data.Data8[1], &msg.Data.Data8[2]);
		if(msg.Data.Data8[3]&0x1)
			MEMS_BMC050_StartFastAccCompensation();
		break;
    33e8:	bf00      	nop
	default:
		break;
	}

	return;
}
    33ea:	f107 0734 	add.w	r7, r7, #52	; 0x34
    33ee:	46bd      	mov	sp, r7
    33f0:	bd90      	pop	{r4, r7, pc}
    33f2:	bf00      	nop
    33f4:	10000c6d 	.word	0x10000c6d
    33f8:	10000c6e 	.word	0x10000c6e
    33fc:	10000c75 	.word	0x10000c75
    3400:	10000c72 	.word	0x10000c72
    3404:	10000c73 	.word	0x10000c73
    3408:	10000c74 	.word	0x10000c74
    340c:	10000c6f 	.word	0x10000c6f
    3410:	10000c70 	.word	0x10000c70
    3414:	10000c71 	.word	0x10000c71
    3418:	10000c77 	.word	0x10000c77
    341c:	10000c8c 	.word	0x10000c8c

00003420 <CAN_UserResetPanelValues>:


//! Update the explorer panel with currently set config values
void CAN_UserResetPanelValues(void){
    3420:	b580      	push	{r7, lr}
    3422:	b088      	sub	sp, #32
    3424:	af00      	add	r7, sp, #0
	CANMsg_t TxMsg;
	u32_t tmp_u32;
	RTC rtc;
	
	HW_GetDOUT(&tmp_u32);
    3426:	f107 030c 	add.w	r3, r7, #12
    342a:	4618      	mov	r0, r3
    342c:	f005 f994 	bl	8758 <HW_GetDOUT>

	TxMsg.Id = SYM_OUT_IO;
    3430:	f44f 63aa 	mov.w	r3, #1360	; 0x550
    3434:	617b      	str	r3, [r7, #20]
	TxMsg.Len = 1;
    3436:	f04f 0301 	mov.w	r3, #1
    343a:	74fb      	strb	r3, [r7, #19]
	TxMsg.Type = CAN_MSG_STANDARD;
    343c:	f04f 0300 	mov.w	r3, #0
    3440:	74bb      	strb	r3, [r7, #18]
	TxMsg.Data.Data8[0] =  (HW_GPS_GetPowerState()<<1) | ((u8_t)tmp_u32) ;
    3442:	f004 fd69 	bl	7f18 <HW_GPS_GetPowerState>
    3446:	4603      	mov	r3, r0
    3448:	ea4f 0343 	mov.w	r3, r3, lsl #1
    344c:	b2da      	uxtb	r2, r3
    344e:	68fb      	ldr	r3, [r7, #12]
    3450:	b2db      	uxtb	r3, r3
    3452:	4313      	orrs	r3, r2
    3454:	b2db      	uxtb	r3, r3
    3456:	b2db      	uxtb	r3, r3
    3458:	763b      	strb	r3, [r7, #24]
//	CAN_UserWrite(&TxMsg);

	TxMsg.Id = SYM_OUT_GYRO;
    345a:	f240 5352 	movw	r3, #1362	; 0x552
    345e:	617b      	str	r3, [r7, #20]
	TxMsg.Len = 1;
    3460:	f04f 0301 	mov.w	r3, #1
    3464:	74fb      	strb	r3, [r7, #19]
	MEMS_L3GD20_GetRange(&TxMsg.Data.Data8[0]);
    3466:	f107 0310 	add.w	r3, r7, #16
    346a:	f103 0308 	add.w	r3, r3, #8
    346e:	4618      	mov	r0, r3
    3470:	f002 fc26 	bl	5cc0 <MEMS_L3GD20_GetRange>
//	CAN_UserWrite(&TxMsg);
	
	TxMsg.Id = SYM_OUT_ACC_SCALE;
    3474:	f240 5353 	movw	r3, #1363	; 0x553
    3478:	617b      	str	r3, [r7, #20]
	TxMsg.Len = 1;
    347a:	f04f 0301 	mov.w	r3, #1
    347e:	74fb      	strb	r3, [r7, #19]
	MEMS_BMC050_GetAccRange(&TxMsg.Data.Data8[0]);
    3480:	f107 0310 	add.w	r3, r7, #16
    3484:	f103 0308 	add.w	r3, r3, #8
    3488:	4618      	mov	r0, r3
    348a:	f001 fbb9 	bl	4c00 <MEMS_BMC050_GetAccRange>
//	CAN_UserWrite(&TxMsg);

	TxMsg.Id = SYM_OUT_ACC_FAST_CALIBRATION;
    348e:	f240 5357 	movw	r3, #1367	; 0x557
    3492:	617b      	str	r3, [r7, #20]
	TxMsg.Len = 4;
    3494:	f04f 0304 	mov.w	r3, #4
    3498:	74fb      	strb	r3, [r7, #19]
	MEMS_BMC050_GetAccCalTargets(&TxMsg.Data.Data8[0],
    349a:	f107 0310 	add.w	r3, r7, #16
    349e:	f103 0108 	add.w	r1, r3, #8
    34a2:	f107 0310 	add.w	r3, r7, #16
    34a6:	f103 0209 	add.w	r2, r3, #9
    34aa:	f107 0310 	add.w	r3, r7, #16
    34ae:	f103 030a 	add.w	r3, r3, #10
    34b2:	4608      	mov	r0, r1
    34b4:	4611      	mov	r1, r2
    34b6:	461a      	mov	r2, r3
    34b8:	f001 fb0e 	bl	4ad8 <MEMS_BMC050_GetAccCalTargets>
			&TxMsg.Data.Data8[1],
			&TxMsg.Data.Data8[2]);
	TxMsg.Data.Data8[3] = 0;
    34bc:	f04f 0300 	mov.w	r3, #0
    34c0:	76fb      	strb	r3, [r7, #27]
//	CAN_UserWrite(&TxMsg);

	rtc_gettime(&rtc);
    34c2:	f107 0304 	add.w	r3, r7, #4
    34c6:	4618      	mov	r0, r3
    34c8:	f002 fd98 	bl	5ffc <rtc_gettime>
	TxMsg.Id = SYM_OUT_RTC_SET_TIME;
    34cc:	f240 5355 	movw	r3, #1365	; 0x555
    34d0:	617b      	str	r3, [r7, #20]
	TxMsg.Len = 8;
    34d2:	f04f 0308 	mov.w	r3, #8
    34d6:	74fb      	strb	r3, [r7, #19]
	TxMsg.Data.Data8[0] = rtc.sec;
    34d8:	7afb      	ldrb	r3, [r7, #11]
    34da:	763b      	strb	r3, [r7, #24]
	TxMsg.Data.Data8[1] = rtc.min;
    34dc:	7abb      	ldrb	r3, [r7, #10]
    34de:	767b      	strb	r3, [r7, #25]
	TxMsg.Data.Data8[2] = rtc.hour;
    34e0:	7a7b      	ldrb	r3, [r7, #9]
    34e2:	76bb      	strb	r3, [r7, #26]
	TxMsg.Data.Data8[3] = rtc.wday;
    34e4:	7a3b      	ldrb	r3, [r7, #8]
    34e6:	76fb      	strb	r3, [r7, #27]
	TxMsg.Data.Data8[4] = rtc.mday;
    34e8:	79fb      	ldrb	r3, [r7, #7]
    34ea:	773b      	strb	r3, [r7, #28]
	TxMsg.Data.Data8[5] = rtc.month;
    34ec:	79bb      	ldrb	r3, [r7, #6]
    34ee:	777b      	strb	r3, [r7, #29]
	TxMsg.Data.Data16[3] = rtc.year;
    34f0:	88bb      	ldrh	r3, [r7, #4]
    34f2:	83fb      	strh	r3, [r7, #30]
//	CAN_UserWrite(&TxMsg);
	
	return;
}
    34f4:	f107 0720 	add.w	r7, r7, #32
    34f8:	46bd      	mov	sp, r7
    34fa:	bd80      	pop	{r7, pc}
    34fc:	0000      	movs	r0, r0
	...

00003500 <Init_UART2>:
//------------------------------------------------------------------------------
//! void Init_UART2(void)
//------------------------------------------------------------------------------
//! @brief	initializes UART for usage with GPS module
//------------------------------------------------------------------------------
void Init_UART2(void){
    3500:	b5b0      	push	{r4, r5, r7, lr}
    3502:	b088      	sub	sp, #32
    3504:	af00      	add	r7, sp, #0

	SERInit_t params;

	//params.prescaler = (PCLK + 8 * SER_BAUD_3) / ( 16 * SER_BAUD_3);
	params.mulval = 4;
    3506:	f04f 0304 	mov.w	r3, #4
    350a:	60bb      	str	r3, [r7, #8]
	params.divadd = 1;
    350c:	f04f 0301 	mov.w	r3, #1
    3510:	60fb      	str	r3, [r7, #12]
	params.dlval = ((u32_t) ((double) PCLK / SER_BAUD_GPS / 16
			/ (1 + (double) params.divadd / params.mulval)));
    3512:	68fb      	ldr	r3, [r7, #12]
    3514:	4618      	mov	r0, r3
    3516:	f00c fd27 	bl	ff68 <__aeabi_ui2d>
    351a:	4604      	mov	r4, r0
    351c:	460d      	mov	r5, r1
    351e:	68bb      	ldr	r3, [r7, #8]
    3520:	4618      	mov	r0, r3
    3522:	f00c fd21 	bl	ff68 <__aeabi_ui2d>
    3526:	4602      	mov	r2, r0
    3528:	460b      	mov	r3, r1
    352a:	4620      	mov	r0, r4
    352c:	4629      	mov	r1, r5
    352e:	f00c febb 	bl	102a8 <__aeabi_ddiv>
    3532:	4602      	mov	r2, r0
    3534:	460b      	mov	r3, r1
    3536:	4610      	mov	r0, r2
    3538:	4619      	mov	r1, r3
    353a:	f04f 0200 	mov.w	r2, #0
    353e:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
    3542:	f503 1340 	add.w	r3, r3, #3145728	; 0x300000
    3546:	f00c fbd3 	bl	fcf0 <__adddf3>
    354a:	4602      	mov	r2, r0
    354c:	460b      	mov	r3, r1
    354e:	a118      	add	r1, pc, #96	; (adr r1, 35b0 <Init_UART2+0xb0>)
    3550:	e9d1 0100 	ldrd	r0, r1, [r1]
    3554:	f00c fea8 	bl	102a8 <__aeabi_ddiv>
    3558:	4602      	mov	r2, r0
    355a:	460b      	mov	r3, r1
	SERInit_t params;

	//params.prescaler = (PCLK + 8 * SER_BAUD_3) / ( 16 * SER_BAUD_3);
	params.mulval = 4;
	params.divadd = 1;
	params.dlval = ((u32_t) ((double) PCLK / SER_BAUD_GPS / 16
    355c:	4610      	mov	r0, r2
    355e:	4619      	mov	r1, r3
    3560:	f00d f83a 	bl	105d8 <__aeabi_d2uiz>
    3564:	4603      	mov	r3, r0
    3566:	607b      	str	r3, [r7, #4]
			/ (1 + (double) params.divadd / params.mulval)));

	params.databits = 8;
    3568:	f04f 0308 	mov.w	r3, #8
    356c:	763b      	strb	r3, [r7, #24]
	params.stopbits = 1;
    356e:	f04f 0301 	mov.w	r3, #1
    3572:	767b      	strb	r3, [r7, #25]
	params.parity = SER_PARITY_NONE;
    3574:	f04f 0300 	mov.w	r3, #0
    3578:	76bb      	strb	r3, [r7, #26]

	params.pTxFifo = &TxFifo;
    357a:	f640 133c 	movw	r3, #2364	; 0x93c
    357e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3582:	613b      	str	r3, [r7, #16]
	params.pRxFifo = &RxFifo;
    3584:	f640 137c 	movw	r3, #2428	; 0x97c
    3588:	f2c1 0300 	movt	r3, #4096	; 0x1000
    358c:	617b      	str	r3, [r7, #20]

	params.TxFifoSize = SER_TX_FIFO_SIZE;
    358e:	f04f 0340 	mov.w	r3, #64	; 0x40
    3592:	76fb      	strb	r3, [r7, #27]
	params.RxFifoSize = SER_RX_FIFO_SIZE;
    3594:	f04f 0380 	mov.w	r3, #128	; 0x80
    3598:	773b      	strb	r3, [r7, #28]

	SER_Initialize(SER_PORT3, &params);
    359a:	f107 0304 	add.w	r3, r7, #4
    359e:	f04f 0002 	mov.w	r0, #2
    35a2:	4619      	mov	r1, r3
    35a4:	f004 f98a 	bl	78bc <SER_Initialize>

	return;
}
    35a8:	f107 0720 	add.w	r7, r7, #32
    35ac:	46bd      	mov	sp, r7
    35ae:	bdb0      	pop	{r4, r5, r7, pc}
    35b0:	00000000 	.word	0x00000000
    35b4:	40886a00 	.word	0x40886a00

000035b8 <UBLOX_MAX7W_init>:
//------------------------------------------------------------------------------
//! s32_t UBLOX_MAX7W_init(void)
//------------------------------------------------------------------------------
//! @brief	initializes UART and variables, activates power supply of GPS module
//------------------------------------------------------------------------------
s32_t UBLOX_MAX7W_init(void){
    35b8:	b580      	push	{r7, lr}
    35ba:	b082      	sub	sp, #8
    35bc:	af00      	add	r7, sp, #0
	s32_t res = 0;
    35be:	f04f 0300 	mov.w	r3, #0
    35c2:	607b      	str	r3, [r7, #4]
	Init_UART2();
    35c4:	f7ff ff9c 	bl	3500 <Init_UART2>

	HW_GPS_PowerOn();
    35c8:	f004 fc82 	bl	7ed0 <HW_GPS_PowerOn>

	nmea_str_complete = 0;
    35cc:	f640 1338 	movw	r3, #2360	; 0x938
    35d0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    35d4:	f04f 0200 	mov.w	r2, #0
    35d8:	701a      	strb	r2, [r3, #0]

	return res;
    35da:	687b      	ldr	r3, [r7, #4]
}
    35dc:	4618      	mov	r0, r3
    35de:	f107 0708 	add.w	r7, r7, #8
    35e2:	46bd      	mov	sp, r7
    35e4:	bd80      	pop	{r7, pc}
    35e6:	bf00      	nop

000035e8 <UBLOX_MAX7W_task>:
//------------------------------------------------------------------------------
//! @brief	reads chars from GPS UART, stores them and extracts data from
//!			received messages
//!			should be called from main loop as often as possible
//------------------------------------------------------------------------------
void UBLOX_MAX7W_task(void){
    35e8:	b580      	push	{r7, lr}
    35ea:	b084      	sub	sp, #16
    35ec:	af00      	add	r7, sp, #0
	static u8_t rx_buff_ptr = 0; 		//!< index of current buffer element
	static char rx_buff[GPS_BUF_SZ];	//!< uart reception buffer
	u8_t msg_len = 0; 	//!< length of received message-3 for CS calculation
    35ee:	f04f 0300 	mov.w	r3, #0
    35f2:	73fb      	strb	r3, [r7, #15]
	u8_t cur_chr, rd;
	s32_t res;

	res = SER_Read(SER_PORT3, &cur_chr, 1, &rd);
    35f4:	f107 0207 	add.w	r2, r7, #7
    35f8:	f107 0306 	add.w	r3, r7, #6
    35fc:	f04f 0002 	mov.w	r0, #2
    3600:	4611      	mov	r1, r2
    3602:	f04f 0201 	mov.w	r2, #1
    3606:	f003 fce3 	bl	6fd0 <SER_Read>
    360a:	4603      	mov	r3, r0
    360c:	60bb      	str	r3, [r7, #8]
	if ((res != SER_ERR_OK) || (rd < 1))
    360e:	68bb      	ldr	r3, [r7, #8]
    3610:	2b00      	cmp	r3, #0
    3612:	f040 8112 	bne.w	383a <UBLOX_MAX7W_task+0x252>
    3616:	79bb      	ldrb	r3, [r7, #6]
    3618:	2b00      	cmp	r3, #0
    361a:	f000 810e 	beq.w	383a <UBLOX_MAX7W_task+0x252>
	SER_Write(SER_PORT1, &cur_chr, rd);
#endif

	// store char and increase pointer up to GPS_BUF_SZ
	// overwrite uppermost entry with all subsequent chars
	rx_buff[rx_buff_ptr] = cur_chr;
    361e:	f640 13fc 	movw	r3, #2556	; 0x9fc
    3622:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3626:	781b      	ldrb	r3, [r3, #0]
    3628:	461a      	mov	r2, r3
    362a:	79f9      	ldrb	r1, [r7, #7]
    362c:	f640 2300 	movw	r3, #2560	; 0xa00
    3630:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3634:	5499      	strb	r1, [r3, r2]
	if (rx_buff_ptr < GPS_BUF_SZ)
    3636:	f640 13fc 	movw	r3, #2556	; 0x9fc
    363a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    363e:	781b      	ldrb	r3, [r3, #0]
    3640:	b2db      	uxtb	r3, r3
    3642:	b25b      	sxtb	r3, r3
    3644:	2b00      	cmp	r3, #0
    3646:	db0c      	blt.n	3662 <UBLOX_MAX7W_task+0x7a>
		rx_buff_ptr++;
    3648:	f640 13fc 	movw	r3, #2556	; 0x9fc
    364c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3650:	781b      	ldrb	r3, [r3, #0]
    3652:	f103 0301 	add.w	r3, r3, #1
    3656:	b2da      	uxtb	r2, r3
    3658:	f640 13fc 	movw	r3, #2556	; 0x9fc
    365c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3660:	701a      	strb	r2, [r3, #0]

	if (cur_chr == 0x24){
    3662:	79fb      	ldrb	r3, [r7, #7]
    3664:	2b24      	cmp	r3, #36	; 0x24
    3666:	d10d      	bne.n	3684 <UBLOX_MAX7W_task+0x9c>
		// $ => start of new message => reset buffer index
		rx_buff[0] = cur_chr;
    3668:	79fa      	ldrb	r2, [r7, #7]
    366a:	f640 2300 	movw	r3, #2560	; 0xa00
    366e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3672:	701a      	strb	r2, [r3, #0]
		rx_buff_ptr = 1; // reset buffer pointer
    3674:	f640 13fc 	movw	r3, #2556	; 0x9fc
    3678:	f2c1 0300 	movt	r3, #4096	; 0x1000
    367c:	f04f 0201 	mov.w	r2, #1
    3680:	701a      	strb	r2, [r3, #0]
    3682:	e02a      	b.n	36da <UBLOX_MAX7W_task+0xf2>
	} else if (cur_chr == 0x0A) {
    3684:	79fb      	ldrb	r3, [r7, #7]
    3686:	2b0a      	cmp	r3, #10
    3688:	d127      	bne.n	36da <UBLOX_MAX7W_task+0xf2>
		// at this point received message is complete !!!
		rx_buff[rx_buff_ptr] = 0x00;
    368a:	f640 13fc 	movw	r3, #2556	; 0x9fc
    368e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3692:	781b      	ldrb	r3, [r3, #0]
    3694:	461a      	mov	r2, r3
    3696:	f640 2300 	movw	r3, #2560	; 0xa00
    369a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    369e:	f04f 0100 	mov.w	r1, #0
    36a2:	5499      	strb	r1, [r3, r2]

		if (nmea_str_complete == 0) {
    36a4:	f640 1338 	movw	r3, #2360	; 0x938
    36a8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    36ac:	781b      	ldrb	r3, [r3, #0]
    36ae:	2b00      	cmp	r3, #0
    36b0:	d10c      	bne.n	36cc <UBLOX_MAX7W_task+0xe4>
			msg_len = rx_buff_ptr;
    36b2:	f640 13fc 	movw	r3, #2556	; 0x9fc
    36b6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    36ba:	781b      	ldrb	r3, [r3, #0]
    36bc:	73fb      	strb	r3, [r7, #15]
			nmea_str_complete = 1;
    36be:	f640 1338 	movw	r3, #2360	; 0x938
    36c2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    36c6:	f04f 0201 	mov.w	r2, #1
    36ca:	701a      	strb	r2, [r3, #0]
		}
		rx_buff_ptr = 0; // reset buffer index
    36cc:	f640 13fc 	movw	r3, #2556	; 0x9fc
    36d0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    36d4:	f04f 0200 	mov.w	r2, #0
    36d8:	701a      	strb	r2, [r3, #0]
	}

	if (nmea_str_complete != 1)
    36da:	f640 1338 	movw	r3, #2360	; 0x938
    36de:	f2c1 0300 	movt	r3, #4096	; 0x1000
    36e2:	781b      	ldrb	r3, [r3, #0]
    36e4:	2b01      	cmp	r3, #1
    36e6:	f040 80a8 	bne.w	383a <UBLOX_MAX7W_task+0x252>
		return;

	nmea_str_complete = 0; // reset NMEA string complete flag
    36ea:	f640 1338 	movw	r3, #2360	; 0x938
    36ee:	f2c1 0300 	movt	r3, #4096	; 0x1000
    36f2:	f04f 0200 	mov.w	r2, #0
    36f6:	701a      	strb	r2, [r3, #0]

	if(!validate_csum((char *)&rx_buff[0], msg_len)){
    36f8:	7bfb      	ldrb	r3, [r7, #15]
    36fa:	f640 2000 	movw	r0, #2560	; 0xa00
    36fe:	f2c1 0000 	movt	r0, #4096	; 0x1000
    3702:	4619      	mov	r1, r3
    3704:	f000 fdc6 	bl	4294 <validate_csum>
    3708:	4603      	mov	r3, r0
    370a:	2b00      	cmp	r3, #0
    370c:	f000 8095 	beq.w	383a <UBLOX_MAX7W_task+0x252>
		// checksum mismatch
		// ToDo report error if needed
		return;
	}

	if (strncmp((const char*) &rx_buff[0], "$GPRMC", 6) == 0) {
    3710:	f640 2000 	movw	r0, #2560	; 0xa00
    3714:	f2c1 0000 	movt	r0, #4096	; 0x1000
    3718:	f640 1174 	movw	r1, #2420	; 0x974
    371c:	f2c0 0101 	movt	r1, #1
    3720:	f04f 0206 	mov.w	r2, #6
    3724:	f009 fb18 	bl	cd58 <strncmp>
    3728:	4603      	mov	r3, r0
    372a:	2b00      	cmp	r3, #0
    372c:	d109      	bne.n	3742 <UBLOX_MAX7W_task+0x15a>
		evaluate_$GPRMC(&rx_buff[0], msg_len);
    372e:	7bfb      	ldrb	r3, [r7, #15]
    3730:	b29b      	uxth	r3, r3
    3732:	f640 2000 	movw	r0, #2560	; 0xa00
    3736:	f2c1 0000 	movt	r0, #4096	; 0x1000
    373a:	4619      	mov	r1, r3
    373c:	f000 f93c 	bl	39b8 <evaluate_$GPRMC>
    3740:	e07b      	b.n	383a <UBLOX_MAX7W_task+0x252>
	} else if (strncmp((const char*) &rx_buff[0], "$GPVTG", 6) == 0) {
    3742:	f640 2000 	movw	r0, #2560	; 0xa00
    3746:	f2c1 0000 	movt	r0, #4096	; 0x1000
    374a:	f640 117c 	movw	r1, #2428	; 0x97c
    374e:	f2c0 0101 	movt	r1, #1
    3752:	f04f 0206 	mov.w	r2, #6
    3756:	f009 faff 	bl	cd58 <strncmp>
    375a:	4603      	mov	r3, r0
    375c:	2b00      	cmp	r3, #0
    375e:	d109      	bne.n	3774 <UBLOX_MAX7W_task+0x18c>
		evaluate_$GPVTG(&rx_buff[0], msg_len);
    3760:	7bfb      	ldrb	r3, [r7, #15]
    3762:	b29b      	uxth	r3, r3
    3764:	f640 2000 	movw	r0, #2560	; 0xa00
    3768:	f2c1 0000 	movt	r0, #4096	; 0x1000
    376c:	4619      	mov	r1, r3
    376e:	f000 fb3b 	bl	3de8 <evaluate_$GPVTG>
    3772:	e062      	b.n	383a <UBLOX_MAX7W_task+0x252>
	} else if (strncmp((const char*) &rx_buff[0], "$GPGGA", 6) == 0) {
    3774:	f640 2000 	movw	r0, #2560	; 0xa00
    3778:	f2c1 0000 	movt	r0, #4096	; 0x1000
    377c:	f640 1184 	movw	r1, #2436	; 0x984
    3780:	f2c0 0101 	movt	r1, #1
    3784:	f04f 0206 	mov.w	r2, #6
    3788:	f009 fae6 	bl	cd58 <strncmp>
    378c:	4603      	mov	r3, r0
    378e:	2b00      	cmp	r3, #0
    3790:	d109      	bne.n	37a6 <UBLOX_MAX7W_task+0x1be>
		evaluate_$GPGGA(&rx_buff[0], msg_len);
    3792:	7bfb      	ldrb	r3, [r7, #15]
    3794:	b29b      	uxth	r3, r3
    3796:	f640 2000 	movw	r0, #2560	; 0xa00
    379a:	f2c1 0000 	movt	r0, #4096	; 0x1000
    379e:	4619      	mov	r1, r3
    37a0:	f000 fb7e 	bl	3ea0 <evaluate_$GPGGA>
    37a4:	e049      	b.n	383a <UBLOX_MAX7W_task+0x252>
	} else if (strncmp((const char*) &rx_buff[0], "$GPGSA", 6) == 0) {
    37a6:	f640 2000 	movw	r0, #2560	; 0xa00
    37aa:	f2c1 0000 	movt	r0, #4096	; 0x1000
    37ae:	f640 118c 	movw	r1, #2444	; 0x98c
    37b2:	f2c0 0101 	movt	r1, #1
    37b6:	f04f 0206 	mov.w	r2, #6
    37ba:	f009 facd 	bl	cd58 <strncmp>
    37be:	4603      	mov	r3, r0
    37c0:	2b00      	cmp	r3, #0
    37c2:	d109      	bne.n	37d8 <UBLOX_MAX7W_task+0x1f0>
		evaluate_$GPGSA(&rx_buff[0], msg_len);
    37c4:	7bfb      	ldrb	r3, [r7, #15]
    37c6:	b29b      	uxth	r3, r3
    37c8:	f640 2000 	movw	r0, #2560	; 0xa00
    37cc:	f2c1 0000 	movt	r0, #4096	; 0x1000
    37d0:	4619      	mov	r1, r3
    37d2:	f000 fbbd 	bl	3f50 <evaluate_$GPGSA>
    37d6:	e030      	b.n	383a <UBLOX_MAX7W_task+0x252>
	} else if (strncmp((const char*) &rx_buff[0], "$GPGLL", 6) == 0) {
    37d8:	f640 2000 	movw	r0, #2560	; 0xa00
    37dc:	f2c1 0000 	movt	r0, #4096	; 0x1000
    37e0:	f640 1194 	movw	r1, #2452	; 0x994
    37e4:	f2c0 0101 	movt	r1, #1
    37e8:	f04f 0206 	mov.w	r2, #6
    37ec:	f009 fab4 	bl	cd58 <strncmp>
    37f0:	4603      	mov	r3, r0
    37f2:	2b00      	cmp	r3, #0
    37f4:	d109      	bne.n	380a <UBLOX_MAX7W_task+0x222>
		evaluate_$GPGLL(&rx_buff[0], msg_len);
    37f6:	7bfb      	ldrb	r3, [r7, #15]
    37f8:	b29b      	uxth	r3, r3
    37fa:	f640 2000 	movw	r0, #2560	; 0xa00
    37fe:	f2c1 0000 	movt	r0, #4096	; 0x1000
    3802:	4619      	mov	r1, r3
    3804:	f000 fc08 	bl	4018 <evaluate_$GPGLL>
    3808:	e017      	b.n	383a <UBLOX_MAX7W_task+0x252>
	} else if (strncmp((const char*) &rx_buff[0], "$GPTXT", 6) == 0) {
    380a:	f640 2000 	movw	r0, #2560	; 0xa00
    380e:	f2c1 0000 	movt	r0, #4096	; 0x1000
    3812:	f640 119c 	movw	r1, #2460	; 0x99c
    3816:	f2c0 0101 	movt	r1, #1
    381a:	f04f 0206 	mov.w	r2, #6
    381e:	f009 fa9b 	bl	cd58 <strncmp>
    3822:	4603      	mov	r3, r0
    3824:	2b00      	cmp	r3, #0
    3826:	d108      	bne.n	383a <UBLOX_MAX7W_task+0x252>
		evaluate_$GPTXT(&rx_buff[0], msg_len);
    3828:	7bfb      	ldrb	r3, [r7, #15]
    382a:	b29b      	uxth	r3, r3
    382c:	f640 2000 	movw	r0, #2560	; 0xa00
    3830:	f2c1 0000 	movt	r0, #4096	; 0x1000
    3834:	4619      	mov	r1, r3
    3836:	f000 f805 	bl	3844 <evaluate_$GPTXT>
	} else {
		; // any other NMEA string: do nothing
	}

	return;
} // UBLOX_MAX7W_task
    383a:	f107 0710 	add.w	r7, r7, #16
    383e:	46bd      	mov	sp, r7
    3840:	bd80      	pop	{r7, pc}
    3842:	bf00      	nop

00003844 <evaluate_$GPTXT>:
//! @brief	extracts date from GPTXT message
//------------------------------------------------------------------------------
//! @param	p_msg		pointer to message buffer
//! @param	msg_len		length of message
//------------------------------------------------------------------------------
static void evaluate_$GPTXT(char *p_msg, u16_t msg_len){
    3844:	b580      	push	{r7, lr}
    3846:	b08a      	sub	sp, #40	; 0x28
    3848:	af02      	add	r7, sp, #8
    384a:	6078      	str	r0, [r7, #4]
    384c:	460b      	mov	r3, r1
    384e:	807b      	strh	r3, [r7, #2]
	int res;
	char *p_token[TXT_ELEM_CNT] = { 0, 0, 0, 0, 0 };
    3850:	f04f 0300 	mov.w	r3, #0
    3854:	60bb      	str	r3, [r7, #8]
    3856:	f04f 0300 	mov.w	r3, #0
    385a:	60fb      	str	r3, [r7, #12]
    385c:	f04f 0300 	mov.w	r3, #0
    3860:	613b      	str	r3, [r7, #16]
    3862:	f04f 0300 	mov.w	r3, #0
    3866:	617b      	str	r3, [r7, #20]
    3868:	f04f 0300 	mov.w	r3, #0
    386c:	61bb      	str	r3, [r7, #24]

	if(!p_msg)
    386e:	687b      	ldr	r3, [r7, #4]
    3870:	2b00      	cmp	r3, #0
    3872:	f000 809c 	beq.w	39ae <evaluate_$GPTXT+0x16a>
	 *  [2] -> number of this message in current transmission
	 *  [3] -> type of this message 	'00' (error) | '01' (warning) |
	 *  								'02' (notice) | '07' (user)
	 *  [4] -> text + checksum
	 **************************************************************************/
	res = spltStr(p_msg, msg_len, ',', &p_token[0], TXT_ELEM_CNT);
    3876:	887a      	ldrh	r2, [r7, #2]
    3878:	f107 0308 	add.w	r3, r7, #8
    387c:	f04f 0105 	mov.w	r1, #5
    3880:	9100      	str	r1, [sp, #0]
    3882:	6878      	ldr	r0, [r7, #4]
    3884:	4611      	mov	r1, r2
    3886:	f04f 022c 	mov.w	r2, #44	; 0x2c
    388a:	f000 fd59 	bl	4340 <spltStr>
    388e:	61f8      	str	r0, [r7, #28]

	if (res < TXT_ELEM_CNT - 1)
    3890:	69fb      	ldr	r3, [r7, #28]
    3892:	2b03      	cmp	r3, #3
    3894:	f340 808b 	ble.w	39ae <evaluate_$GPTXT+0x16a>
		return;

	if (!p_token[4])
    3898:	69bb      	ldr	r3, [r7, #24]
    389a:	2b00      	cmp	r3, #0
    389c:	f000 8087 	beq.w	39ae <evaluate_$GPTXT+0x16a>
		return;

	if (strncmp(p_token[4], "ANTSTATUS=", 10) == 0) {
    38a0:	69bb      	ldr	r3, [r7, #24]
    38a2:	4618      	mov	r0, r3
    38a4:	f640 11a4 	movw	r1, #2468	; 0x9a4
    38a8:	f2c0 0101 	movt	r1, #1
    38ac:	f04f 020a 	mov.w	r2, #10
    38b0:	f009 fa52 	bl	cd58 <strncmp>
    38b4:	4603      	mov	r3, r0
    38b6:	2b00      	cmp	r3, #0
    38b8:	d179      	bne.n	39ae <evaluate_$GPTXT+0x16a>
		if (strncmp(p_token[4] + 10, "INIT", 4) == 0)
    38ba:	69bb      	ldr	r3, [r7, #24]
    38bc:	f103 030a 	add.w	r3, r3, #10
    38c0:	4618      	mov	r0, r3
    38c2:	f640 11b0 	movw	r1, #2480	; 0x9b0
    38c6:	f2c0 0101 	movt	r1, #1
    38ca:	f04f 0204 	mov.w	r2, #4
    38ce:	f009 fa43 	bl	cd58 <strncmp>
    38d2:	4603      	mov	r3, r0
    38d4:	2b00      	cmp	r3, #0
    38d6:	d107      	bne.n	38e8 <evaluate_$GPTXT+0xa4>
			MAX7W_Readings.Gps_AntennaStatus = 0;
    38d8:	f640 6310 	movw	r3, #3600	; 0xe10
    38dc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    38e0:	f04f 0200 	mov.w	r2, #0
    38e4:	701a      	strb	r2, [r3, #0]
    38e6:	e062      	b.n	39ae <evaluate_$GPTXT+0x16a>
		else if (strncmp(p_token[4] + 10, "DONTKNOW", 8) == 0)
    38e8:	69bb      	ldr	r3, [r7, #24]
    38ea:	f103 030a 	add.w	r3, r3, #10
    38ee:	4618      	mov	r0, r3
    38f0:	f640 11b8 	movw	r1, #2488	; 0x9b8
    38f4:	f2c0 0101 	movt	r1, #1
    38f8:	f04f 0208 	mov.w	r2, #8
    38fc:	f009 fa2c 	bl	cd58 <strncmp>
    3900:	4603      	mov	r3, r0
    3902:	2b00      	cmp	r3, #0
    3904:	d107      	bne.n	3916 <evaluate_$GPTXT+0xd2>
			MAX7W_Readings.Gps_AntennaStatus = 1;
    3906:	f640 6310 	movw	r3, #3600	; 0xe10
    390a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    390e:	f04f 0201 	mov.w	r2, #1
    3912:	701a      	strb	r2, [r3, #0]
    3914:	e04b      	b.n	39ae <evaluate_$GPTXT+0x16a>
		else if (strncmp(p_token[4] + 10, "OK", 2) == 0)
    3916:	69bb      	ldr	r3, [r7, #24]
    3918:	f103 030a 	add.w	r3, r3, #10
    391c:	4618      	mov	r0, r3
    391e:	f640 11c4 	movw	r1, #2500	; 0x9c4
    3922:	f2c0 0101 	movt	r1, #1
    3926:	f04f 0202 	mov.w	r2, #2
    392a:	f009 fa15 	bl	cd58 <strncmp>
    392e:	4603      	mov	r3, r0
    3930:	2b00      	cmp	r3, #0
    3932:	d107      	bne.n	3944 <evaluate_$GPTXT+0x100>
			MAX7W_Readings.Gps_AntennaStatus = 2;
    3934:	f640 6310 	movw	r3, #3600	; 0xe10
    3938:	f2c1 0300 	movt	r3, #4096	; 0x1000
    393c:	f04f 0202 	mov.w	r2, #2
    3940:	701a      	strb	r2, [r3, #0]
    3942:	e034      	b.n	39ae <evaluate_$GPTXT+0x16a>
		else if (strncmp(p_token[4] + 10, "SHORT", 5) == 0)
    3944:	69bb      	ldr	r3, [r7, #24]
    3946:	f103 030a 	add.w	r3, r3, #10
    394a:	4618      	mov	r0, r3
    394c:	f640 11c8 	movw	r1, #2504	; 0x9c8
    3950:	f2c0 0101 	movt	r1, #1
    3954:	f04f 0205 	mov.w	r2, #5
    3958:	f009 f9fe 	bl	cd58 <strncmp>
    395c:	4603      	mov	r3, r0
    395e:	2b00      	cmp	r3, #0
    3960:	d107      	bne.n	3972 <evaluate_$GPTXT+0x12e>
			MAX7W_Readings.Gps_AntennaStatus = 3;
    3962:	f640 6310 	movw	r3, #3600	; 0xe10
    3966:	f2c1 0300 	movt	r3, #4096	; 0x1000
    396a:	f04f 0203 	mov.w	r2, #3
    396e:	701a      	strb	r2, [r3, #0]
    3970:	e01d      	b.n	39ae <evaluate_$GPTXT+0x16a>
		else if (strncmp(p_token[4] + 10, "OPEN", 4) == 0)
    3972:	69bb      	ldr	r3, [r7, #24]
    3974:	f103 030a 	add.w	r3, r3, #10
    3978:	4618      	mov	r0, r3
    397a:	f640 11d0 	movw	r1, #2512	; 0x9d0
    397e:	f2c0 0101 	movt	r1, #1
    3982:	f04f 0204 	mov.w	r2, #4
    3986:	f009 f9e7 	bl	cd58 <strncmp>
    398a:	4603      	mov	r3, r0
    398c:	2b00      	cmp	r3, #0
    398e:	d107      	bne.n	39a0 <evaluate_$GPTXT+0x15c>
			MAX7W_Readings.Gps_AntennaStatus = 4;
    3990:	f640 6310 	movw	r3, #3600	; 0xe10
    3994:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3998:	f04f 0204 	mov.w	r2, #4
    399c:	701a      	strb	r2, [r3, #0]
    399e:	e006      	b.n	39ae <evaluate_$GPTXT+0x16a>
		else
			// any other string (undefined...)
			MAX7W_Readings.Gps_AntennaStatus = 0;
    39a0:	f640 6310 	movw	r3, #3600	; 0xe10
    39a4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    39a8:	f04f 0200 	mov.w	r2, #0
    39ac:	701a      	strb	r2, [r3, #0]
	}
}
    39ae:	f107 0720 	add.w	r7, r7, #32
    39b2:	46bd      	mov	sp, r7
    39b4:	bd80      	pop	{r7, pc}
    39b6:	bf00      	nop

000039b8 <evaluate_$GPRMC>:
//------------------------------------------------------------------------------
//! @param	p_msg		pointer to message buffer
//! @param	msg_len		length of message
//------------------------------------------------------------------------------
static void evaluate_$GPRMC(char *p_msg, u16_t msg_len)
{
    39b8:	b590      	push	{r4, r7, lr}
    39ba:	b097      	sub	sp, #92	; 0x5c
    39bc:	af02      	add	r7, sp, #8
    39be:	6078      	str	r0, [r7, #4]
    39c0:	460b      	mov	r3, r1
    39c2:	807b      	strh	r3, [r7, #2]
	int res;
	char *p_token[RMC_ELEM_CNT] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    39c4:	f04f 0300 	mov.w	r3, #0
    39c8:	60fb      	str	r3, [r7, #12]
    39ca:	f04f 0300 	mov.w	r3, #0
    39ce:	613b      	str	r3, [r7, #16]
    39d0:	f04f 0300 	mov.w	r3, #0
    39d4:	617b      	str	r3, [r7, #20]
    39d6:	f04f 0300 	mov.w	r3, #0
    39da:	61bb      	str	r3, [r7, #24]
    39dc:	f04f 0300 	mov.w	r3, #0
    39e0:	61fb      	str	r3, [r7, #28]
    39e2:	f04f 0300 	mov.w	r3, #0
    39e6:	623b      	str	r3, [r7, #32]
    39e8:	f04f 0300 	mov.w	r3, #0
    39ec:	627b      	str	r3, [r7, #36]	; 0x24
    39ee:	f04f 0300 	mov.w	r3, #0
    39f2:	62bb      	str	r3, [r7, #40]	; 0x28
    39f4:	f04f 0300 	mov.w	r3, #0
    39f8:	62fb      	str	r3, [r7, #44]	; 0x2c
    39fa:	f04f 0300 	mov.w	r3, #0
    39fe:	633b      	str	r3, [r7, #48]	; 0x30
    3a00:	f04f 0300 	mov.w	r3, #0
    3a04:	637b      	str	r3, [r7, #52]	; 0x34
    3a06:	f04f 0300 	mov.w	r3, #0
    3a0a:	63bb      	str	r3, [r7, #56]	; 0x38
    3a0c:	f04f 0300 	mov.w	r3, #0
    3a10:	63fb      	str	r3, [r7, #60]	; 0x3c
    3a12:	f04f 0300 	mov.w	r3, #0
    3a16:	643b      	str	r3, [r7, #64]	; 0x40

	if(!p_msg)
    3a18:	687b      	ldr	r3, [r7, #4]
    3a1a:	2b00      	cmp	r3, #0
    3a1c:	f000 81e0 	beq.w	3de0 <evaluate_$GPRMC+0x428>
	 *  							'E' (estimated / dead reckoning fix) |
	 *  							'A' (autonomous GNSS fix) |
	 *  							'D' (differential GNSS fix)
	 *  [13] -> checksum
	 **************************************************************************/
	res = spltStr(p_msg, msg_len, ',', &p_token[0], RMC_ELEM_CNT);
    3a20:	887a      	ldrh	r2, [r7, #2]
    3a22:	f107 030c 	add.w	r3, r7, #12
    3a26:	f04f 010e 	mov.w	r1, #14
    3a2a:	9100      	str	r1, [sp, #0]
    3a2c:	6878      	ldr	r0, [r7, #4]
    3a2e:	4611      	mov	r1, r2
    3a30:	f04f 022c 	mov.w	r2, #44	; 0x2c
    3a34:	f000 fc84 	bl	4340 <spltStr>
    3a38:	64f8      	str	r0, [r7, #76]	; 0x4c

	if (res < RMC_ELEM_CNT - 1)
    3a3a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    3a3c:	2b0c      	cmp	r3, #12
    3a3e:	f340 81cf 	ble.w	3de0 <evaluate_$GPRMC+0x428>
		return;

	// make sure that length of token is okay
	if (p_token[1] && (p_token[2] == p_token[1] + 10)) {
    3a42:	693b      	ldr	r3, [r7, #16]
    3a44:	2b00      	cmp	r3, #0
    3a46:	f000 80a3 	beq.w	3b90 <evaluate_$GPRMC+0x1d8>
    3a4a:	697a      	ldr	r2, [r7, #20]
    3a4c:	693b      	ldr	r3, [r7, #16]
    3a4e:	f103 030a 	add.w	r3, r3, #10
    3a52:	429a      	cmp	r2, r3
    3a54:	f040 809c 	bne.w	3b90 <evaluate_$GPRMC+0x1d8>
		char *p_chr;
		p_chr = p_token[1];
    3a58:	693b      	ldr	r3, [r7, #16]
    3a5a:	64bb      	str	r3, [r7, #72]	; 0x48
		MAX7W_Readings.Time_Hrs = ascii2hex(*(p_chr++)) * 10;
    3a5c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    3a5e:	781b      	ldrb	r3, [r3, #0]
    3a60:	6cba      	ldr	r2, [r7, #72]	; 0x48
    3a62:	f102 0201 	add.w	r2, r2, #1
    3a66:	64ba      	str	r2, [r7, #72]	; 0x48
    3a68:	4618      	mov	r0, r3
    3a6a:	f000 fced 	bl	4448 <ascii2hex>
    3a6e:	4603      	mov	r3, r0
    3a70:	461a      	mov	r2, r3
    3a72:	ea4f 0282 	mov.w	r2, r2, lsl #2
    3a76:	18d3      	adds	r3, r2, r3
    3a78:	ea4f 0343 	mov.w	r3, r3, lsl #1
    3a7c:	b2da      	uxtb	r2, r3
    3a7e:	f640 6310 	movw	r3, #3600	; 0xe10
    3a82:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3a86:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
		MAX7W_Readings.Time_Hrs += ascii2hex(*(p_chr++));
    3a8a:	f640 6310 	movw	r3, #3600	; 0xe10
    3a8e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3a92:	f893 402c 	ldrb.w	r4, [r3, #44]	; 0x2c
    3a96:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    3a98:	781b      	ldrb	r3, [r3, #0]
    3a9a:	6cba      	ldr	r2, [r7, #72]	; 0x48
    3a9c:	f102 0201 	add.w	r2, r2, #1
    3aa0:	64ba      	str	r2, [r7, #72]	; 0x48
    3aa2:	4618      	mov	r0, r3
    3aa4:	f000 fcd0 	bl	4448 <ascii2hex>
    3aa8:	4603      	mov	r3, r0
    3aaa:	18e3      	adds	r3, r4, r3
    3aac:	b2da      	uxtb	r2, r3
    3aae:	f640 6310 	movw	r3, #3600	; 0xe10
    3ab2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3ab6:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
		MAX7W_Readings.Time_Min = ascii2hex(*(p_chr++)) * 10;
    3aba:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    3abc:	781b      	ldrb	r3, [r3, #0]
    3abe:	6cba      	ldr	r2, [r7, #72]	; 0x48
    3ac0:	f102 0201 	add.w	r2, r2, #1
    3ac4:	64ba      	str	r2, [r7, #72]	; 0x48
    3ac6:	4618      	mov	r0, r3
    3ac8:	f000 fcbe 	bl	4448 <ascii2hex>
    3acc:	4603      	mov	r3, r0
    3ace:	461a      	mov	r2, r3
    3ad0:	ea4f 0282 	mov.w	r2, r2, lsl #2
    3ad4:	18d3      	adds	r3, r2, r3
    3ad6:	ea4f 0343 	mov.w	r3, r3, lsl #1
    3ada:	b2da      	uxtb	r2, r3
    3adc:	f640 6310 	movw	r3, #3600	; 0xe10
    3ae0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3ae4:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
		MAX7W_Readings.Time_Min += ascii2hex(*(p_chr++));
    3ae8:	f640 6310 	movw	r3, #3600	; 0xe10
    3aec:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3af0:	f893 402d 	ldrb.w	r4, [r3, #45]	; 0x2d
    3af4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    3af6:	781b      	ldrb	r3, [r3, #0]
    3af8:	6cba      	ldr	r2, [r7, #72]	; 0x48
    3afa:	f102 0201 	add.w	r2, r2, #1
    3afe:	64ba      	str	r2, [r7, #72]	; 0x48
    3b00:	4618      	mov	r0, r3
    3b02:	f000 fca1 	bl	4448 <ascii2hex>
    3b06:	4603      	mov	r3, r0
    3b08:	18e3      	adds	r3, r4, r3
    3b0a:	b2da      	uxtb	r2, r3
    3b0c:	f640 6310 	movw	r3, #3600	; 0xe10
    3b10:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3b14:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
		MAX7W_Readings.Time_Sec = ascii2hex(*(p_chr++)) * 10;
    3b18:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    3b1a:	781b      	ldrb	r3, [r3, #0]
    3b1c:	6cba      	ldr	r2, [r7, #72]	; 0x48
    3b1e:	f102 0201 	add.w	r2, r2, #1
    3b22:	64ba      	str	r2, [r7, #72]	; 0x48
    3b24:	4618      	mov	r0, r3
    3b26:	f000 fc8f 	bl	4448 <ascii2hex>
    3b2a:	4603      	mov	r3, r0
    3b2c:	461a      	mov	r2, r3
    3b2e:	ea4f 0282 	mov.w	r2, r2, lsl #2
    3b32:	18d3      	adds	r3, r2, r3
    3b34:	ea4f 0343 	mov.w	r3, r3, lsl #1
    3b38:	b2da      	uxtb	r2, r3
    3b3a:	f640 6310 	movw	r3, #3600	; 0xe10
    3b3e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3b42:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
		MAX7W_Readings.Time_Sec += ascii2hex(*(p_chr++));
    3b46:	f640 6310 	movw	r3, #3600	; 0xe10
    3b4a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3b4e:	f893 402e 	ldrb.w	r4, [r3, #46]	; 0x2e
    3b52:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    3b54:	781b      	ldrb	r3, [r3, #0]
    3b56:	6cba      	ldr	r2, [r7, #72]	; 0x48
    3b58:	f102 0201 	add.w	r2, r2, #1
    3b5c:	64ba      	str	r2, [r7, #72]	; 0x48
    3b5e:	4618      	mov	r0, r3
    3b60:	f000 fc72 	bl	4448 <ascii2hex>
    3b64:	4603      	mov	r3, r0
    3b66:	18e3      	adds	r3, r4, r3
    3b68:	b2da      	uxtb	r2, r3
    3b6a:	f640 6310 	movw	r3, #3600	; 0xe10
    3b6e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3b72:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
		MAX7W_Readings.Validity |= GPS_TIME_VALID;
    3b76:	f640 6310 	movw	r3, #3600	; 0xe10
    3b7a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3b7e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    3b80:	f043 0201 	orr.w	r2, r3, #1
    3b84:	f640 6310 	movw	r3, #3600	; 0xe10
    3b88:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3b8c:	635a      	str	r2, [r3, #52]	; 0x34

	if (res < RMC_ELEM_CNT - 1)
		return;

	// make sure that length of token is okay
	if (p_token[1] && (p_token[2] == p_token[1] + 10)) {
    3b8e:	e023      	b.n	3bd8 <evaluate_$GPRMC+0x220>
		MAX7W_Readings.Time_Min += ascii2hex(*(p_chr++));
		MAX7W_Readings.Time_Sec = ascii2hex(*(p_chr++)) * 10;
		MAX7W_Readings.Time_Sec += ascii2hex(*(p_chr++));
		MAX7W_Readings.Validity |= GPS_TIME_VALID;
	} else {
		MAX7W_Readings.Time_Hrs = 0;
    3b90:	f640 6310 	movw	r3, #3600	; 0xe10
    3b94:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3b98:	f04f 0200 	mov.w	r2, #0
    3b9c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
		MAX7W_Readings.Time_Min = 0;
    3ba0:	f640 6310 	movw	r3, #3600	; 0xe10
    3ba4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3ba8:	f04f 0200 	mov.w	r2, #0
    3bac:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
		MAX7W_Readings.Time_Sec = 0;
    3bb0:	f640 6310 	movw	r3, #3600	; 0xe10
    3bb4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3bb8:	f04f 0200 	mov.w	r2, #0
    3bbc:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
		MAX7W_Readings.Validity &= ~GPS_TIME_VALID;
    3bc0:	f640 6310 	movw	r3, #3600	; 0xe10
    3bc4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3bc8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    3bca:	f023 0201 	bic.w	r2, r3, #1
    3bce:	f640 6310 	movw	r3, #3600	; 0xe10
    3bd2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3bd6:	635a      	str	r2, [r3, #52]	; 0x34
	}

	// make sure that length of token is okay
	if (p_token[9] && (p_token[10] == p_token[9] + 7)) {
    3bd8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    3bda:	2b00      	cmp	r3, #0
    3bdc:	f000 80a3 	beq.w	3d26 <evaluate_$GPRMC+0x36e>
    3be0:	6b7a      	ldr	r2, [r7, #52]	; 0x34
    3be2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    3be4:	f103 0307 	add.w	r3, r3, #7
    3be8:	429a      	cmp	r2, r3
    3bea:	f040 809c 	bne.w	3d26 <evaluate_$GPRMC+0x36e>
		char *p_chr;
		p_chr = p_token[9];
    3bee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    3bf0:	647b      	str	r3, [r7, #68]	; 0x44
		MAX7W_Readings.Date_DayOfMonth = ascii2hex(*(p_chr++)) * 10;
    3bf2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    3bf4:	781b      	ldrb	r3, [r3, #0]
    3bf6:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    3bf8:	f102 0201 	add.w	r2, r2, #1
    3bfc:	647a      	str	r2, [r7, #68]	; 0x44
    3bfe:	4618      	mov	r0, r3
    3c00:	f000 fc22 	bl	4448 <ascii2hex>
    3c04:	4603      	mov	r3, r0
    3c06:	461a      	mov	r2, r3
    3c08:	ea4f 0282 	mov.w	r2, r2, lsl #2
    3c0c:	18d3      	adds	r3, r2, r3
    3c0e:	ea4f 0343 	mov.w	r3, r3, lsl #1
    3c12:	b2da      	uxtb	r2, r3
    3c14:	f640 6310 	movw	r3, #3600	; 0xe10
    3c18:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3c1c:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
		MAX7W_Readings.Date_DayOfMonth += ascii2hex(*(p_chr++));
    3c20:	f640 6310 	movw	r3, #3600	; 0xe10
    3c24:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3c28:	f893 4031 	ldrb.w	r4, [r3, #49]	; 0x31
    3c2c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    3c2e:	781b      	ldrb	r3, [r3, #0]
    3c30:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    3c32:	f102 0201 	add.w	r2, r2, #1
    3c36:	647a      	str	r2, [r7, #68]	; 0x44
    3c38:	4618      	mov	r0, r3
    3c3a:	f000 fc05 	bl	4448 <ascii2hex>
    3c3e:	4603      	mov	r3, r0
    3c40:	18e3      	adds	r3, r4, r3
    3c42:	b2da      	uxtb	r2, r3
    3c44:	f640 6310 	movw	r3, #3600	; 0xe10
    3c48:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3c4c:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
		MAX7W_Readings.Date_Month = ascii2hex(*(p_chr++)) * 10;
    3c50:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    3c52:	781b      	ldrb	r3, [r3, #0]
    3c54:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    3c56:	f102 0201 	add.w	r2, r2, #1
    3c5a:	647a      	str	r2, [r7, #68]	; 0x44
    3c5c:	4618      	mov	r0, r3
    3c5e:	f000 fbf3 	bl	4448 <ascii2hex>
    3c62:	4603      	mov	r3, r0
    3c64:	461a      	mov	r2, r3
    3c66:	ea4f 0282 	mov.w	r2, r2, lsl #2
    3c6a:	18d3      	adds	r3, r2, r3
    3c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
    3c70:	b2da      	uxtb	r2, r3
    3c72:	f640 6310 	movw	r3, #3600	; 0xe10
    3c76:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3c7a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
		MAX7W_Readings.Date_Month += ascii2hex(*(p_chr++));
    3c7e:	f640 6310 	movw	r3, #3600	; 0xe10
    3c82:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3c86:	f893 4030 	ldrb.w	r4, [r3, #48]	; 0x30
    3c8a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    3c8c:	781b      	ldrb	r3, [r3, #0]
    3c8e:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    3c90:	f102 0201 	add.w	r2, r2, #1
    3c94:	647a      	str	r2, [r7, #68]	; 0x44
    3c96:	4618      	mov	r0, r3
    3c98:	f000 fbd6 	bl	4448 <ascii2hex>
    3c9c:	4603      	mov	r3, r0
    3c9e:	18e3      	adds	r3, r4, r3
    3ca0:	b2da      	uxtb	r2, r3
    3ca2:	f640 6310 	movw	r3, #3600	; 0xe10
    3ca6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3caa:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
		MAX7W_Readings.Date_Year = ascii2hex(*(p_chr++)) * 10;
    3cae:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    3cb0:	781b      	ldrb	r3, [r3, #0]
    3cb2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    3cb4:	f102 0201 	add.w	r2, r2, #1
    3cb8:	647a      	str	r2, [r7, #68]	; 0x44
    3cba:	4618      	mov	r0, r3
    3cbc:	f000 fbc4 	bl	4448 <ascii2hex>
    3cc0:	4603      	mov	r3, r0
    3cc2:	461a      	mov	r2, r3
    3cc4:	ea4f 0282 	mov.w	r2, r2, lsl #2
    3cc8:	18d3      	adds	r3, r2, r3
    3cca:	ea4f 0343 	mov.w	r3, r3, lsl #1
    3cce:	b2da      	uxtb	r2, r3
    3cd0:	f640 6310 	movw	r3, #3600	; 0xe10
    3cd4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3cd8:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
		MAX7W_Readings.Date_Year += ascii2hex(*(p_chr++));
    3cdc:	f640 6310 	movw	r3, #3600	; 0xe10
    3ce0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3ce4:	f893 402f 	ldrb.w	r4, [r3, #47]	; 0x2f
    3ce8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    3cea:	781b      	ldrb	r3, [r3, #0]
    3cec:	6c7a      	ldr	r2, [r7, #68]	; 0x44
    3cee:	f102 0201 	add.w	r2, r2, #1
    3cf2:	647a      	str	r2, [r7, #68]	; 0x44
    3cf4:	4618      	mov	r0, r3
    3cf6:	f000 fba7 	bl	4448 <ascii2hex>
    3cfa:	4603      	mov	r3, r0
    3cfc:	18e3      	adds	r3, r4, r3
    3cfe:	b2da      	uxtb	r2, r3
    3d00:	f640 6310 	movw	r3, #3600	; 0xe10
    3d04:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3d08:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
		MAX7W_Readings.Validity |= GPS_DATE_VALID;
    3d0c:	f640 6310 	movw	r3, #3600	; 0xe10
    3d10:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3d14:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    3d16:	f043 0202 	orr.w	r2, r3, #2
    3d1a:	f640 6310 	movw	r3, #3600	; 0xe10
    3d1e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3d22:	635a      	str	r2, [r3, #52]	; 0x34
		MAX7W_Readings.Time_Sec = 0;
		MAX7W_Readings.Validity &= ~GPS_TIME_VALID;
	}

	// make sure that length of token is okay
	if (p_token[9] && (p_token[10] == p_token[9] + 7)) {
    3d24:	e023      	b.n	3d6e <evaluate_$GPRMC+0x3b6>
		MAX7W_Readings.Date_Month += ascii2hex(*(p_chr++));
		MAX7W_Readings.Date_Year = ascii2hex(*(p_chr++)) * 10;
		MAX7W_Readings.Date_Year += ascii2hex(*(p_chr++));
		MAX7W_Readings.Validity |= GPS_DATE_VALID;
	} else {
		MAX7W_Readings.Date_Year = 0;
    3d26:	f640 6310 	movw	r3, #3600	; 0xe10
    3d2a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3d2e:	f04f 0200 	mov.w	r2, #0
    3d32:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
		MAX7W_Readings.Date_Month = 0;
    3d36:	f640 6310 	movw	r3, #3600	; 0xe10
    3d3a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3d3e:	f04f 0200 	mov.w	r2, #0
    3d42:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
		MAX7W_Readings.Date_DayOfMonth = 0;
    3d46:	f640 6310 	movw	r3, #3600	; 0xe10
    3d4a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3d4e:	f04f 0200 	mov.w	r2, #0
    3d52:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
		MAX7W_Readings.Validity &= ~GPS_DATE_VALID;
    3d56:	f640 6310 	movw	r3, #3600	; 0xe10
    3d5a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3d5e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    3d60:	f023 0202 	bic.w	r2, r3, #2
    3d64:	f640 6310 	movw	r3, #3600	; 0xe10
    3d68:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3d6c:	635a      	str	r2, [r3, #52]	; 0x34
	}

	// first check status filed to know if position data is valid!
	if (p_token[2] && *p_token[2] == 'V')
    3d6e:	697b      	ldr	r3, [r7, #20]
    3d70:	2b00      	cmp	r3, #0
    3d72:	d003      	beq.n	3d7c <evaluate_$GPRMC+0x3c4>
    3d74:	697b      	ldr	r3, [r7, #20]
    3d76:	781b      	ldrb	r3, [r3, #0]
    3d78:	2b56      	cmp	r3, #86	; 0x56
    3d7a:	d031      	beq.n	3de0 <evaluate_$GPRMC+0x428>
		return;

	if (p_token[3])
    3d7c:	69bb      	ldr	r3, [r7, #24]
    3d7e:	2b00      	cmp	r3, #0
    3d80:	d00b      	beq.n	3d9a <evaluate_$GPRMC+0x3e2>
		MAX7W_Readings.Pos_Latitude = strtof(p_token[3], NULL);
    3d82:	69bb      	ldr	r3, [r7, #24]
    3d84:	4618      	mov	r0, r3
    3d86:	f04f 0100 	mov.w	r1, #0
    3d8a:	f009 ff9d 	bl	dcc8 <strtof>
    3d8e:	4602      	mov	r2, r0
    3d90:	f640 6310 	movw	r3, #3600	; 0xe10
    3d94:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3d98:	615a      	str	r2, [r3, #20]
	if (p_token[4])
    3d9a:	69fb      	ldr	r3, [r7, #28]
    3d9c:	2b00      	cmp	r3, #0
    3d9e:	d006      	beq.n	3dae <evaluate_$GPRMC+0x3f6>
		MAX7W_Readings.Pos_LatitudeIndNS = *p_token[4];
    3da0:	69fb      	ldr	r3, [r7, #28]
    3da2:	781a      	ldrb	r2, [r3, #0]
    3da4:	f640 6310 	movw	r3, #3600	; 0xe10
    3da8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3dac:	761a      	strb	r2, [r3, #24]
	if (p_token[5])
    3dae:	6a3b      	ldr	r3, [r7, #32]
    3db0:	2b00      	cmp	r3, #0
    3db2:	d00b      	beq.n	3dcc <evaluate_$GPRMC+0x414>
		MAX7W_Readings.Pos_Longitude = strtof(p_token[5], NULL);
    3db4:	6a3b      	ldr	r3, [r7, #32]
    3db6:	4618      	mov	r0, r3
    3db8:	f04f 0100 	mov.w	r1, #0
    3dbc:	f009 ff84 	bl	dcc8 <strtof>
    3dc0:	4602      	mov	r2, r0
    3dc2:	f640 6310 	movw	r3, #3600	; 0xe10
    3dc6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3dca:	60da      	str	r2, [r3, #12]
	if (p_token[6])
    3dcc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3dce:	2b00      	cmp	r3, #0
    3dd0:	d006      	beq.n	3de0 <evaluate_$GPRMC+0x428>
		MAX7W_Readings.Pos_LongitudeIndEW = *p_token[6];
    3dd2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3dd4:	781a      	ldrb	r2, [r3, #0]
    3dd6:	f640 6310 	movw	r3, #3600	; 0xe10
    3dda:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3dde:	741a      	strb	r2, [r3, #16]
//	if (p_token[8])
//		MAX7W_Readings.Nav_CourseOverGround = strtof(p_token[8],NULL);

}
    3de0:	f107 0754 	add.w	r7, r7, #84	; 0x54
    3de4:	46bd      	mov	sp, r7
    3de6:	bd90      	pop	{r4, r7, pc}

00003de8 <evaluate_$GPVTG>:
//! @brief	extracts date from GPVTG message
//------------------------------------------------------------------------------
//! @param	p_msg		pointer to message buffer
//! @param	msg_len		length of message
//------------------------------------------------------------------------------
static void evaluate_$GPVTG(char *p_msg, u16_t msg_len){
    3de8:	b580      	push	{r7, lr}
    3dea:	b090      	sub	sp, #64	; 0x40
    3dec:	af02      	add	r7, sp, #8
    3dee:	6078      	str	r0, [r7, #4]
    3df0:	460b      	mov	r3, r1
    3df2:	807b      	strh	r3, [r7, #2]
	int res;
	char *p_token[VTG_ELEM_CNT] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    3df4:	f04f 0300 	mov.w	r3, #0
    3df8:	60bb      	str	r3, [r7, #8]
    3dfa:	f04f 0300 	mov.w	r3, #0
    3dfe:	60fb      	str	r3, [r7, #12]
    3e00:	f04f 0300 	mov.w	r3, #0
    3e04:	613b      	str	r3, [r7, #16]
    3e06:	f04f 0300 	mov.w	r3, #0
    3e0a:	617b      	str	r3, [r7, #20]
    3e0c:	f04f 0300 	mov.w	r3, #0
    3e10:	61bb      	str	r3, [r7, #24]
    3e12:	f04f 0300 	mov.w	r3, #0
    3e16:	61fb      	str	r3, [r7, #28]
    3e18:	f04f 0300 	mov.w	r3, #0
    3e1c:	623b      	str	r3, [r7, #32]
    3e1e:	f04f 0300 	mov.w	r3, #0
    3e22:	627b      	str	r3, [r7, #36]	; 0x24
    3e24:	f04f 0300 	mov.w	r3, #0
    3e28:	62bb      	str	r3, [r7, #40]	; 0x28
    3e2a:	f04f 0300 	mov.w	r3, #0
    3e2e:	62fb      	str	r3, [r7, #44]	; 0x2c
    3e30:	f04f 0300 	mov.w	r3, #0
    3e34:	633b      	str	r3, [r7, #48]	; 0x30

	if(!p_msg)
    3e36:	687b      	ldr	r3, [r7, #4]
    3e38:	2b00      	cmp	r3, #0
    3e3a:	d02d      	beq.n	3e98 <evaluate_$GPVTG+0xb0>
	 *  						'E' (estimated / dead reckoning fix) |
	 *  						'A' (autonomous GNSS fix) |
	 *  						'D' (differential GNSS fix)
	 *  [10] -> checksum
	 **************************************************************************/
	res = spltStr(p_msg, msg_len, ',', &p_token[0], VTG_ELEM_CNT);
    3e3c:	887a      	ldrh	r2, [r7, #2]
    3e3e:	f107 0308 	add.w	r3, r7, #8
    3e42:	f04f 010b 	mov.w	r1, #11
    3e46:	9100      	str	r1, [sp, #0]
    3e48:	6878      	ldr	r0, [r7, #4]
    3e4a:	4611      	mov	r1, r2
    3e4c:	f04f 022c 	mov.w	r2, #44	; 0x2c
    3e50:	f000 fa76 	bl	4340 <spltStr>
    3e54:	6378      	str	r0, [r7, #52]	; 0x34

	if (res < VTG_ELEM_CNT - 1)
    3e56:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    3e58:	2b09      	cmp	r3, #9
    3e5a:	dd1d      	ble.n	3e98 <evaluate_$GPVTG+0xb0>
		return;

	if (p_token[1])
    3e5c:	68fb      	ldr	r3, [r7, #12]
    3e5e:	2b00      	cmp	r3, #0
    3e60:	d00b      	beq.n	3e7a <evaluate_$GPVTG+0x92>
		MAX7W_Readings.Nav_CourseOverGround = strtof(p_token[1], NULL);
    3e62:	68fb      	ldr	r3, [r7, #12]
    3e64:	4618      	mov	r0, r3
    3e66:	f04f 0100 	mov.w	r1, #0
    3e6a:	f009 ff2d 	bl	dcc8 <strtof>
    3e6e:	4602      	mov	r2, r0
    3e70:	f640 6310 	movw	r3, #3600	; 0xe10
    3e74:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3e78:	609a      	str	r2, [r3, #8]
	if (p_token[7])
    3e7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3e7c:	2b00      	cmp	r3, #0
    3e7e:	d00b      	beq.n	3e98 <evaluate_$GPVTG+0xb0>
		MAX7W_Readings.Nav_SpeedOverGroundKmh = strtof(p_token[7], NULL);
    3e80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    3e82:	4618      	mov	r0, r3
    3e84:	f04f 0100 	mov.w	r1, #0
    3e88:	f009 ff1e 	bl	dcc8 <strtof>
    3e8c:	4602      	mov	r2, r0
    3e8e:	f640 6310 	movw	r3, #3600	; 0xe10
    3e92:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3e96:	605a      	str	r2, [r3, #4]
}
    3e98:	f107 0738 	add.w	r7, r7, #56	; 0x38
    3e9c:	46bd      	mov	sp, r7
    3e9e:	bd80      	pop	{r7, pc}

00003ea0 <evaluate_$GPGGA>:
//------------------------------------------------------------------------------
//! @param	p_msg		pointer to message buffer
//! @param	msg_len		length of message
//------------------------------------------------------------------------------
static void evaluate_$GPGGA(char *p_msg, u16_t msg_len)
{
    3ea0:	b580      	push	{r7, lr}
    3ea2:	b096      	sub	sp, #88	; 0x58
    3ea4:	af02      	add	r7, sp, #8
    3ea6:	6078      	str	r0, [r7, #4]
    3ea8:	460b      	mov	r3, r1
    3eaa:	807b      	strh	r3, [r7, #2]
	int res;
	char *p_token[GGA_ELEM_CNT] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    3eac:	f107 020c 	add.w	r2, r7, #12
    3eb0:	f04f 0340 	mov.w	r3, #64	; 0x40
    3eb4:	4610      	mov	r0, r2
    3eb6:	f04f 0100 	mov.w	r1, #0
    3eba:	461a      	mov	r2, r3
    3ebc:	f008 fea6 	bl	cc0c <memset>
			0 };

	if(!p_msg)
    3ec0:	687b      	ldr	r3, [r7, #4]
    3ec2:	2b00      	cmp	r3, #0
    3ec4:	d03f      	beq.n	3f46 <evaluate_$GPGGA+0xa6>
	 *  [12] -> geoid separation unit (fix) 'M' (meters)
	 *  [13] -> age of differential correction (DGPS only)
	 *  [14] -> ID of differantial correction station (DGPS only)
	 *  [15] -> checksum
	 **************************************************************************/
	res = spltStr(p_msg, msg_len, ',', &p_token[0], GGA_ELEM_CNT);
    3ec6:	887a      	ldrh	r2, [r7, #2]
    3ec8:	f107 030c 	add.w	r3, r7, #12
    3ecc:	f04f 0110 	mov.w	r1, #16
    3ed0:	9100      	str	r1, [sp, #0]
    3ed2:	6878      	ldr	r0, [r7, #4]
    3ed4:	4611      	mov	r1, r2
    3ed6:	f04f 022c 	mov.w	r2, #44	; 0x2c
    3eda:	f000 fa31 	bl	4340 <spltStr>
    3ede:	64f8      	str	r0, [r7, #76]	; 0x4c

	if (res < GGA_ELEM_CNT - 1)
    3ee0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    3ee2:	2b0e      	cmp	r3, #14
    3ee4:	dd2f      	ble.n	3f46 <evaluate_$GPGGA+0xa6>
		return;

	if (p_token[7])
    3ee6:	6abb      	ldr	r3, [r7, #40]	; 0x28
    3ee8:	2b00      	cmp	r3, #0
    3eea:	d00e      	beq.n	3f0a <evaluate_$GPGGA+0x6a>
		MAX7W_Readings.Nav_NumSatellites = (u8_t) strtoul(p_token[7], NULL, 10);
    3eec:	6abb      	ldr	r3, [r7, #40]	; 0x28
    3eee:	4618      	mov	r0, r3
    3ef0:	f04f 0100 	mov.w	r1, #0
    3ef4:	f04f 020a 	mov.w	r2, #10
    3ef8:	f009 ffa4 	bl	de44 <strtoul>
    3efc:	4603      	mov	r3, r0
    3efe:	b2da      	uxtb	r2, r3
    3f00:	f640 6310 	movw	r3, #3600	; 0xe10
    3f04:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3f08:	705a      	strb	r2, [r3, #1]
	if (p_token[8])
    3f0a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    3f0c:	2b00      	cmp	r3, #0
    3f0e:	d00b      	beq.n	3f28 <evaluate_$GPGGA+0x88>
		MAX7W_Readings.HDOP = strtof(p_token[8], NULL);
    3f10:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    3f12:	4618      	mov	r0, r3
    3f14:	f04f 0100 	mov.w	r1, #0
    3f18:	f009 fed6 	bl	dcc8 <strtof>
    3f1c:	4602      	mov	r2, r0
    3f1e:	f640 6310 	movw	r3, #3600	; 0xe10
    3f22:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3f26:	625a      	str	r2, [r3, #36]	; 0x24
	if (p_token[9])
    3f28:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    3f2a:	2b00      	cmp	r3, #0
    3f2c:	d00b      	beq.n	3f46 <evaluate_$GPGGA+0xa6>
		MAX7W_Readings.Pos_AltitudeOverSea = strtof(p_token[9], NULL);
    3f2e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    3f30:	4618      	mov	r0, r3
    3f32:	f04f 0100 	mov.w	r1, #0
    3f36:	f009 fec7 	bl	dcc8 <strtof>
    3f3a:	4602      	mov	r2, r0
    3f3c:	f640 6310 	movw	r3, #3600	; 0xe10
    3f40:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3f44:	61da      	str	r2, [r3, #28]

	return;
}
    3f46:	f107 0750 	add.w	r7, r7, #80	; 0x50
    3f4a:	46bd      	mov	sp, r7
    3f4c:	bd80      	pop	{r7, pc}
    3f4e:	bf00      	nop

00003f50 <evaluate_$GPGSA>:
//! @brief	extracts date from GPGSA message
//------------------------------------------------------------------------------
//! @param	p_msg		pointer to message buffer
//! @param	msg_len		length of message
//------------------------------------------------------------------------------
static void evaluate_$GPGSA(char *p_msg, u16_t msg_len){
    3f50:	b580      	push	{r7, lr}
    3f52:	b098      	sub	sp, #96	; 0x60
    3f54:	af02      	add	r7, sp, #8
    3f56:	6078      	str	r0, [r7, #4]
    3f58:	460b      	mov	r3, r1
    3f5a:	807b      	strh	r3, [r7, #2]
	int res;
	char *p_token[GSA_ELEM_CNT] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    3f5c:	f107 0208 	add.w	r2, r7, #8
    3f60:	f04f 034c 	mov.w	r3, #76	; 0x4c
    3f64:	4610      	mov	r0, r2
    3f66:	f04f 0100 	mov.w	r1, #0
    3f6a:	461a      	mov	r2, r3
    3f6c:	f008 fe4e 	bl	cc0c <memset>
			0, 0, 0, 0 };

	if(!p_msg)
    3f70:	687b      	ldr	r3, [r7, #4]
    3f72:	2b00      	cmp	r3, #0
    3f74:	d04b      	beq.n	400e <evaluate_$GPGSA+0xbe>
	 *  [15] -> position dilution of precision
	 *  [16] -> horizontal dilution of precision
	 *  [17] -> vertical dilution of precision
	 *  [18] -> checksum
	 **************************************************************************/
	res = spltStr(p_msg, msg_len, ',', &p_token[0], GSA_ELEM_CNT);
    3f76:	887a      	ldrh	r2, [r7, #2]
    3f78:	f107 0308 	add.w	r3, r7, #8
    3f7c:	f04f 0113 	mov.w	r1, #19
    3f80:	9100      	str	r1, [sp, #0]
    3f82:	6878      	ldr	r0, [r7, #4]
    3f84:	4611      	mov	r1, r2
    3f86:	f04f 022c 	mov.w	r2, #44	; 0x2c
    3f8a:	f000 f9d9 	bl	4340 <spltStr>
    3f8e:	6578      	str	r0, [r7, #84]	; 0x54

	if (res < GSA_ELEM_CNT - 1)
    3f90:	6d7b      	ldr	r3, [r7, #84]	; 0x54
    3f92:	2b11      	cmp	r3, #17
    3f94:	dd3b      	ble.n	400e <evaluate_$GPGSA+0xbe>
		return;

	if (p_token[2])
    3f96:	693b      	ldr	r3, [r7, #16]
    3f98:	2b00      	cmp	r3, #0
    3f9a:	d00b      	beq.n	3fb4 <evaluate_$GPGSA+0x64>
		MAX7W_Readings.Nav_Method = ascii2hex(*p_token[2]);
    3f9c:	693b      	ldr	r3, [r7, #16]
    3f9e:	781b      	ldrb	r3, [r3, #0]
    3fa0:	4618      	mov	r0, r3
    3fa2:	f000 fa51 	bl	4448 <ascii2hex>
    3fa6:	4603      	mov	r3, r0
    3fa8:	461a      	mov	r2, r3
    3faa:	f640 6310 	movw	r3, #3600	; 0xe10
    3fae:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3fb2:	709a      	strb	r2, [r3, #2]
	if (p_token[15])
    3fb4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    3fb6:	2b00      	cmp	r3, #0
    3fb8:	d00b      	beq.n	3fd2 <evaluate_$GPGSA+0x82>
		MAX7W_Readings.PDOP = strtof((const char*) p_token[15], NULL);
    3fba:	6c7b      	ldr	r3, [r7, #68]	; 0x44
    3fbc:	4618      	mov	r0, r3
    3fbe:	f04f 0100 	mov.w	r1, #0
    3fc2:	f009 fe81 	bl	dcc8 <strtof>
    3fc6:	4602      	mov	r2, r0
    3fc8:	f640 6310 	movw	r3, #3600	; 0xe10
    3fcc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3fd0:	621a      	str	r2, [r3, #32]
	if (p_token[16])
    3fd2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    3fd4:	2b00      	cmp	r3, #0
    3fd6:	d00b      	beq.n	3ff0 <evaluate_$GPGSA+0xa0>
		MAX7W_Readings.HDOP = strtof((const char*) p_token[16], NULL);
    3fd8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
    3fda:	4618      	mov	r0, r3
    3fdc:	f04f 0100 	mov.w	r1, #0
    3fe0:	f009 fe72 	bl	dcc8 <strtof>
    3fe4:	4602      	mov	r2, r0
    3fe6:	f640 6310 	movw	r3, #3600	; 0xe10
    3fea:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3fee:	625a      	str	r2, [r3, #36]	; 0x24
	if (p_token[17])
    3ff0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    3ff2:	2b00      	cmp	r3, #0
    3ff4:	d00b      	beq.n	400e <evaluate_$GPGSA+0xbe>
		MAX7W_Readings.VDOP = strtof((const char*) p_token[17], NULL);
    3ff6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
    3ff8:	4618      	mov	r0, r3
    3ffa:	f04f 0100 	mov.w	r1, #0
    3ffe:	f009 fe63 	bl	dcc8 <strtof>
    4002:	4602      	mov	r2, r0
    4004:	f640 6310 	movw	r3, #3600	; 0xe10
    4008:	f2c1 0300 	movt	r3, #4096	; 0x1000
    400c:	629a      	str	r2, [r3, #40]	; 0x28

	return;
}
    400e:	f107 0758 	add.w	r7, r7, #88	; 0x58
    4012:	46bd      	mov	sp, r7
    4014:	bd80      	pop	{r7, pc}
    4016:	bf00      	nop

00004018 <evaluate_$GPGLL>:
//! @brief	extracts date from GPGLL message
//------------------------------------------------------------------------------
//! @param	p_msg		pointer to message buffer
//! @param	msg_len		length of message
//------------------------------------------------------------------------------
static void evaluate_$GPGLL(char *p_msg, u16_t msg_len){
    4018:	b590      	push	{r4, r7, lr}
    401a:	b091      	sub	sp, #68	; 0x44
    401c:	af02      	add	r7, sp, #8
    401e:	6078      	str	r0, [r7, #4]
    4020:	460b      	mov	r3, r1
    4022:	807b      	strh	r3, [r7, #2]
	int res;
	char *p_token[GLL_ELEM_CNT] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    4024:	f04f 0300 	mov.w	r3, #0
    4028:	60fb      	str	r3, [r7, #12]
    402a:	f04f 0300 	mov.w	r3, #0
    402e:	613b      	str	r3, [r7, #16]
    4030:	f04f 0300 	mov.w	r3, #0
    4034:	617b      	str	r3, [r7, #20]
    4036:	f04f 0300 	mov.w	r3, #0
    403a:	61bb      	str	r3, [r7, #24]
    403c:	f04f 0300 	mov.w	r3, #0
    4040:	61fb      	str	r3, [r7, #28]
    4042:	f04f 0300 	mov.w	r3, #0
    4046:	623b      	str	r3, [r7, #32]
    4048:	f04f 0300 	mov.w	r3, #0
    404c:	627b      	str	r3, [r7, #36]	; 0x24
    404e:	f04f 0300 	mov.w	r3, #0
    4052:	62bb      	str	r3, [r7, #40]	; 0x28
    4054:	f04f 0300 	mov.w	r3, #0
    4058:	62fb      	str	r3, [r7, #44]	; 0x2c

	if(!p_msg)
    405a:	687b      	ldr	r3, [r7, #4]
    405c:	2b00      	cmp	r3, #0
    405e:	f000 8115 	beq.w	428c <evaluate_$GPGLL+0x274>
	 *  [5] -> UTC time hhmmss.ss
	 *  [6] -> status 'A' (data valid) | 'V' (data invalid)
	 *  [7] -> positioning mode (optional)
	 *  [7|8] -> checksum
	 **************************************************************************/
	res = spltStr(p_msg, msg_len, ',', &p_token[0], GLL_ELEM_CNT);
    4062:	887a      	ldrh	r2, [r7, #2]
    4064:	f107 030c 	add.w	r3, r7, #12
    4068:	f04f 0109 	mov.w	r1, #9
    406c:	9100      	str	r1, [sp, #0]
    406e:	6878      	ldr	r0, [r7, #4]
    4070:	4611      	mov	r1, r2
    4072:	f04f 022c 	mov.w	r2, #44	; 0x2c
    4076:	f000 f963 	bl	4340 <spltStr>
    407a:	6378      	str	r0, [r7, #52]	; 0x34

	if (res < GLL_ELEM_CNT - 2) // one optional element
    407c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    407e:	2b06      	cmp	r3, #6
    4080:	f340 8104 	ble.w	428c <evaluate_$GPGLL+0x274>
		return;

	// make sure that length of token is okay
	if (p_token[5] && (p_token[6] == p_token[5] + 10)) {
    4084:	6a3b      	ldr	r3, [r7, #32]
    4086:	2b00      	cmp	r3, #0
    4088:	f000 80a3 	beq.w	41d2 <evaluate_$GPGLL+0x1ba>
    408c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    408e:	6a3b      	ldr	r3, [r7, #32]
    4090:	f103 030a 	add.w	r3, r3, #10
    4094:	429a      	cmp	r2, r3
    4096:	f040 809c 	bne.w	41d2 <evaluate_$GPGLL+0x1ba>
		char *p_chr;
		p_chr = p_token[5];
    409a:	6a3b      	ldr	r3, [r7, #32]
    409c:	633b      	str	r3, [r7, #48]	; 0x30
		MAX7W_Readings.Time_Hrs = ascii2hex(*(p_chr++)) * 10;
    409e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    40a0:	781b      	ldrb	r3, [r3, #0]
    40a2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    40a4:	f102 0201 	add.w	r2, r2, #1
    40a8:	633a      	str	r2, [r7, #48]	; 0x30
    40aa:	4618      	mov	r0, r3
    40ac:	f000 f9cc 	bl	4448 <ascii2hex>
    40b0:	4603      	mov	r3, r0
    40b2:	461a      	mov	r2, r3
    40b4:	ea4f 0282 	mov.w	r2, r2, lsl #2
    40b8:	18d3      	adds	r3, r2, r3
    40ba:	ea4f 0343 	mov.w	r3, r3, lsl #1
    40be:	b2da      	uxtb	r2, r3
    40c0:	f640 6310 	movw	r3, #3600	; 0xe10
    40c4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    40c8:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
		MAX7W_Readings.Time_Hrs += ascii2hex(*(p_chr++));
    40cc:	f640 6310 	movw	r3, #3600	; 0xe10
    40d0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    40d4:	f893 402c 	ldrb.w	r4, [r3, #44]	; 0x2c
    40d8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    40da:	781b      	ldrb	r3, [r3, #0]
    40dc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    40de:	f102 0201 	add.w	r2, r2, #1
    40e2:	633a      	str	r2, [r7, #48]	; 0x30
    40e4:	4618      	mov	r0, r3
    40e6:	f000 f9af 	bl	4448 <ascii2hex>
    40ea:	4603      	mov	r3, r0
    40ec:	18e3      	adds	r3, r4, r3
    40ee:	b2da      	uxtb	r2, r3
    40f0:	f640 6310 	movw	r3, #3600	; 0xe10
    40f4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    40f8:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
		MAX7W_Readings.Time_Min = ascii2hex(*(p_chr++)) * 10;
    40fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    40fe:	781b      	ldrb	r3, [r3, #0]
    4100:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    4102:	f102 0201 	add.w	r2, r2, #1
    4106:	633a      	str	r2, [r7, #48]	; 0x30
    4108:	4618      	mov	r0, r3
    410a:	f000 f99d 	bl	4448 <ascii2hex>
    410e:	4603      	mov	r3, r0
    4110:	461a      	mov	r2, r3
    4112:	ea4f 0282 	mov.w	r2, r2, lsl #2
    4116:	18d3      	adds	r3, r2, r3
    4118:	ea4f 0343 	mov.w	r3, r3, lsl #1
    411c:	b2da      	uxtb	r2, r3
    411e:	f640 6310 	movw	r3, #3600	; 0xe10
    4122:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4126:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
		MAX7W_Readings.Time_Min += ascii2hex(*(p_chr++));
    412a:	f640 6310 	movw	r3, #3600	; 0xe10
    412e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4132:	f893 402d 	ldrb.w	r4, [r3, #45]	; 0x2d
    4136:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    4138:	781b      	ldrb	r3, [r3, #0]
    413a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    413c:	f102 0201 	add.w	r2, r2, #1
    4140:	633a      	str	r2, [r7, #48]	; 0x30
    4142:	4618      	mov	r0, r3
    4144:	f000 f980 	bl	4448 <ascii2hex>
    4148:	4603      	mov	r3, r0
    414a:	18e3      	adds	r3, r4, r3
    414c:	b2da      	uxtb	r2, r3
    414e:	f640 6310 	movw	r3, #3600	; 0xe10
    4152:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4156:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
		MAX7W_Readings.Time_Sec = ascii2hex(*(p_chr++)) * 10;
    415a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    415c:	781b      	ldrb	r3, [r3, #0]
    415e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    4160:	f102 0201 	add.w	r2, r2, #1
    4164:	633a      	str	r2, [r7, #48]	; 0x30
    4166:	4618      	mov	r0, r3
    4168:	f000 f96e 	bl	4448 <ascii2hex>
    416c:	4603      	mov	r3, r0
    416e:	461a      	mov	r2, r3
    4170:	ea4f 0282 	mov.w	r2, r2, lsl #2
    4174:	18d3      	adds	r3, r2, r3
    4176:	ea4f 0343 	mov.w	r3, r3, lsl #1
    417a:	b2da      	uxtb	r2, r3
    417c:	f640 6310 	movw	r3, #3600	; 0xe10
    4180:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4184:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
		MAX7W_Readings.Time_Sec += ascii2hex(*(p_chr++));
    4188:	f640 6310 	movw	r3, #3600	; 0xe10
    418c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4190:	f893 402e 	ldrb.w	r4, [r3, #46]	; 0x2e
    4194:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    4196:	781b      	ldrb	r3, [r3, #0]
    4198:	6b3a      	ldr	r2, [r7, #48]	; 0x30
    419a:	f102 0201 	add.w	r2, r2, #1
    419e:	633a      	str	r2, [r7, #48]	; 0x30
    41a0:	4618      	mov	r0, r3
    41a2:	f000 f951 	bl	4448 <ascii2hex>
    41a6:	4603      	mov	r3, r0
    41a8:	18e3      	adds	r3, r4, r3
    41aa:	b2da      	uxtb	r2, r3
    41ac:	f640 6310 	movw	r3, #3600	; 0xe10
    41b0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    41b4:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
		MAX7W_Readings.Validity |= GPS_TIME_VALID;
    41b8:	f640 6310 	movw	r3, #3600	; 0xe10
    41bc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    41c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    41c2:	f043 0201 	orr.w	r2, r3, #1
    41c6:	f640 6310 	movw	r3, #3600	; 0xe10
    41ca:	f2c1 0300 	movt	r3, #4096	; 0x1000
    41ce:	635a      	str	r2, [r3, #52]	; 0x34

	if (res < GLL_ELEM_CNT - 2) // one optional element
		return;

	// make sure that length of token is okay
	if (p_token[5] && (p_token[6] == p_token[5] + 10)) {
    41d0:	e023      	b.n	421a <evaluate_$GPGLL+0x202>
		MAX7W_Readings.Time_Min += ascii2hex(*(p_chr++));
		MAX7W_Readings.Time_Sec = ascii2hex(*(p_chr++)) * 10;
		MAX7W_Readings.Time_Sec += ascii2hex(*(p_chr++));
		MAX7W_Readings.Validity |= GPS_TIME_VALID;
	} else {
		MAX7W_Readings.Time_Hrs = 0;
    41d2:	f640 6310 	movw	r3, #3600	; 0xe10
    41d6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    41da:	f04f 0200 	mov.w	r2, #0
    41de:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
		MAX7W_Readings.Time_Min = 0;
    41e2:	f640 6310 	movw	r3, #3600	; 0xe10
    41e6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    41ea:	f04f 0200 	mov.w	r2, #0
    41ee:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
		MAX7W_Readings.Time_Sec = 0;
    41f2:	f640 6310 	movw	r3, #3600	; 0xe10
    41f6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    41fa:	f04f 0200 	mov.w	r2, #0
    41fe:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
		MAX7W_Readings.Validity &= ~GPS_TIME_VALID;
    4202:	f640 6310 	movw	r3, #3600	; 0xe10
    4206:	f2c1 0300 	movt	r3, #4096	; 0x1000
    420a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    420c:	f023 0201 	bic.w	r2, r3, #1
    4210:	f640 6310 	movw	r3, #3600	; 0xe10
    4214:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4218:	635a      	str	r2, [r3, #52]	; 0x34
	}

	// first check status filed to know if position data is valid!
	if (p_token[6] && *p_token[6] == 'V')
    421a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    421c:	2b00      	cmp	r3, #0
    421e:	d003      	beq.n	4228 <evaluate_$GPGLL+0x210>
    4220:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    4222:	781b      	ldrb	r3, [r3, #0]
    4224:	2b56      	cmp	r3, #86	; 0x56
    4226:	d031      	beq.n	428c <evaluate_$GPGLL+0x274>
		return;

	if (p_token[1])
    4228:	693b      	ldr	r3, [r7, #16]
    422a:	2b00      	cmp	r3, #0
    422c:	d00b      	beq.n	4246 <evaluate_$GPGLL+0x22e>
		MAX7W_Readings.Pos_Latitude = strtof((const char*) p_token[1], NULL);
    422e:	693b      	ldr	r3, [r7, #16]
    4230:	4618      	mov	r0, r3
    4232:	f04f 0100 	mov.w	r1, #0
    4236:	f009 fd47 	bl	dcc8 <strtof>
    423a:	4602      	mov	r2, r0
    423c:	f640 6310 	movw	r3, #3600	; 0xe10
    4240:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4244:	615a      	str	r2, [r3, #20]
	if (p_token[2])
    4246:	697b      	ldr	r3, [r7, #20]
    4248:	2b00      	cmp	r3, #0
    424a:	d006      	beq.n	425a <evaluate_$GPGLL+0x242>
		MAX7W_Readings.Pos_LatitudeIndNS = *p_token[2]; // character 'N' or 'S'
    424c:	697b      	ldr	r3, [r7, #20]
    424e:	781a      	ldrb	r2, [r3, #0]
    4250:	f640 6310 	movw	r3, #3600	; 0xe10
    4254:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4258:	761a      	strb	r2, [r3, #24]
	if (p_token[3])
    425a:	69bb      	ldr	r3, [r7, #24]
    425c:	2b00      	cmp	r3, #0
    425e:	d00b      	beq.n	4278 <evaluate_$GPGLL+0x260>
		MAX7W_Readings.Pos_Longitude = strtof((const char*) p_token[3], NULL);
    4260:	69bb      	ldr	r3, [r7, #24]
    4262:	4618      	mov	r0, r3
    4264:	f04f 0100 	mov.w	r1, #0
    4268:	f009 fd2e 	bl	dcc8 <strtof>
    426c:	4602      	mov	r2, r0
    426e:	f640 6310 	movw	r3, #3600	; 0xe10
    4272:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4276:	60da      	str	r2, [r3, #12]
	if (p_token[4])
    4278:	69fb      	ldr	r3, [r7, #28]
    427a:	2b00      	cmp	r3, #0
    427c:	d006      	beq.n	428c <evaluate_$GPGLL+0x274>
		MAX7W_Readings.Pos_LongitudeIndEW = *p_token[4]; // character 'E' or 'W'
    427e:	69fb      	ldr	r3, [r7, #28]
    4280:	781a      	ldrb	r2, [r3, #0]
    4282:	f640 6310 	movw	r3, #3600	; 0xe10
    4286:	f2c1 0300 	movt	r3, #4096	; 0x1000
    428a:	741a      	strb	r2, [r3, #16]

	return;
}
    428c:	f107 073c 	add.w	r7, r7, #60	; 0x3c
    4290:	46bd      	mov	sp, r7
    4292:	bd90      	pop	{r4, r7, pc}

00004294 <validate_csum>:
//! @param	msg_len		length of message
//------------------------------------------------------------------------------
//! @return 0 if checksums is false
//! @return 1 if checksum is okay
//------------------------------------------------------------------------------
static int validate_csum(char *p_msg, unsigned int msg_len){
    4294:	b580      	push	{r7, lr}
    4296:	b084      	sub	sp, #16
    4298:	af00      	add	r7, sp, #0
    429a:	6078      	str	r0, [r7, #4]
    429c:	6039      	str	r1, [r7, #0]
	u8_t cs_calc;		//!< self-calculated checksum of the incoming message
	u8_t cs_rcv;  		//!< received checksum of the incoming message
	u8_t i_csum;

	// if message length was is not valid
	if(msg_len > GPS_BUF_SZ || msg_len < 4)
    429e:	683b      	ldr	r3, [r7, #0]
    42a0:	2b80      	cmp	r3, #128	; 0x80
    42a2:	d802      	bhi.n	42aa <validate_csum+0x16>
    42a4:	683b      	ldr	r3, [r7, #0]
    42a6:	2b03      	cmp	r3, #3
    42a8:	d802      	bhi.n	42b0 <validate_csum+0x1c>
		return 0;		
    42aa:	f04f 0300 	mov.w	r3, #0
    42ae:	e041      	b.n	4334 <validate_csum+0xa0>
	
	// msg_len is incl. leading $ but without trailing <0D><0A><00>
	msg_len-=3;
    42b0:	683b      	ldr	r3, [r7, #0]
    42b2:	f1a3 0303 	sub.w	r3, r3, #3
    42b6:	603b      	str	r3, [r7, #0]

	// see if checksum of received NmeaCmdString is ok
	cs_rcv = (ascii2hex(p_msg[msg_len - 1]) << 4) & 0x0F0;
    42b8:	683b      	ldr	r3, [r7, #0]
    42ba:	f103 33ff 	add.w	r3, r3, #4294967295
    42be:	687a      	ldr	r2, [r7, #4]
    42c0:	18d3      	adds	r3, r2, r3
    42c2:	781b      	ldrb	r3, [r3, #0]
    42c4:	4618      	mov	r0, r3
    42c6:	f000 f8bf 	bl	4448 <ascii2hex>
    42ca:	4603      	mov	r3, r0
    42cc:	ea4f 1303 	mov.w	r3, r3, lsl #4
    42d0:	737b      	strb	r3, [r7, #13]
	cs_rcv = (cs_rcv | ((ascii2hex(p_msg[msg_len])) & 0x00F));
    42d2:	687a      	ldr	r2, [r7, #4]
    42d4:	683b      	ldr	r3, [r7, #0]
    42d6:	18d3      	adds	r3, r2, r3
    42d8:	781b      	ldrb	r3, [r3, #0]
    42da:	4618      	mov	r0, r3
    42dc:	f000 f8b4 	bl	4448 <ascii2hex>
    42e0:	4603      	mov	r3, r0
    42e2:	b2db      	uxtb	r3, r3
    42e4:	f003 030f 	and.w	r3, r3, #15
    42e8:	b2da      	uxtb	r2, r3
    42ea:	7b7b      	ldrb	r3, [r7, #13]
    42ec:	4313      	orrs	r3, r2
    42ee:	b2db      	uxtb	r3, r3
    42f0:	737b      	strb	r3, [r7, #13]

	// calculate checksum of anything between $ and *
	cs_calc = 0;
    42f2:	f04f 0300 	mov.w	r3, #0
    42f6:	73fb      	strb	r3, [r7, #15]
	for (i_csum = 1; i_csum <= msg_len-3; i_csum++) {
    42f8:	f04f 0301 	mov.w	r3, #1
    42fc:	73bb      	strb	r3, [r7, #14]
    42fe:	e00a      	b.n	4316 <validate_csum+0x82>
		cs_calc = cs_calc ^ (p_msg[i_csum]);
    4300:	7bbb      	ldrb	r3, [r7, #14]
    4302:	687a      	ldr	r2, [r7, #4]
    4304:	18d3      	adds	r3, r2, r3
    4306:	781a      	ldrb	r2, [r3, #0]
    4308:	7bfb      	ldrb	r3, [r7, #15]
    430a:	4053      	eors	r3, r2
    430c:	73fb      	strb	r3, [r7, #15]
	cs_rcv = (ascii2hex(p_msg[msg_len - 1]) << 4) & 0x0F0;
	cs_rcv = (cs_rcv | ((ascii2hex(p_msg[msg_len])) & 0x00F));

	// calculate checksum of anything between $ and *
	cs_calc = 0;
	for (i_csum = 1; i_csum <= msg_len-3; i_csum++) {
    430e:	7bbb      	ldrb	r3, [r7, #14]
    4310:	f103 0301 	add.w	r3, r3, #1
    4314:	73bb      	strb	r3, [r7, #14]
    4316:	7bba      	ldrb	r2, [r7, #14]
    4318:	683b      	ldr	r3, [r7, #0]
    431a:	f1a3 0303 	sub.w	r3, r3, #3
    431e:	429a      	cmp	r2, r3
    4320:	d9ee      	bls.n	4300 <validate_csum+0x6c>
		cs_calc = cs_calc ^ (p_msg[i_csum]);
	}

	if (cs_calc != cs_rcv)
    4322:	7bfa      	ldrb	r2, [r7, #15]
    4324:	7b7b      	ldrb	r3, [r7, #13]
    4326:	429a      	cmp	r2, r3
    4328:	d002      	beq.n	4330 <validate_csum+0x9c>
		return 0;
    432a:	f04f 0300 	mov.w	r3, #0
    432e:	e001      	b.n	4334 <validate_csum+0xa0>

	return 1;
    4330:	f04f 0301 	mov.w	r3, #1
}
    4334:	4618      	mov	r0, r3
    4336:	f107 0710 	add.w	r7, r7, #16
    433a:	46bd      	mov	sp, r7
    433c:	bd80      	pop	{r7, pc}
    433e:	bf00      	nop

00004340 <spltStr>:
//------------------------------------------------------------------------------
//! @return <0 in case of errors
//! @return >=0 number of elements the string is spit in
//!				(never > cnt -> further elements are ignored).
//------------------------------------------------------------------------------
static int spltStr(char *p_str, u16_t sz, char delim, char **pp_res, u8_t cnt) {
    4340:	b480      	push	{r7}
    4342:	b087      	sub	sp, #28
    4344:	af00      	add	r7, sp, #0
    4346:	60f8      	str	r0, [r7, #12]
    4348:	607b      	str	r3, [r7, #4]
    434a:	460b      	mov	r3, r1
    434c:	817b      	strh	r3, [r7, #10]
    434e:	4613      	mov	r3, r2
    4350:	727b      	strb	r3, [r7, #9]
	u8_t i; //!< position in string
	u8_t k; //!< number of current element

	if (!p_str)
    4352:	68fb      	ldr	r3, [r7, #12]
    4354:	2b00      	cmp	r3, #0
    4356:	d102      	bne.n	435e <spltStr+0x1e>
		return -1;
    4358:	f04f 33ff 	mov.w	r3, #4294967295
    435c:	e052      	b.n	4404 <spltStr+0xc4>
	if (!pp_res)
    435e:	687b      	ldr	r3, [r7, #4]
    4360:	2b00      	cmp	r3, #0
    4362:	d102      	bne.n	436a <spltStr+0x2a>
		return -1;
    4364:	f04f 33ff 	mov.w	r3, #4294967295
    4368:	e04c      	b.n	4404 <spltStr+0xc4>
	if (sz < 1)
    436a:	897b      	ldrh	r3, [r7, #10]
    436c:	2b00      	cmp	r3, #0
    436e:	d102      	bne.n	4376 <spltStr+0x36>
		return -1;
    4370:	f04f 33ff 	mov.w	r3, #4294967295
    4374:	e046      	b.n	4404 <spltStr+0xc4>

	k = 0;
    4376:	f04f 0300 	mov.w	r3, #0
    437a:	75bb      	strb	r3, [r7, #22]

	pp_res[k++] = &p_str[0];
    437c:	7dbb      	ldrb	r3, [r7, #22]
    437e:	ea4f 0383 	mov.w	r3, r3, lsl #2
    4382:	687a      	ldr	r2, [r7, #4]
    4384:	18d3      	adds	r3, r2, r3
    4386:	68fa      	ldr	r2, [r7, #12]
    4388:	601a      	str	r2, [r3, #0]
    438a:	7dbb      	ldrb	r3, [r7, #22]
    438c:	f103 0301 	add.w	r3, r3, #1
    4390:	75bb      	strb	r3, [r7, #22]

	// search max cnt elements in first sz chars
	for (i = 0; i < sz; i++) {
    4392:	f04f 0300 	mov.w	r3, #0
    4396:	75fb      	strb	r3, [r7, #23]
    4398:	e02e      	b.n	43f8 <spltStr+0xb8>
		if (p_str[i] == '\0') {
    439a:	7dfb      	ldrb	r3, [r7, #23]
    439c:	68fa      	ldr	r2, [r7, #12]
    439e:	18d3      	adds	r3, r2, r3
    43a0:	781b      	ldrb	r3, [r3, #0]
    43a2:	2b00      	cmp	r3, #0
    43a4:	d101      	bne.n	43aa <spltStr+0x6a>
			return k;
    43a6:	7dbb      	ldrb	r3, [r7, #22]
    43a8:	e02c      	b.n	4404 <spltStr+0xc4>
		} else if (p_str[i] == delim) {
    43aa:	7dfb      	ldrb	r3, [r7, #23]
    43ac:	68fa      	ldr	r2, [r7, #12]
    43ae:	18d3      	adds	r3, r2, r3
    43b0:	781b      	ldrb	r3, [r3, #0]
    43b2:	7a7a      	ldrb	r2, [r7, #9]
    43b4:	429a      	cmp	r2, r3
    43b6:	d114      	bne.n	43e2 <spltStr+0xa2>
			p_str[i] = '\0';
    43b8:	7dfb      	ldrb	r3, [r7, #23]
    43ba:	68fa      	ldr	r2, [r7, #12]
    43bc:	18d3      	adds	r3, r2, r3
    43be:	f04f 0200 	mov.w	r2, #0
    43c2:	701a      	strb	r2, [r3, #0]
			pp_res[k++] = &p_str[i + 1];
    43c4:	7dbb      	ldrb	r3, [r7, #22]
    43c6:	ea4f 0383 	mov.w	r3, r3, lsl #2
    43ca:	687a      	ldr	r2, [r7, #4]
    43cc:	18d3      	adds	r3, r2, r3
    43ce:	7dfa      	ldrb	r2, [r7, #23]
    43d0:	f102 0201 	add.w	r2, r2, #1
    43d4:	68f9      	ldr	r1, [r7, #12]
    43d6:	188a      	adds	r2, r1, r2
    43d8:	601a      	str	r2, [r3, #0]
    43da:	7dbb      	ldrb	r3, [r7, #22]
    43dc:	f103 0301 	add.w	r3, r3, #1
    43e0:	75bb      	strb	r3, [r7, #22]
		}

		if (k >= cnt)
    43e2:	7dba      	ldrb	r2, [r7, #22]
    43e4:	f897 3020 	ldrb.w	r3, [r7, #32]
    43e8:	429a      	cmp	r2, r3
    43ea:	d301      	bcc.n	43f0 <spltStr+0xb0>
			return k;
    43ec:	7dbb      	ldrb	r3, [r7, #22]
    43ee:	e009      	b.n	4404 <spltStr+0xc4>
	k = 0;

	pp_res[k++] = &p_str[0];

	// search max cnt elements in first sz chars
	for (i = 0; i < sz; i++) {
    43f0:	7dfb      	ldrb	r3, [r7, #23]
    43f2:	f103 0301 	add.w	r3, r3, #1
    43f6:	75fb      	strb	r3, [r7, #23]
    43f8:	7dfb      	ldrb	r3, [r7, #23]
    43fa:	b29b      	uxth	r3, r3
    43fc:	897a      	ldrh	r2, [r7, #10]
    43fe:	429a      	cmp	r2, r3
    4400:	d8cb      	bhi.n	439a <spltStr+0x5a>

		if (k >= cnt)
			return k;
	}

	return k;
    4402:	7dbb      	ldrb	r3, [r7, #22]
}
    4404:	4618      	mov	r0, r3
    4406:	f107 071c 	add.w	r7, r7, #28
    440a:	46bd      	mov	sp, r7
    440c:	bc80      	pop	{r7}
    440e:	4770      	bx	lr

00004410 <hex2ascii>:
//------------------------------------------------------------------------------
//! @param	chr	value to convert
//------------------------------------------------------------------------------
//! @return converted char
//------------------------------------------------------------------------------
static u8_t hex2ascii(u8_t chr){
    4410:	b480      	push	{r7}
    4412:	b083      	sub	sp, #12
    4414:	af00      	add	r7, sp, #0
    4416:	4603      	mov	r3, r0
    4418:	71fb      	strb	r3, [r7, #7]
	chr = chr & 0xF;
    441a:	79fb      	ldrb	r3, [r7, #7]
    441c:	f003 030f 	and.w	r3, r3, #15
    4420:	71fb      	strb	r3, [r7, #7]
	if (chr > 9) {
    4422:	79fb      	ldrb	r3, [r7, #7]
    4424:	2b09      	cmp	r3, #9
    4426:	d904      	bls.n	4432 <hex2ascii+0x22>
		chr += ('A' - 10); //characters
    4428:	79fb      	ldrb	r3, [r7, #7]
    442a:	f103 0337 	add.w	r3, r3, #55	; 0x37
    442e:	71fb      	strb	r3, [r7, #7]
    4430:	e003      	b.n	443a <hex2ascii+0x2a>
	} else {
		chr += '0'; // numbers
    4432:	79fb      	ldrb	r3, [r7, #7]
    4434:	f103 0330 	add.w	r3, r3, #48	; 0x30
    4438:	71fb      	strb	r3, [r7, #7]
	}
	return chr;
    443a:	79fb      	ldrb	r3, [r7, #7]
}
    443c:	4618      	mov	r0, r3
    443e:	f107 070c 	add.w	r7, r7, #12
    4442:	46bd      	mov	sp, r7
    4444:	bc80      	pop	{r7}
    4446:	4770      	bx	lr

00004448 <ascii2hex>:
//------------------------------------------------------------------------------
//! @param	chr	char to convert
//------------------------------------------------------------------------------
//! @return converted number
//------------------------------------------------------------------------------
static u8_t ascii2hex(u8_t chr){
    4448:	b480      	push	{r7}
    444a:	b083      	sub	sp, #12
    444c:	af00      	add	r7, sp, #0
    444e:	4603      	mov	r3, r0
    4450:	71fb      	strb	r3, [r7, #7]
	if ((chr <= 'F') && (chr >= 'A')) // upper case characters
    4452:	79fb      	ldrb	r3, [r7, #7]
    4454:	2b46      	cmp	r3, #70	; 0x46
    4456:	d80b      	bhi.n	4470 <ascii2hex+0x28>
    4458:	79fb      	ldrb	r3, [r7, #7]
    445a:	2b40      	cmp	r3, #64	; 0x40
    445c:	d908      	bls.n	4470 <ascii2hex+0x28>
			{
		chr -= ('A' - 10);
    445e:	79fb      	ldrb	r3, [r7, #7]
    4460:	f1a3 0337 	sub.w	r3, r3, #55	; 0x37
    4464:	71fb      	strb	r3, [r7, #7]
		return chr & 0xF;
    4466:	79fb      	ldrb	r3, [r7, #7]
    4468:	f003 030f 	and.w	r3, r3, #15
    446c:	b2db      	uxtb	r3, r3
    446e:	e020      	b.n	44b2 <ascii2hex+0x6a>
	} else if ((chr <= 'f') && (chr >= 'a')) // lower case characters
    4470:	79fb      	ldrb	r3, [r7, #7]
    4472:	2b66      	cmp	r3, #102	; 0x66
    4474:	d80b      	bhi.n	448e <ascii2hex+0x46>
    4476:	79fb      	ldrb	r3, [r7, #7]
    4478:	2b60      	cmp	r3, #96	; 0x60
    447a:	d908      	bls.n	448e <ascii2hex+0x46>
			{
		chr -= ('a' - 10);
    447c:	79fb      	ldrb	r3, [r7, #7]
    447e:	f1a3 0357 	sub.w	r3, r3, #87	; 0x57
    4482:	71fb      	strb	r3, [r7, #7]
		return chr & 0xF;
    4484:	79fb      	ldrb	r3, [r7, #7]
    4486:	f003 030f 	and.w	r3, r3, #15
    448a:	b2db      	uxtb	r3, r3
    448c:	e011      	b.n	44b2 <ascii2hex+0x6a>
	}

	else if ((chr <= '9') && (chr >= '0')) // numbers
    448e:	79fb      	ldrb	r3, [r7, #7]
    4490:	2b39      	cmp	r3, #57	; 0x39
    4492:	d807      	bhi.n	44a4 <ascii2hex+0x5c>
    4494:	79fb      	ldrb	r3, [r7, #7]
    4496:	2b2f      	cmp	r3, #47	; 0x2f
    4498:	d904      	bls.n	44a4 <ascii2hex+0x5c>
			{
		chr -= '0';
    449a:	79fb      	ldrb	r3, [r7, #7]
    449c:	f1a3 0330 	sub.w	r3, r3, #48	; 0x30
    44a0:	71fb      	strb	r3, [r7, #7]
    44a2:	e002      	b.n	44aa <ascii2hex+0x62>
	} else {
		chr = 0;
    44a4:	f04f 0300 	mov.w	r3, #0
    44a8:	71fb      	strb	r3, [r7, #7]
	}
	return chr & 0xF;
    44aa:	79fb      	ldrb	r3, [r7, #7]
    44ac:	f003 030f 	and.w	r3, r3, #15
    44b0:	b2db      	uxtb	r3, r3
}
    44b2:	4618      	mov	r0, r3
    44b4:	f107 070c 	add.w	r7, r7, #12
    44b8:	46bd      	mov	sp, r7
    44ba:	bc80      	pop	{r7}
    44bc:	4770      	bx	lr
    44be:	bf00      	nop

000044c0 <MEMS_BMC050_init_Accelerometer>:
//! @brief	initializes accelerometer part of BMC50/150 sensor with default
//!			settings. If not done yet SSP is also initialized
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
HWStatus_t MEMS_BMC050_init_Accelerometer(void){
    44c0:	b580      	push	{r7, lr}
    44c2:	b08a      	sub	sp, #40	; 0x28
    44c4:	af00      	add	r7, sp, #0
	u8_t wBuff[bufsize];
	u8_t rBuff[bufsize];

	if(!ssp_init){
    44c6:	f640 23bb 	movw	r3, #2747	; 0xabb
    44ca:	f2c1 0300 	movt	r3, #4096	; 0x1000
    44ce:	781b      	ldrb	r3, [r3, #0]
    44d0:	2b00      	cmp	r3, #0
    44d2:	d107      	bne.n	44e4 <MEMS_BMC050_init_Accelerometer+0x24>
		if(initSSP() != HW_ERR_OK)
    44d4:	f000 fd68 	bl	4fa8 <initSSP>
    44d8:	4603      	mov	r3, r0
    44da:	2b00      	cmp	r3, #0
    44dc:	d002      	beq.n	44e4 <MEMS_BMC050_init_Accelerometer+0x24>
			return HW_ERR_RESOURCE;
    44de:	f04f 0302 	mov.w	r3, #2
    44e2:	e170      	b.n	47c6 <MEMS_BMC050_init_Accelerometer+0x306>
	}

	if(!data_init)
    44e4:	f640 23bc 	movw	r3, #2748	; 0xabc
    44e8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    44ec:	781b      	ldrb	r3, [r3, #0]
    44ee:	2b00      	cmp	r3, #0
    44f0:	d101      	bne.n	44f6 <MEMS_BMC050_init_Accelerometer+0x36>
		initData();
    44f2:	f000 fd3d 	bl	4f70 <initData>

	// this initializes the accelerometer
	// write register 34h: spi 4-wire
	wAccReg(0x34, 0x00);
    44f6:	f04f 0034 	mov.w	r0, #52	; 0x34
    44fa:	f04f 0100 	mov.w	r1, #0
    44fe:	f001 f995 	bl	582c <wAccReg>

	// write register 0Fh: G-range
	setAccRange();
    4502:	f000 ff5b 	bl	53bc <setAccRange>
	
	AccBWPwrConfig.cmd=0x10;
    4506:	f640 23a0 	movw	r3, #2720	; 0xaa0
    450a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    450e:	f04f 0210 	mov.w	r2, #16
    4512:	701a      	strb	r2, [r3, #0]
	AccBWPwrConfig.Reg_0x10.bandwidth = 0x4;
    4514:	f640 23a0 	movw	r3, #2720	; 0xaa0
    4518:	f2c1 0300 	movt	r3, #4096	; 0x1000
    451c:	785a      	ldrb	r2, [r3, #1]
    451e:	f04f 0104 	mov.w	r1, #4
    4522:	f361 0204 	bfi	r2, r1, #0, #5
    4526:	705a      	strb	r2, [r3, #1]
	AccBWPwrConfig.Reg_0x11.lowpower_en=0;
    4528:	f640 23a0 	movw	r3, #2720	; 0xaa0
    452c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4530:	789a      	ldrb	r2, [r3, #2]
    4532:	f36f 1286 	bfc	r2, #6, #1
    4536:	709a      	strb	r2, [r3, #2]
	AccBWPwrConfig.Reg_0x11.sleep_dur=0;
    4538:	f640 23a0 	movw	r3, #2720	; 0xaa0
    453c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4540:	789a      	ldrb	r2, [r3, #2]
    4542:	f36f 0244 	bfc	r2, #1, #4
    4546:	709a      	strb	r2, [r3, #2]
	AccBWPwrConfig.Reg_0x11.suspend=0;
    4548:	f640 23a0 	movw	r3, #2720	; 0xaa0
    454c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4550:	789a      	ldrb	r2, [r3, #2]
    4552:	f36f 12c7 	bfc	r2, #7, #1
    4556:	709a      	strb	r2, [r3, #2]
	rwACC((u8_t*)&AccBWPwrConfig, rBuff, 3);
    4558:	463b      	mov	r3, r7
    455a:	f640 20a0 	movw	r0, #2720	; 0xaa0
    455e:	f2c1 0000 	movt	r0, #4096	; 0x1000
    4562:	4619      	mov	r1, r3
    4564:	f04f 0203 	mov.w	r2, #3
    4568:	f001 f97c 	bl	5864 <rwACC>

	// write register 13h: Filtered Data & Shadow on
	wAccReg(0x13, 0x00);
    456c:	f04f 0013 	mov.w	r0, #19
    4570:	f04f 0100 	mov.w	r1, #0
    4574:	f001 f95a 	bl	582c <wAccReg>
	
	readAccIRQConfig();
    4578:	f000 ff4c 	bl	5414 <readAccIRQConfig>

	// disable desired interrupt, change parameters, wait for about 1[ms],
	// enable the desired interrupt
	AccIRQConfig.Reg_0x2C.orient_blocking = 3;
    457c:	f640 2384 	movw	r3, #2692	; 0xa84
    4580:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4584:	7dda      	ldrb	r2, [r3, #23]
    4586:	f042 020c 	orr.w	r2, r2, #12
    458a:	75da      	strb	r2, [r3, #23]
	AccIRQConfig.Reg_0x2C.orient_hyst = 3;
    458c:	f640 2384 	movw	r3, #2692	; 0xa84
    4590:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4594:	7dda      	ldrb	r2, [r3, #23]
    4596:	f04f 0103 	mov.w	r1, #3
    459a:	f361 1206 	bfi	r2, r1, #4, #3
    459e:	75da      	strb	r2, [r3, #23]
	wAccReg(0x2C, *((u8_t*)&AccIRQConfig.Reg_0x2C));
    45a0:	4b8b      	ldr	r3, [pc, #556]	; (47d0 <MEMS_BMC050_init_Accelerometer+0x310>)
    45a2:	781b      	ldrb	r3, [r3, #0]
    45a4:	f04f 002c 	mov.w	r0, #44	; 0x2c
    45a8:	4619      	mov	r1, r3
    45aa:	f001 f93f 	bl	582c <wAccReg>
	
	AccIRQConfig.Reg_0x2F.flat_hold_time = 0;
    45ae:	f640 2384 	movw	r3, #2692	; 0xa84
    45b2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    45b6:	7e9a      	ldrb	r2, [r3, #26]
    45b8:	f36f 1205 	bfc	r2, #4, #2
    45bc:	769a      	strb	r2, [r3, #26]
	wAccReg(0x2F, *((u8_t*)&AccIRQConfig.Reg_0x2F));
    45be:	4b85      	ldr	r3, [pc, #532]	; (47d4 <MEMS_BMC050_init_Accelerometer+0x314>)
    45c0:	781b      	ldrb	r3, [r3, #0]
    45c2:	f04f 002f 	mov.w	r0, #47	; 0x2f
    45c6:	4619      	mov	r1, r3
    45c8:	f001 f930 	bl	582c <wAccReg>
	
	AccIRQConfig.int_map_01 = 0xC0;
    45cc:	f640 2384 	movw	r3, #2692	; 0xa84
    45d0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    45d4:	f04f 02c0 	mov.w	r2, #192	; 0xc0
    45d8:	711a      	strb	r2, [r3, #4]
	wAccReg(0x19, AccIRQConfig.int_map_01);
    45da:	f640 2384 	movw	r3, #2692	; 0xa84
    45de:	f2c1 0300 	movt	r3, #4096	; 0x1000
    45e2:	791b      	ldrb	r3, [r3, #4]
    45e4:	f04f 0019 	mov.w	r0, #25
    45e8:	4619      	mov	r1, r3
    45ea:	f001 f91f 	bl	582c <wAccReg>
	AccIRQConfig.int_map_02 = 1;
    45ee:	f640 2384 	movw	r3, #2692	; 0xa84
    45f2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    45f6:	f04f 0201 	mov.w	r2, #1
    45fa:	715a      	strb	r2, [r3, #5]
	wAccReg(0x1A, AccIRQConfig.int_map_02);
    45fc:	f640 2384 	movw	r3, #2692	; 0xa84
    4600:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4604:	795b      	ldrb	r3, [r3, #5]
    4606:	f04f 001a 	mov.w	r0, #26
    460a:	4619      	mov	r1, r3
    460c:	f001 f90e 	bl	582c <wAccReg>

	if (cfg_data.Acc.flags & ACC_USE_EEPROM_FILT_COMPENSATION_VALUES){
    4610:	f640 436c 	movw	r3, #3180	; 0xc6c
    4614:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4618:	7a9b      	ldrb	r3, [r3, #10]
    461a:	f003 0302 	and.w	r3, r3, #2
    461e:	2b00      	cmp	r3, #0
    4620:	d03b      	beq.n	469a <MEMS_BMC050_init_Accelerometer+0x1da>
		BMC050_AccCompensate.AccelerationCompFilt_X = cfg_data.Acc.cmp_filt_x;
    4622:	f640 436c 	movw	r3, #3180	; 0xc6c
    4626:	f2c1 0300 	movt	r3, #4096	; 0x1000
    462a:	799a      	ldrb	r2, [r3, #6]
    462c:	f640 6374 	movw	r3, #3700	; 0xe74
    4630:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4634:	70da      	strb	r2, [r3, #3]
		BMC050_AccCompensate.AccelerationCompFilt_Y = cfg_data.Acc.cmp_filt_y;
    4636:	f640 436c 	movw	r3, #3180	; 0xc6c
    463a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    463e:	79da      	ldrb	r2, [r3, #7]
    4640:	f640 6374 	movw	r3, #3700	; 0xe74
    4644:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4648:	711a      	strb	r2, [r3, #4]
		BMC050_AccCompensate.AccelerationCompFilt_Z = cfg_data.Acc.cmp_filt_z;
    464a:	f640 436c 	movw	r3, #3180	; 0xc6c
    464e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4652:	7a1a      	ldrb	r2, [r3, #8]
    4654:	f640 6374 	movw	r3, #3700	; 0xe74
    4658:	f2c1 0300 	movt	r3, #4096	; 0x1000
    465c:	715a      	strb	r2, [r3, #5]

		wAccReg(0x38, BMC050_AccCompensate.AccelerationCompFilt_X);
    465e:	f640 6374 	movw	r3, #3700	; 0xe74
    4662:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4666:	78db      	ldrb	r3, [r3, #3]
    4668:	f04f 0038 	mov.w	r0, #56	; 0x38
    466c:	4619      	mov	r1, r3
    466e:	f001 f8dd 	bl	582c <wAccReg>
		wAccReg(0x39, BMC050_AccCompensate.AccelerationCompFilt_Y);
    4672:	f640 6374 	movw	r3, #3700	; 0xe74
    4676:	f2c1 0300 	movt	r3, #4096	; 0x1000
    467a:	791b      	ldrb	r3, [r3, #4]
    467c:	f04f 0039 	mov.w	r0, #57	; 0x39
    4680:	4619      	mov	r1, r3
    4682:	f001 f8d3 	bl	582c <wAccReg>
		wAccReg(0x3A, BMC050_AccCompensate.AccelerationCompFilt_Z);
    4686:	f640 6374 	movw	r3, #3700	; 0xe74
    468a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    468e:	795b      	ldrb	r3, [r3, #5]
    4690:	f04f 003a 	mov.w	r0, #58	; 0x3a
    4694:	4619      	mov	r1, r3
    4696:	f001 f8c9 	bl	582c <wAccReg>
	}
	if (cfg_data.Acc.flags & ACC_USE_EEPROM_RAW_COMPENSATION_VALUES){
    469a:	f640 436c 	movw	r3, #3180	; 0xc6c
    469e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    46a2:	7a9b      	ldrb	r3, [r3, #10]
    46a4:	f003 0301 	and.w	r3, r3, #1
    46a8:	2b00      	cmp	r3, #0
    46aa:	d03b      	beq.n	4724 <MEMS_BMC050_init_Accelerometer+0x264>
		BMC050_AccCompensate.AccelerationComp_X = cfg_data.Acc.cmp_raw_x;
    46ac:	f640 436c 	movw	r3, #3180	; 0xc6c
    46b0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    46b4:	78da      	ldrb	r2, [r3, #3]
    46b6:	f640 6374 	movw	r3, #3700	; 0xe74
    46ba:	f2c1 0300 	movt	r3, #4096	; 0x1000
    46be:	719a      	strb	r2, [r3, #6]
		BMC050_AccCompensate.AccelerationComp_Y = cfg_data.Acc.cmp_raw_y;
    46c0:	f640 436c 	movw	r3, #3180	; 0xc6c
    46c4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    46c8:	791a      	ldrb	r2, [r3, #4]
    46ca:	f640 6374 	movw	r3, #3700	; 0xe74
    46ce:	f2c1 0300 	movt	r3, #4096	; 0x1000
    46d2:	71da      	strb	r2, [r3, #7]
		BMC050_AccCompensate.AccelerationComp_Z = cfg_data.Acc.cmp_raw_z;
    46d4:	f640 436c 	movw	r3, #3180	; 0xc6c
    46d8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    46dc:	795a      	ldrb	r2, [r3, #5]
    46de:	f640 6374 	movw	r3, #3700	; 0xe74
    46e2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    46e6:	721a      	strb	r2, [r3, #8]

		wAccReg(0x3B, BMC050_AccCompensate.AccelerationComp_X);
    46e8:	f640 6374 	movw	r3, #3700	; 0xe74
    46ec:	f2c1 0300 	movt	r3, #4096	; 0x1000
    46f0:	799b      	ldrb	r3, [r3, #6]
    46f2:	f04f 003b 	mov.w	r0, #59	; 0x3b
    46f6:	4619      	mov	r1, r3
    46f8:	f001 f898 	bl	582c <wAccReg>
		wAccReg(0x3C, BMC050_AccCompensate.AccelerationComp_Y);
    46fc:	f640 6374 	movw	r3, #3700	; 0xe74
    4700:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4704:	79db      	ldrb	r3, [r3, #7]
    4706:	f04f 003c 	mov.w	r0, #60	; 0x3c
    470a:	4619      	mov	r1, r3
    470c:	f001 f88e 	bl	582c <wAccReg>
		wAccReg(0x3D, BMC050_AccCompensate.AccelerationComp_Z);
    4710:	f640 6374 	movw	r3, #3700	; 0xe74
    4714:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4718:	7a1b      	ldrb	r3, [r3, #8]
    471a:	f04f 003d 	mov.w	r0, #61	; 0x3d
    471e:	4619      	mov	r1, r3
    4720:	f001 f884 	bl	582c <wAccReg>
	}

	AccIRQConfig.Reg_0x20.int1_lvl = 1;
    4724:	f640 2384 	movw	r3, #2692	; 0xa84
    4728:	f2c1 0300 	movt	r3, #4096	; 0x1000
    472c:	7ada      	ldrb	r2, [r3, #11]
    472e:	f042 0201 	orr.w	r2, r2, #1
    4732:	72da      	strb	r2, [r3, #11]
	AccIRQConfig.Reg_0x20.int2_lvl = 1;
    4734:	f640 2384 	movw	r3, #2692	; 0xa84
    4738:	f2c1 0300 	movt	r3, #4096	; 0x1000
    473c:	7ada      	ldrb	r2, [r3, #11]
    473e:	f042 0204 	orr.w	r2, r2, #4
    4742:	72da      	strb	r2, [r3, #11]
	AccIRQConfig.Reg_0x21.latch_int = 0xC;
    4744:	f640 2384 	movw	r3, #2692	; 0xa84
    4748:	f2c1 0300 	movt	r3, #4096	; 0x1000
    474c:	7b1a      	ldrb	r2, [r3, #12]
    474e:	f04f 010c 	mov.w	r1, #12
    4752:	f361 0203 	bfi	r2, r1, #0, #4
    4756:	731a      	strb	r2, [r3, #12]
	AccIRQConfig.Reg_0x21.reset_int = 1;
    4758:	f640 2384 	movw	r3, #2692	; 0xa84
    475c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4760:	7b1a      	ldrb	r2, [r3, #12]
    4762:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    4766:	731a      	strb	r2, [r3, #12]
	wBuff[0] = 0x20;  // command: write register 20h
    4768:	f04f 0320 	mov.w	r3, #32
    476c:	753b      	strb	r3, [r7, #20]
	wBuff[1] = *((u8_t*)&AccIRQConfig.Reg_0x20);
    476e:	4b1a      	ldr	r3, [pc, #104]	; (47d8 <MEMS_BMC050_init_Accelerometer+0x318>)
    4770:	781b      	ldrb	r3, [r3, #0]
    4772:	757b      	strb	r3, [r7, #21]
	wBuff[2] = *((u8_t*)&AccIRQConfig.Reg_0x21);
    4774:	4b19      	ldr	r3, [pc, #100]	; (47dc <MEMS_BMC050_init_Accelerometer+0x31c>)
    4776:	781b      	ldrb	r3, [r3, #0]
    4778:	75bb      	strb	r3, [r7, #22]
	rwACC(wBuff, rBuff, 3);
    477a:	f107 0214 	add.w	r2, r7, #20
    477e:	463b      	mov	r3, r7
    4780:	4610      	mov	r0, r2
    4782:	4619      	mov	r1, r3
    4784:	f04f 0203 	mov.w	r2, #3
    4788:	f001 f86c 	bl	5864 <rwACC>

	/* @ ToDo check if necessary */
	Wait_Usec(2000);
    478c:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
    4790:	f7fe f938 	bl	2a04 <Wait_Usec>

	AccIRQConfig.Reg_0x16.orient_en = 1;
    4794:	f640 2384 	movw	r3, #2692	; 0xa84
    4798:	f2c1 0300 	movt	r3, #4096	; 0x1000
    479c:	785a      	ldrb	r2, [r3, #1]
    479e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    47a2:	705a      	strb	r2, [r3, #1]
	AccIRQConfig.Reg_0x16.flat_en = 1;
    47a4:	f640 2384 	movw	r3, #2692	; 0xa84
    47a8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    47ac:	785a      	ldrb	r2, [r3, #1]
    47ae:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    47b2:	705a      	strb	r2, [r3, #1]
	wAccReg(0x16, *((u8_t*)&AccIRQConfig.Reg_0x16));
    47b4:	4b0a      	ldr	r3, [pc, #40]	; (47e0 <MEMS_BMC050_init_Accelerometer+0x320>)
    47b6:	781b      	ldrb	r3, [r3, #0]
    47b8:	f04f 0016 	mov.w	r0, #22
    47bc:	4619      	mov	r1, r3
    47be:	f001 f835 	bl	582c <wAccReg>

	return HW_ERR_OK;
    47c2:	f04f 0300 	mov.w	r3, #0
}
    47c6:	4618      	mov	r0, r3
    47c8:	f107 0728 	add.w	r7, r7, #40	; 0x28
    47cc:	46bd      	mov	sp, r7
    47ce:	bd80      	pop	{r7, pc}
    47d0:	10000a9b 	.word	0x10000a9b
    47d4:	10000a9e 	.word	0x10000a9e
    47d8:	10000a8f 	.word	0x10000a8f
    47dc:	10000a90 	.word	0x10000a90
    47e0:	10000a85 	.word	0x10000a85

000047e4 <MEMS_BMC050_init_Magnetometer>:
//! @brief	initializes magnetometer part of BMC50/150 sensor with default
//!			settings. If not done yet SSP is also initialized
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
HWStatus_t MEMS_BMC050_init_Magnetometer(void){
    47e4:	b580      	push	{r7, lr}
    47e6:	b082      	sub	sp, #8
    47e8:	af00      	add	r7, sp, #0
	u32_t time = 0;
    47ea:	f04f 0300 	mov.w	r3, #0
    47ee:	607b      	str	r3, [r7, #4]

	if(!ssp_init){
    47f0:	f640 23bb 	movw	r3, #2747	; 0xabb
    47f4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    47f8:	781b      	ldrb	r3, [r3, #0]
    47fa:	2b00      	cmp	r3, #0
    47fc:	d107      	bne.n	480e <MEMS_BMC050_init_Magnetometer+0x2a>
		if(initSSP() != HW_ERR_OK)
    47fe:	f000 fbd3 	bl	4fa8 <initSSP>
    4802:	4603      	mov	r3, r0
    4804:	2b00      	cmp	r3, #0
    4806:	d002      	beq.n	480e <MEMS_BMC050_init_Magnetometer+0x2a>
			return HW_ERR_RESOURCE;
    4808:	f04f 0302 	mov.w	r3, #2
    480c:	e07e      	b.n	490c <MEMS_BMC050_init_Magnetometer+0x128>
	}

	if(!data_init)
    480e:	f640 23bc 	movw	r3, #2748	; 0xabc
    4812:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4816:	781b      	ldrb	r3, [r3, #0]
    4818:	2b00      	cmp	r3, #0
    481a:	d101      	bne.n	4820 <MEMS_BMC050_init_Magnetometer+0x3c>
		initData();
    481c:	f000 fba8 	bl	4f70 <initData>

	// wait at least 1 [ms] cause from to allow magnetometer to switch from OFF to suspend mode
	time = SYSTIME_NOW;
    4820:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    4824:	689b      	ldr	r3, [r3, #8]
    4826:	607b      	str	r3, [r7, #4]
	while(SYSTIME_DIFF (time, SYSTIME_NOW) < 2000);
    4828:	bf00      	nop
    482a:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    482e:	689a      	ldr	r2, [r3, #8]
    4830:	687b      	ldr	r3, [r7, #4]
    4832:	429a      	cmp	r2, r3
    4834:	d30c      	bcc.n	4850 <MEMS_BMC050_init_Magnetometer+0x6c>
    4836:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    483a:	689a      	ldr	r2, [r3, #8]
    483c:	687b      	ldr	r3, [r7, #4]
    483e:	1ad2      	subs	r2, r2, r3
    4840:	f240 73cf 	movw	r3, #1999	; 0x7cf
    4844:	429a      	cmp	r2, r3
    4846:	bf8c      	ite	hi
    4848:	2300      	movhi	r3, #0
    484a:	2301      	movls	r3, #1
    484c:	b2db      	uxtb	r3, r3
    484e:	e00d      	b.n	486c <MEMS_BMC050_init_Magnetometer+0x88>
    4850:	687b      	ldr	r3, [r7, #4]
    4852:	ea6f 0203 	mvn.w	r2, r3
    4856:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    485a:	689b      	ldr	r3, [r3, #8]
    485c:	18d2      	adds	r2, r2, r3
    485e:	f240 73cf 	movw	r3, #1999	; 0x7cf
    4862:	429a      	cmp	r2, r3
    4864:	bf8c      	ite	hi
    4866:	2300      	movhi	r3, #0
    4868:	2301      	movls	r3, #1
    486a:	b2db      	uxtb	r3, r3
    486c:	2b00      	cmp	r3, #0
    486e:	d1dc      	bne.n	482a <MEMS_BMC050_init_Magnetometer+0x46>

	// initialize the magnetometer
	wMagReg(0x4B, 0x83); 	//<! 4Bh: spi 4-wire + PowerControlBit, (SuspendMode=>SleepMode) + SoftResetBits
    4870:	f04f 004b 	mov.w	r0, #75	; 0x4b
    4874:	f04f 0183 	mov.w	r1, #131	; 0x83
    4878:	f001 f81a 	bl	58b0 <wMagReg>

	// wait at least 3[ms] to allow magnetometer to switch from suspend to sleep mode
	time = SYSTIME_NOW;
    487c:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    4880:	689b      	ldr	r3, [r3, #8]
    4882:	607b      	str	r3, [r7, #4]
	while(SYSTIME_DIFF (time, SYSTIME_NOW) < 3000);
    4884:	bf00      	nop
    4886:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    488a:	689a      	ldr	r2, [r3, #8]
    488c:	687b      	ldr	r3, [r7, #4]
    488e:	429a      	cmp	r2, r3
    4890:	d30c      	bcc.n	48ac <MEMS_BMC050_init_Magnetometer+0xc8>
    4892:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    4896:	689a      	ldr	r2, [r3, #8]
    4898:	687b      	ldr	r3, [r7, #4]
    489a:	1ad2      	subs	r2, r2, r3
    489c:	f640 33b7 	movw	r3, #2999	; 0xbb7
    48a0:	429a      	cmp	r2, r3
    48a2:	bf8c      	ite	hi
    48a4:	2300      	movhi	r3, #0
    48a6:	2301      	movls	r3, #1
    48a8:	b2db      	uxtb	r3, r3
    48aa:	e00d      	b.n	48c8 <MEMS_BMC050_init_Magnetometer+0xe4>
    48ac:	687b      	ldr	r3, [r7, #4]
    48ae:	ea6f 0203 	mvn.w	r2, r3
    48b2:	f04f 2340 	mov.w	r3, #1073758208	; 0x40004000
    48b6:	689b      	ldr	r3, [r3, #8]
    48b8:	18d2      	adds	r2, r2, r3
    48ba:	f640 33b7 	movw	r3, #2999	; 0xbb7
    48be:	429a      	cmp	r2, r3
    48c0:	bf8c      	ite	hi
    48c2:	2300      	movhi	r3, #0
    48c4:	2301      	movls	r3, #1
    48c6:	b2db      	uxtb	r3, r3
    48c8:	2b00      	cmp	r3, #0
    48ca:	d1dc      	bne.n	4886 <MEMS_BMC050_init_Magnetometer+0xa2>
	
	wMagReg(0x4C, 0x00); 	//<! 4Ch: OpMode = Normal (SleepMode=>ActiveMode)
    48cc:	f04f 004c 	mov.w	r0, #76	; 0x4c
    48d0:	f04f 0100 	mov.w	r1, #0
    48d4:	f000 ffec 	bl	58b0 <wMagReg>
	wMagReg(0x4D, 0x3F); 	//<! 4Dh: generate no Interrupts
    48d8:	f04f 004d 	mov.w	r0, #77	; 0x4d
    48dc:	f04f 013f 	mov.w	r1, #63	; 0x3f
    48e0:	f000 ffe6 	bl	58b0 <wMagReg>
	wMagReg(0x4E, 0x00); 	//<! 4Eh: each axis enable, line polarity dont care.
    48e4:	f04f 004e 	mov.w	r0, #78	; 0x4e
    48e8:	f04f 0100 	mov.w	r1, #0
    48ec:	f000 ffe0 	bl	58b0 <wMagReg>
	wMagReg(0x51, 0x07); 	//<! 51h: repetition count for X-Y value smoothing.
    48f0:	f04f 0051 	mov.w	r0, #81	; 0x51
    48f4:	f04f 0107 	mov.w	r1, #7
    48f8:	f000 ffda 	bl	58b0 <wMagReg>
	wMagReg(0x52, 0x1B); 	//<! 52h: repetition count for Z value smoothing.
    48fc:	f04f 0052 	mov.w	r0, #82	; 0x52
    4900:	f04f 011b 	mov.w	r1, #27
    4904:	f000 ffd4 	bl	58b0 <wMagReg>
	
	return HW_ERR_OK;
    4908:	f04f 0300 	mov.w	r3, #0
}
    490c:	4618      	mov	r0, r3
    490e:	f107 0708 	add.w	r7, r7, #8
    4912:	46bd      	mov	sp, r7
    4914:	bd80      	pop	{r7, pc}
    4916:	bf00      	nop

00004918 <MEMS_BMC050_readAccCompValues>:



void MEMS_BMC050_readAccCompValues(void) {
    4918:	b480      	push	{r7}
    491a:	af00      	add	r7, sp, #0
	GoToState = readAccelerometerCompenstaionValues;
    491c:	f640 2382 	movw	r3, #2690	; 0xa82
    4920:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4924:	f04f 0208 	mov.w	r2, #8
    4928:	701a      	strb	r2, [r3, #0]
}
    492a:	46bd      	mov	sp, r7
    492c:	bc80      	pop	{r7}
    492e:	4770      	bx	lr

00004930 <MEMS_BMC050_StartFastAccCompensation>:

void MEMS_BMC050_StartFastAccCompensation(void) {
    4930:	b480      	push	{r7}
    4932:	af00      	add	r7, sp, #0
	GoToState = startFastCompensation;
    4934:	f640 2382 	movw	r3, #2690	; 0xa82
    4938:	f2c1 0300 	movt	r3, #4096	; 0x1000
    493c:	f04f 0204 	mov.w	r2, #4
    4940:	701a      	strb	r2, [r3, #0]
}
    4942:	46bd      	mov	sp, r7
    4944:	bc80      	pop	{r7}
    4946:	4770      	bx	lr

00004948 <MEMS_BMC050_ResetAccCompensation>:

void MEMS_BMC050_ResetAccCompensation(void) {
    4948:	b480      	push	{r7}
    494a:	af00      	add	r7, sp, #0
	GoToState = resetAccCompensation;
    494c:	f640 2382 	movw	r3, #2690	; 0xa82
    4950:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4954:	f04f 020a 	mov.w	r2, #10
    4958:	701a      	strb	r2, [r3, #0]
}
    495a:	46bd      	mov	sp, r7
    495c:	bc80      	pop	{r7}
    495e:	4770      	bx	lr

00004960 <MEMS_BMC050_SetVertialAxis>:

HWStatus_t MEMS_BMC050_SetVertialAxis(u8_t axis) {
    4960:	b480      	push	{r7}
    4962:	b083      	sub	sp, #12
    4964:	af00      	add	r7, sp, #0
    4966:	4603      	mov	r3, r0
    4968:	71fb      	strb	r3, [r7, #7]
	if (axis != X_AXIS && axis != Y_AXIS && axis != Z_AXIS)
    496a:	79fb      	ldrb	r3, [r7, #7]
    496c:	2b01      	cmp	r3, #1
    496e:	d008      	beq.n	4982 <MEMS_BMC050_SetVertialAxis+0x22>
    4970:	79fb      	ldrb	r3, [r7, #7]
    4972:	2b02      	cmp	r3, #2
    4974:	d005      	beq.n	4982 <MEMS_BMC050_SetVertialAxis+0x22>
    4976:	79fb      	ldrb	r3, [r7, #7]
    4978:	2b03      	cmp	r3, #3
    497a:	d002      	beq.n	4982 <MEMS_BMC050_SetVertialAxis+0x22>
		return HW_ERR_ILLPARAMVAL;
    497c:	f04f 0301 	mov.w	r3, #1
    4980:	e007      	b.n	4992 <MEMS_BMC050_SetVertialAxis+0x32>
	vertical_axis = axis;
    4982:	f240 0300 	movw	r3, #0
    4986:	f2c1 0300 	movt	r3, #4096	; 0x1000
    498a:	79fa      	ldrb	r2, [r7, #7]
    498c:	701a      	strb	r2, [r3, #0]
	return HW_ERR_OK;
    498e:	f04f 0300 	mov.w	r3, #0
}
    4992:	4618      	mov	r0, r3
    4994:	f107 070c 	add.w	r7, r7, #12
    4998:	46bd      	mov	sp, r7
    499a:	bc80      	pop	{r7}
    499c:	4770      	bx	lr
    499e:	bf00      	nop

000049a0 <MEMS_BMC050_GetVertialAxis>:

HWStatus_t MEMS_BMC050_GetVertialAxis(u8_t *p_axis) {
    49a0:	b480      	push	{r7}
    49a2:	b083      	sub	sp, #12
    49a4:	af00      	add	r7, sp, #0
    49a6:	6078      	str	r0, [r7, #4]
	if (!p_axis)
    49a8:	687b      	ldr	r3, [r7, #4]
    49aa:	2b00      	cmp	r3, #0
    49ac:	d102      	bne.n	49b4 <MEMS_BMC050_GetVertialAxis+0x14>
		return HW_ERR_ILLPARAMVAL;
    49ae:	f04f 0301 	mov.w	r3, #1
    49b2:	e008      	b.n	49c6 <MEMS_BMC050_GetVertialAxis+0x26>
	*p_axis = vertical_axis;
    49b4:	f240 0300 	movw	r3, #0
    49b8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    49bc:	781a      	ldrb	r2, [r3, #0]
    49be:	687b      	ldr	r3, [r7, #4]
    49c0:	701a      	strb	r2, [r3, #0]
	return HW_ERR_OK;
    49c2:	f04f 0300 	mov.w	r3, #0
}
    49c6:	4618      	mov	r0, r3
    49c8:	f107 070c 	add.w	r7, r7, #12
    49cc:	46bd      	mov	sp, r7
    49ce:	bc80      	pop	{r7}
    49d0:	4770      	bx	lr
    49d2:	bf00      	nop

000049d4 <AccCalRdy>:
//------------------------------------------------------------------------------
//!	int AccCalRdy(void)
//------------------------------------------------------------------------------
//! @brief  checks cal_rdy bit in register 0x37
//------------------------------------------------------------------------------
int AccCalRdy(void) {
    49d4:	b580      	push	{r7, lr}
    49d6:	b086      	sub	sp, #24
    49d8:	af00      	add	r7, sp, #0
	u8_t wBuff[bufsize];

	wBuff[0] = ((1 << 7) | 0x36);  // command: read from register 36h onward
    49da:	f04f 03b6 	mov.w	r3, #182	; 0xb6
    49de:	713b      	strb	r3, [r7, #4]
	wBuff[1] = 0x00; // + 8 clocks for compensation configuration part I
    49e0:	f04f 0300 	mov.w	r3, #0
    49e4:	717b      	strb	r3, [r7, #5]
	rwACC(wBuff, (u8_t*)&BMC050_AccCompensate, 2);
    49e6:	f107 0304 	add.w	r3, r7, #4
    49ea:	4618      	mov	r0, r3
    49ec:	f640 6174 	movw	r1, #3700	; 0xe74
    49f0:	f2c1 0100 	movt	r1, #4096	; 0x1000
    49f4:	f04f 0202 	mov.w	r2, #2
    49f8:	f000 ff34 	bl	5864 <rwACC>

	return !(BMC050_AccCompensate.Reg_0x36.cal_rdy);
    49fc:	f640 6374 	movw	r3, #3700	; 0xe74
    4a00:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4a04:	785b      	ldrb	r3, [r3, #1]
    4a06:	f003 0310 	and.w	r3, r3, #16
    4a0a:	b2db      	uxtb	r3, r3
    4a0c:	2b00      	cmp	r3, #0
    4a0e:	bf14      	ite	ne
    4a10:	2300      	movne	r3, #0
    4a12:	2301      	moveq	r3, #1
    4a14:	b2db      	uxtb	r3, r3
}
    4a16:	4618      	mov	r0, r3
    4a18:	f107 0718 	add.w	r7, r7, #24
    4a1c:	46bd      	mov	sp, r7
    4a1e:	bd80      	pop	{r7, pc}

00004a20 <MEMS_BMC050_SetAccCalTargets>:
//! @param p_y	pointer to y-axis calibration target
//! @param p_z	pointer to z-axis calibration target
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
HWStatus_t MEMS_BMC050_SetAccCalTargets(u8_t *p_x, u8_t *p_y, u8_t *p_z) {
    4a20:	b480      	push	{r7}
    4a22:	b085      	sub	sp, #20
    4a24:	af00      	add	r7, sp, #0
    4a26:	60f8      	str	r0, [r7, #12]
    4a28:	60b9      	str	r1, [r7, #8]
    4a2a:	607a      	str	r2, [r7, #4]

	if (p_x && *p_x > 0x3)
    4a2c:	68fb      	ldr	r3, [r7, #12]
    4a2e:	2b00      	cmp	r3, #0
    4a30:	d006      	beq.n	4a40 <MEMS_BMC050_SetAccCalTargets+0x20>
    4a32:	68fb      	ldr	r3, [r7, #12]
    4a34:	781b      	ldrb	r3, [r3, #0]
    4a36:	2b03      	cmp	r3, #3
    4a38:	d902      	bls.n	4a40 <MEMS_BMC050_SetAccCalTargets+0x20>
		return HW_ERR_ILLPARAMVAL;
    4a3a:	f04f 0301 	mov.w	r3, #1
    4a3e:	e045      	b.n	4acc <MEMS_BMC050_SetAccCalTargets+0xac>
	if (p_y && *p_y > 0x3)
    4a40:	68bb      	ldr	r3, [r7, #8]
    4a42:	2b00      	cmp	r3, #0
    4a44:	d006      	beq.n	4a54 <MEMS_BMC050_SetAccCalTargets+0x34>
    4a46:	68bb      	ldr	r3, [r7, #8]
    4a48:	781b      	ldrb	r3, [r3, #0]
    4a4a:	2b03      	cmp	r3, #3
    4a4c:	d902      	bls.n	4a54 <MEMS_BMC050_SetAccCalTargets+0x34>
		return HW_ERR_ILLPARAMVAL;
    4a4e:	f04f 0301 	mov.w	r3, #1
    4a52:	e03b      	b.n	4acc <MEMS_BMC050_SetAccCalTargets+0xac>
	if (p_z && *p_z > 0x3)
    4a54:	687b      	ldr	r3, [r7, #4]
    4a56:	2b00      	cmp	r3, #0
    4a58:	d006      	beq.n	4a68 <MEMS_BMC050_SetAccCalTargets+0x48>
    4a5a:	687b      	ldr	r3, [r7, #4]
    4a5c:	781b      	ldrb	r3, [r3, #0]
    4a5e:	2b03      	cmp	r3, #3
    4a60:	d902      	bls.n	4a68 <MEMS_BMC050_SetAccCalTargets+0x48>
		return HW_ERR_ILLPARAMVAL;
    4a62:	f04f 0301 	mov.w	r3, #1
    4a66:	e031      	b.n	4acc <MEMS_BMC050_SetAccCalTargets+0xac>

	if (p_x)
    4a68:	68fb      	ldr	r3, [r7, #12]
    4a6a:	2b00      	cmp	r3, #0
    4a6c:	d00c      	beq.n	4a88 <MEMS_BMC050_SetAccCalTargets+0x68>
		BMC050_AccCompensate.Reg_0x37.OffsetTarget_X = *p_x;
    4a6e:	68fb      	ldr	r3, [r7, #12]
    4a70:	781b      	ldrb	r3, [r3, #0]
    4a72:	f003 0303 	and.w	r3, r3, #3
    4a76:	b2d9      	uxtb	r1, r3
    4a78:	f640 6374 	movw	r3, #3700	; 0xe74
    4a7c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4a80:	789a      	ldrb	r2, [r3, #2]
    4a82:	f361 0242 	bfi	r2, r1, #1, #2
    4a86:	709a      	strb	r2, [r3, #2]
	if (p_y)
    4a88:	68bb      	ldr	r3, [r7, #8]
    4a8a:	2b00      	cmp	r3, #0
    4a8c:	d00c      	beq.n	4aa8 <MEMS_BMC050_SetAccCalTargets+0x88>
		BMC050_AccCompensate.Reg_0x37.OffsetTarget_Y = *p_y;
    4a8e:	68bb      	ldr	r3, [r7, #8]
    4a90:	781b      	ldrb	r3, [r3, #0]
    4a92:	f003 0303 	and.w	r3, r3, #3
    4a96:	b2d9      	uxtb	r1, r3
    4a98:	f640 6374 	movw	r3, #3700	; 0xe74
    4a9c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4aa0:	789a      	ldrb	r2, [r3, #2]
    4aa2:	f361 02c4 	bfi	r2, r1, #3, #2
    4aa6:	709a      	strb	r2, [r3, #2]
	if (p_z)
    4aa8:	687b      	ldr	r3, [r7, #4]
    4aaa:	2b00      	cmp	r3, #0
    4aac:	d00c      	beq.n	4ac8 <MEMS_BMC050_SetAccCalTargets+0xa8>
		BMC050_AccCompensate.Reg_0x37.OffsetTarget_Z = *p_z;
    4aae:	687b      	ldr	r3, [r7, #4]
    4ab0:	781b      	ldrb	r3, [r3, #0]
    4ab2:	f003 0303 	and.w	r3, r3, #3
    4ab6:	b2d9      	uxtb	r1, r3
    4ab8:	f640 6374 	movw	r3, #3700	; 0xe74
    4abc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4ac0:	789a      	ldrb	r2, [r3, #2]
    4ac2:	f361 1246 	bfi	r2, r1, #5, #2
    4ac6:	709a      	strb	r2, [r3, #2]

	return HW_ERR_OK;
    4ac8:	f04f 0300 	mov.w	r3, #0
}
    4acc:	4618      	mov	r0, r3
    4ace:	f107 0714 	add.w	r7, r7, #20
    4ad2:	46bd      	mov	sp, r7
    4ad4:	bc80      	pop	{r7}
    4ad6:	4770      	bx	lr

00004ad8 <MEMS_BMC050_GetAccCalTargets>:
//! @param p_y	pointer to buffer for y-axis calibration target
//! @param p_z	pointer to buffer for z-axis calibration target
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
HWStatus_t MEMS_BMC050_GetAccCalTargets(u8_t *p_x, u8_t *p_y, u8_t *p_z) {
    4ad8:	b480      	push	{r7}
    4ada:	b085      	sub	sp, #20
    4adc:	af00      	add	r7, sp, #0
    4ade:	60f8      	str	r0, [r7, #12]
    4ae0:	60b9      	str	r1, [r7, #8]
    4ae2:	607a      	str	r2, [r7, #4]

	if (p_x)
    4ae4:	68fb      	ldr	r3, [r7, #12]
    4ae6:	2b00      	cmp	r3, #0
    4ae8:	d00a      	beq.n	4b00 <MEMS_BMC050_GetAccCalTargets+0x28>
		*p_x = BMC050_AccCompensate.Reg_0x37.OffsetTarget_X;
    4aea:	f640 6374 	movw	r3, #3700	; 0xe74
    4aee:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4af2:	789b      	ldrb	r3, [r3, #2]
    4af4:	f3c3 0341 	ubfx	r3, r3, #1, #2
    4af8:	b2db      	uxtb	r3, r3
    4afa:	461a      	mov	r2, r3
    4afc:	68fb      	ldr	r3, [r7, #12]
    4afe:	701a      	strb	r2, [r3, #0]
	if (p_y)
    4b00:	68bb      	ldr	r3, [r7, #8]
    4b02:	2b00      	cmp	r3, #0
    4b04:	d00a      	beq.n	4b1c <MEMS_BMC050_GetAccCalTargets+0x44>
		*p_y = BMC050_AccCompensate.Reg_0x37.OffsetTarget_Y;
    4b06:	f640 6374 	movw	r3, #3700	; 0xe74
    4b0a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4b0e:	789b      	ldrb	r3, [r3, #2]
    4b10:	f3c3 03c1 	ubfx	r3, r3, #3, #2
    4b14:	b2db      	uxtb	r3, r3
    4b16:	461a      	mov	r2, r3
    4b18:	68bb      	ldr	r3, [r7, #8]
    4b1a:	701a      	strb	r2, [r3, #0]
	if (p_z)
    4b1c:	687b      	ldr	r3, [r7, #4]
    4b1e:	2b00      	cmp	r3, #0
    4b20:	d00a      	beq.n	4b38 <MEMS_BMC050_GetAccCalTargets+0x60>
		*p_z = BMC050_AccCompensate.Reg_0x37.OffsetTarget_Z;
    4b22:	f640 6374 	movw	r3, #3700	; 0xe74
    4b26:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4b2a:	789b      	ldrb	r3, [r3, #2]
    4b2c:	f3c3 1341 	ubfx	r3, r3, #5, #2
    4b30:	b2db      	uxtb	r3, r3
    4b32:	461a      	mov	r2, r3
    4b34:	687b      	ldr	r3, [r7, #4]
    4b36:	701a      	strb	r2, [r3, #0]

	return HW_ERR_OK;
    4b38:	f04f 0300 	mov.w	r3, #0
}
    4b3c:	4618      	mov	r0, r3
    4b3e:	f107 0714 	add.w	r7, r7, #20
    4b42:	46bd      	mov	sp, r7
    4b44:	bc80      	pop	{r7}
    4b46:	4770      	bx	lr

00004b48 <MEMS_BMC050_GetAccCalRawValues>:
//! @param p_y	pointer to buffer for y-axis calibration value
//! @param p_z	pointer to buffer for z-axis calibration value
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
HWStatus_t MEMS_BMC050_GetAccCalRawValues(u8_t *p_x, u8_t *p_y, u8_t *p_z) {
    4b48:	b580      	push	{r7, lr}
    4b4a:	b084      	sub	sp, #16
    4b4c:	af00      	add	r7, sp, #0
    4b4e:	60f8      	str	r0, [r7, #12]
    4b50:	60b9      	str	r1, [r7, #8]
    4b52:	607a      	str	r2, [r7, #4]

	readAccCompenstaionValues();
    4b54:	f000 fcf0 	bl	5538 <readAccCompenstaionValues>

	if (p_x)
    4b58:	68fb      	ldr	r3, [r7, #12]
    4b5a:	2b00      	cmp	r3, #0
    4b5c:	d006      	beq.n	4b6c <MEMS_BMC050_GetAccCalRawValues+0x24>
		*p_x = BMC050_AccCompensate.AccelerationComp_X;
    4b5e:	f640 6374 	movw	r3, #3700	; 0xe74
    4b62:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4b66:	799a      	ldrb	r2, [r3, #6]
    4b68:	68fb      	ldr	r3, [r7, #12]
    4b6a:	701a      	strb	r2, [r3, #0]
	if (p_y)
    4b6c:	68bb      	ldr	r3, [r7, #8]
    4b6e:	2b00      	cmp	r3, #0
    4b70:	d006      	beq.n	4b80 <MEMS_BMC050_GetAccCalRawValues+0x38>
		*p_y = BMC050_AccCompensate.AccelerationComp_Y;
    4b72:	f640 6374 	movw	r3, #3700	; 0xe74
    4b76:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4b7a:	79da      	ldrb	r2, [r3, #7]
    4b7c:	68bb      	ldr	r3, [r7, #8]
    4b7e:	701a      	strb	r2, [r3, #0]
	if (p_z)
    4b80:	687b      	ldr	r3, [r7, #4]
    4b82:	2b00      	cmp	r3, #0
    4b84:	d006      	beq.n	4b94 <MEMS_BMC050_GetAccCalRawValues+0x4c>
		*p_z = BMC050_AccCompensate.AccelerationComp_Z;
    4b86:	f640 6374 	movw	r3, #3700	; 0xe74
    4b8a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4b8e:	7a1a      	ldrb	r2, [r3, #8]
    4b90:	687b      	ldr	r3, [r7, #4]
    4b92:	701a      	strb	r2, [r3, #0]

	return HW_ERR_OK;
    4b94:	f04f 0300 	mov.w	r3, #0
}
    4b98:	4618      	mov	r0, r3
    4b9a:	f107 0710 	add.w	r7, r7, #16
    4b9e:	46bd      	mov	sp, r7
    4ba0:	bd80      	pop	{r7, pc}
    4ba2:	bf00      	nop

00004ba4 <MEMS_BMC050_GetAccCalFiltValues>:
//! @param p_y	pointer to buffer for y-axis calibration value
//! @param p_z	pointer to buffer for z-axis calibration value
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
HWStatus_t MEMS_BMC050_GetAccCalFiltValues(u8_t *p_x, u8_t *p_y, u8_t *p_z) {
    4ba4:	b580      	push	{r7, lr}
    4ba6:	b084      	sub	sp, #16
    4ba8:	af00      	add	r7, sp, #0
    4baa:	60f8      	str	r0, [r7, #12]
    4bac:	60b9      	str	r1, [r7, #8]
    4bae:	607a      	str	r2, [r7, #4]

	readAccCompenstaionValues();
    4bb0:	f000 fcc2 	bl	5538 <readAccCompenstaionValues>

	if (p_x)
    4bb4:	68fb      	ldr	r3, [r7, #12]
    4bb6:	2b00      	cmp	r3, #0
    4bb8:	d006      	beq.n	4bc8 <MEMS_BMC050_GetAccCalFiltValues+0x24>
		*p_x = BMC050_AccCompensate.AccelerationCompFilt_X;
    4bba:	f640 6374 	movw	r3, #3700	; 0xe74
    4bbe:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4bc2:	78da      	ldrb	r2, [r3, #3]
    4bc4:	68fb      	ldr	r3, [r7, #12]
    4bc6:	701a      	strb	r2, [r3, #0]
	if (p_y)
    4bc8:	68bb      	ldr	r3, [r7, #8]
    4bca:	2b00      	cmp	r3, #0
    4bcc:	d006      	beq.n	4bdc <MEMS_BMC050_GetAccCalFiltValues+0x38>
		*p_y = BMC050_AccCompensate.AccelerationCompFilt_Y;
    4bce:	f640 6374 	movw	r3, #3700	; 0xe74
    4bd2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4bd6:	791a      	ldrb	r2, [r3, #4]
    4bd8:	68bb      	ldr	r3, [r7, #8]
    4bda:	701a      	strb	r2, [r3, #0]
	if (p_z)
    4bdc:	687b      	ldr	r3, [r7, #4]
    4bde:	2b00      	cmp	r3, #0
    4be0:	d006      	beq.n	4bf0 <MEMS_BMC050_GetAccCalFiltValues+0x4c>
		*p_z = BMC050_AccCompensate.AccelerationCompFilt_Z;
    4be2:	f640 6374 	movw	r3, #3700	; 0xe74
    4be6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4bea:	795a      	ldrb	r2, [r3, #5]
    4bec:	687b      	ldr	r3, [r7, #4]
    4bee:	701a      	strb	r2, [r3, #0]

	return HW_ERR_OK;
    4bf0:	f04f 0300 	mov.w	r3, #0
}
    4bf4:	4618      	mov	r0, r3
    4bf6:	f107 0710 	add.w	r7, r7, #16
    4bfa:	46bd      	mov	sp, r7
    4bfc:	bd80      	pop	{r7, pc}
    4bfe:	bf00      	nop

00004c00 <MEMS_BMC050_GetAccRange>:
//------------------------------------------------------------------------------
//! HWStatus_t MEMS_BMC050_GetAccRange(u8_t *p_val)
//------------------------------------------------------------------------------
//! @brief  get range of acceleration measurement
//------------------------------------------------------------------------------
HWStatus_t MEMS_BMC050_GetAccRange(u8_t *p_val) {
    4c00:	b580      	push	{r7, lr}
    4c02:	b082      	sub	sp, #8
    4c04:	af00      	add	r7, sp, #0
    4c06:	6078      	str	r0, [r7, #4]
	if(!p_val)
    4c08:	687b      	ldr	r3, [r7, #4]
    4c0a:	2b00      	cmp	r3, #0
    4c0c:	d102      	bne.n	4c14 <MEMS_BMC050_GetAccRange+0x14>
		return HW_ERR_ILLPARAMVAL;
    4c0e:	f04f 0301 	mov.w	r3, #1
    4c12:	e029      	b.n	4c68 <MEMS_BMC050_GetAccRange+0x68>
	
	if(ssp_init) 	// only try to read value if spi is already running
    4c14:	f640 23bb 	movw	r3, #2747	; 0xabb
    4c18:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4c1c:	781b      	ldrb	r3, [r3, #0]
    4c1e:	2b00      	cmp	r3, #0
    4c20:	d001      	beq.n	4c26 <MEMS_BMC050_GetAccRange+0x26>
		readAccRange();
    4c22:	f000 fb6b 	bl	52fc <readAccRange>
	
	switch(AccSensitivity){
    4c26:	f240 0301 	movw	r3, #1
    4c2a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4c2e:	781b      	ldrb	r3, [r3, #0]
    4c30:	2b04      	cmp	r3, #4
    4c32:	d00d      	beq.n	4c50 <MEMS_BMC050_GetAccRange+0x50>
    4c34:	2b08      	cmp	r3, #8
    4c36:	d010      	beq.n	4c5a <MEMS_BMC050_GetAccRange+0x5a>
    4c38:	2b02      	cmp	r3, #2
    4c3a:	d004      	beq.n	4c46 <MEMS_BMC050_GetAccRange+0x46>
	default:
	case 1:
		*p_val= 1;	
    4c3c:	687b      	ldr	r3, [r7, #4]
    4c3e:	f04f 0201 	mov.w	r2, #1
    4c42:	701a      	strb	r2, [r3, #0]
		break;
    4c44:	e00e      	b.n	4c64 <MEMS_BMC050_GetAccRange+0x64>
	case 2:
		*p_val= 2;	
    4c46:	687b      	ldr	r3, [r7, #4]
    4c48:	f04f 0202 	mov.w	r2, #2
    4c4c:	701a      	strb	r2, [r3, #0]
		break;
    4c4e:	e009      	b.n	4c64 <MEMS_BMC050_GetAccRange+0x64>
	case 4:
		*p_val= 3;	
    4c50:	687b      	ldr	r3, [r7, #4]
    4c52:	f04f 0203 	mov.w	r2, #3
    4c56:	701a      	strb	r2, [r3, #0]
		break;
    4c58:	e004      	b.n	4c64 <MEMS_BMC050_GetAccRange+0x64>
	case 8:
		*p_val= 4;
    4c5a:	687b      	ldr	r3, [r7, #4]
    4c5c:	f04f 0204 	mov.w	r2, #4
    4c60:	701a      	strb	r2, [r3, #0]
		break;	
    4c62:	bf00      	nop
	}
	
	
	return HW_ERR_OK;
    4c64:	f04f 0300 	mov.w	r3, #0
}
    4c68:	4618      	mov	r0, r3
    4c6a:	f107 0708 	add.w	r7, r7, #8
    4c6e:	46bd      	mov	sp, r7
    4c70:	bd80      	pop	{r7, pc}
    4c72:	bf00      	nop

00004c74 <MEMS_BMC050_SetAccRange>:
//------------------------------------------------------------------------------
//! HWStatus_t MEMS_BMC050_SetAccRange(u8_t val)
//------------------------------------------------------------------------------
//! @brief  set range of acceleration measurement
//------------------------------------------------------------------------------
HWStatus_t MEMS_BMC050_SetAccRange(u8_t val) {
    4c74:	b580      	push	{r7, lr}
    4c76:	b082      	sub	sp, #8
    4c78:	af00      	add	r7, sp, #0
    4c7a:	4603      	mov	r3, r0
    4c7c:	71fb      	strb	r3, [r7, #7]
	
	if(val > 4)
    4c7e:	79fb      	ldrb	r3, [r7, #7]
    4c80:	2b04      	cmp	r3, #4
    4c82:	d902      	bls.n	4c8a <MEMS_BMC050_SetAccRange+0x16>
		return HW_ERR_ILLPARAMVAL;
    4c84:	f04f 0301 	mov.w	r3, #1
    4c88:	e031      	b.n	4cee <MEMS_BMC050_SetAccRange+0x7a>
	switch(val){
    4c8a:	79fb      	ldrb	r3, [r7, #7]
    4c8c:	2b03      	cmp	r3, #3
    4c8e:	d013      	beq.n	4cb8 <MEMS_BMC050_SetAccRange+0x44>
    4c90:	2b04      	cmp	r3, #4
    4c92:	d019      	beq.n	4cc8 <MEMS_BMC050_SetAccRange+0x54>
    4c94:	2b02      	cmp	r3, #2
    4c96:	d007      	beq.n	4ca8 <MEMS_BMC050_SetAccRange+0x34>
	default:
	case 1:
		AccSensitivity = 1;
    4c98:	f240 0301 	movw	r3, #1
    4c9c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4ca0:	f04f 0201 	mov.w	r2, #1
    4ca4:	701a      	strb	r2, [r3, #0]
		break;
    4ca6:	e017      	b.n	4cd8 <MEMS_BMC050_SetAccRange+0x64>
	case 2:
		AccSensitivity = 2;
    4ca8:	f240 0301 	movw	r3, #1
    4cac:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4cb0:	f04f 0202 	mov.w	r2, #2
    4cb4:	701a      	strb	r2, [r3, #0]
		break;
    4cb6:	e00f      	b.n	4cd8 <MEMS_BMC050_SetAccRange+0x64>
	case 3:
		AccSensitivity = 4;
    4cb8:	f240 0301 	movw	r3, #1
    4cbc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4cc0:	f04f 0204 	mov.w	r2, #4
    4cc4:	701a      	strb	r2, [r3, #0]
		break;
    4cc6:	e007      	b.n	4cd8 <MEMS_BMC050_SetAccRange+0x64>
	case 4:
		AccSensitivity = 8;
    4cc8:	f240 0301 	movw	r3, #1
    4ccc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4cd0:	f04f 0208 	mov.w	r2, #8
    4cd4:	701a      	strb	r2, [r3, #0]
		break;
    4cd6:	bf00      	nop
	}
	
	if(ssp_init) 	// only try to write value if spi is already running
    4cd8:	f640 23bb 	movw	r3, #2747	; 0xabb
    4cdc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4ce0:	781b      	ldrb	r3, [r3, #0]
    4ce2:	2b00      	cmp	r3, #0
    4ce4:	d001      	beq.n	4cea <MEMS_BMC050_SetAccRange+0x76>
		setAccRange();
    4ce6:	f000 fb69 	bl	53bc <setAccRange>
	
	return HW_ERR_OK;
    4cea:	f04f 0300 	mov.w	r3, #0
}
    4cee:	4618      	mov	r0, r3
    4cf0:	f107 0708 	add.w	r7, r7, #8
    4cf4:	46bd      	mov	sp, r7
    4cf6:	bd80      	pop	{r7, pc}

00004cf8 <MEMS_BMC050_task>:

//------------------------------------------------------------------------------
//! void MEMS_BMC050_task(void)
//------------------------------------------------------------------------------
void MEMS_BMC050_task(void)
{
    4cf8:	b580      	push	{r7, lr}
    4cfa:	b082      	sub	sp, #8
    4cfc:	af00      	add	r7, sp, #0
	int res = 0;
    4cfe:	f04f 0300 	mov.w	r3, #0
    4d02:	607b      	str	r3, [r7, #4]

	if (checkAccIRQ())
    4d04:	f000 fc5c 	bl	55c0 <checkAccIRQ>
    4d08:	4603      	mov	r3, r0
    4d0a:	2b00      	cmp	r3, #0
    4d0c:	d001      	beq.n	4d12 <MEMS_BMC050_task+0x1a>
		handleAccIRQ();
    4d0e:	f000 fc7b 	bl	5608 <handleAccIRQ>
	if (checkMagIRQ())
    4d12:	f000 fc67 	bl	55e4 <checkMagIRQ>
    4d16:	4603      	mov	r3, r0
    4d18:	2b00      	cmp	r3, #0
    4d1a:	d001      	beq.n	4d20 <MEMS_BMC050_task+0x28>
		handleMagIRQ();
    4d1c:	f000 fd80 	bl	5820 <handleMagIRQ>

	if (BMC050_Readings.data_valid == TRUE)
    4d20:	f640 6348 	movw	r3, #3656	; 0xe48
    4d24:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4d28:	7c5b      	ldrb	r3, [r3, #17]
    4d2a:	2b01      	cmp	r3, #1
    4d2c:	f000 8109 	beq.w	4f42 <MEMS_BMC050_task+0x24a>
		return;

	switch (BMC050State) {
    4d30:	f640 2381 	movw	r3, #2689	; 0xa81
    4d34:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4d38:	781b      	ldrb	r3, [r3, #0]
    4d3a:	2b0a      	cmp	r3, #10
    4d3c:	f200 8103 	bhi.w	4f46 <MEMS_BMC050_task+0x24e>
    4d40:	a201      	add	r2, pc, #4	; (adr r2, 4d48 <MEMS_BMC050_task+0x50>)
    4d42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    4d46:	bf00      	nop
    4d48:	00004d75 	.word	0x00004d75
    4d4c:	00004d9b 	.word	0x00004d9b
    4d50:	00004dc1 	.word	0x00004dc1
    4d54:	00004f47 	.word	0x00004f47
    4d58:	00004e45 	.word	0x00004e45
    4d5c:	00004e6d 	.word	0x00004e6d
    4d60:	00004e95 	.word	0x00004e95
    4d64:	00004ebd 	.word	0x00004ebd
    4d68:	00004ee5 	.word	0x00004ee5
    4d6c:	00004f47 	.word	0x00004f47
    4d70:	00004f1b 	.word	0x00004f1b
	case readAccelerometer:
		res = readCurrAccelerationValues(&AccDataRaw);
    4d74:	f640 20a4 	movw	r0, #2724	; 0xaa4
    4d78:	f2c1 0000 	movt	r0, #4096	; 0x1000
    4d7c:	f000 fa5a 	bl	5234 <readCurrAccelerationValues>
    4d80:	6078      	str	r0, [r7, #4]
		if (res == 0)
    4d82:	687b      	ldr	r3, [r7, #4]
    4d84:	2b00      	cmp	r3, #0
    4d86:	f040 80e0 	bne.w	4f4a <MEMS_BMC050_task+0x252>
			BMC050State = readMagnetometer;
    4d8a:	f640 2381 	movw	r3, #2689	; 0xa81
    4d8e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4d92:	f04f 0201 	mov.w	r2, #1
    4d96:	701a      	strb	r2, [r3, #0]
		break;
    4d98:	e0d7      	b.n	4f4a <MEMS_BMC050_task+0x252>

	case readMagnetometer:
		res = readCurrMagValues(&CmpDataRaw);
    4d9a:	f640 20b0 	movw	r0, #2736	; 0xab0
    4d9e:	f2c1 0000 	movt	r0, #4096	; 0x1000
    4da2:	f000 fa79 	bl	5298 <readCurrMagValues>
    4da6:	6078      	str	r0, [r7, #4]
		if (res == 0)
    4da8:	687b      	ldr	r3, [r7, #4]
    4daa:	2b00      	cmp	r3, #0
    4dac:	f040 80cf 	bne.w	4f4e <MEMS_BMC050_task+0x256>
			BMC050State = processResults;
    4db0:	f640 2381 	movw	r3, #2689	; 0xa81
    4db4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4db8:	f04f 0202 	mov.w	r2, #2
    4dbc:	701a      	strb	r2, [r3, #0]
		break;
    4dbe:	e0c6      	b.n	4f4e <MEMS_BMC050_task+0x256>

	case processResults:
		#ifdef DEBUG
		if (use_dbg_data){
    4dc0:	f640 2380 	movw	r3, #2688	; 0xa80
    4dc4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4dc8:	781b      	ldrb	r3, [r3, #0]
    4dca:	2b00      	cmp	r3, #0
    4dcc:	d014      	beq.n	4df8 <MEMS_BMC050_task+0x100>
			prcRawAccValues(&BMC050_dbg_data_acc, &BMC050_Readings);
    4dce:	f640 605c 	movw	r0, #3676	; 0xe5c
    4dd2:	f2c1 0000 	movt	r0, #4096	; 0x1000
    4dd6:	f640 6148 	movw	r1, #3656	; 0xe48
    4dda:	f2c1 0100 	movt	r1, #4096	; 0x1000
    4dde:	f000 f91f 	bl	5020 <prcRawAccValues>
			prcRawCmpValues(&BMC050_dbg_data_cmp, &BMC050_Readings);
    4de2:	f640 6068 	movw	r0, #3688	; 0xe68
    4de6:	f2c1 0000 	movt	r0, #4096	; 0x1000
    4dea:	f640 6148 	movw	r1, #3656	; 0xe48
    4dee:	f2c1 0100 	movt	r1, #4096	; 0x1000
    4df2:	f000 f9b1 	bl	5158 <prcRawCmpValues>
    4df6:	e013      	b.n	4e20 <MEMS_BMC050_task+0x128>
		}else{
		#endif
		prcRawAccValues(&AccDataRaw, &BMC050_Readings);
    4df8:	f640 20a4 	movw	r0, #2724	; 0xaa4
    4dfc:	f2c1 0000 	movt	r0, #4096	; 0x1000
    4e00:	f640 6148 	movw	r1, #3656	; 0xe48
    4e04:	f2c1 0100 	movt	r1, #4096	; 0x1000
    4e08:	f000 f90a 	bl	5020 <prcRawAccValues>
		prcRawCmpValues(&CmpDataRaw, &BMC050_Readings);
    4e0c:	f640 20b0 	movw	r0, #2736	; 0xab0
    4e10:	f2c1 0000 	movt	r0, #4096	; 0x1000
    4e14:	f640 6148 	movw	r1, #3656	; 0xe48
    4e18:	f2c1 0100 	movt	r1, #4096	; 0x1000
    4e1c:	f000 f99c 	bl	5158 <prcRawCmpValues>
		#ifdef DEBUG
		}
		#endif
		BMC050_Readings.data_valid = TRUE; // data now ready for CAN transmission
    4e20:	f640 6348 	movw	r3, #3656	; 0xe48
    4e24:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4e28:	f04f 0201 	mov.w	r2, #1
    4e2c:	745a      	strb	r2, [r3, #17]
		BMC050State = GoToState;
    4e2e:	f640 2382 	movw	r3, #2690	; 0xa82
    4e32:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4e36:	781a      	ldrb	r2, [r3, #0]
    4e38:	f640 2381 	movw	r3, #2689	; 0xa81
    4e3c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4e40:	701a      	strb	r2, [r3, #0]
		break;
    4e42:	e091      	b.n	4f68 <MEMS_BMC050_task+0x270>

	case slowCompensation:
		break;

	case startFastCompensation:
		BMC050_AccCompensate.data_valid = FALSE;
    4e44:	f640 6374 	movw	r3, #3700	; 0xe74
    4e48:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4e4c:	f04f 0200 	mov.w	r2, #0
    4e50:	725a      	strb	r2, [r3, #9]
		if (setAccCompensationTargets() >= 0)
    4e52:	f000 fb59 	bl	5508 <setAccCompensationTargets>
    4e56:	4603      	mov	r3, r0
    4e58:	2b00      	cmp	r3, #0
    4e5a:	db7a      	blt.n	4f52 <MEMS_BMC050_task+0x25a>
			BMC050State = fastCompensation_x;
    4e5c:	f640 2381 	movw	r3, #2689	; 0xa81
    4e60:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4e64:	f04f 0205 	mov.w	r2, #5
    4e68:	701a      	strb	r2, [r3, #0]
		break;
    4e6a:	e072      	b.n	4f52 <MEMS_BMC050_task+0x25a>

	case fastCompensation_x:
		BMC050_AccCompensate.data_valid = FALSE;
    4e6c:	f640 6374 	movw	r3, #3700	; 0xe74
    4e70:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4e74:	f04f 0200 	mov.w	r2, #0
    4e78:	725a      	strb	r2, [r3, #9]
		if (accFastCompensationX() >= 0)
    4e7a:	f000 fb09 	bl	5490 <accFastCompensationX>
    4e7e:	4603      	mov	r3, r0
    4e80:	2b00      	cmp	r3, #0
    4e82:	db68      	blt.n	4f56 <MEMS_BMC050_task+0x25e>
			BMC050State = fastCompensation_y;
    4e84:	f640 2381 	movw	r3, #2689	; 0xa81
    4e88:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4e8c:	f04f 0206 	mov.w	r2, #6
    4e90:	701a      	strb	r2, [r3, #0]
		break;
    4e92:	e060      	b.n	4f56 <MEMS_BMC050_task+0x25e>

	case fastCompensation_y:
		BMC050_AccCompensate.data_valid = FALSE;
    4e94:	f640 6374 	movw	r3, #3700	; 0xe74
    4e98:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4e9c:	f04f 0200 	mov.w	r2, #0
    4ea0:	725a      	strb	r2, [r3, #9]
		if (accFastCompensationY() >= 0)
    4ea2:	f000 fb09 	bl	54b8 <accFastCompensationY>
    4ea6:	4603      	mov	r3, r0
    4ea8:	2b00      	cmp	r3, #0
    4eaa:	db56      	blt.n	4f5a <MEMS_BMC050_task+0x262>
			BMC050State = fastCompensation_z;
    4eac:	f640 2381 	movw	r3, #2689	; 0xa81
    4eb0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4eb4:	f04f 0207 	mov.w	r2, #7
    4eb8:	701a      	strb	r2, [r3, #0]
		break;
    4eba:	e04e      	b.n	4f5a <MEMS_BMC050_task+0x262>

	case fastCompensation_z:
		BMC050_AccCompensate.data_valid = FALSE;
    4ebc:	f640 6374 	movw	r3, #3700	; 0xe74
    4ec0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4ec4:	f04f 0200 	mov.w	r2, #0
    4ec8:	725a      	strb	r2, [r3, #9]
		if (accFastCompensationZ() >= 0)
    4eca:	f000 fb09 	bl	54e0 <accFastCompensationZ>
    4ece:	4603      	mov	r3, r0
    4ed0:	2b00      	cmp	r3, #0
    4ed2:	db44      	blt.n	4f5e <MEMS_BMC050_task+0x266>
			BMC050State = readAccelerometerCompenstaionValues;
    4ed4:	f640 2381 	movw	r3, #2689	; 0xa81
    4ed8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4edc:	f04f 0208 	mov.w	r2, #8
    4ee0:	701a      	strb	r2, [r3, #0]
		break;
    4ee2:	e03c      	b.n	4f5e <MEMS_BMC050_task+0x266>

	case readAccelerometerCompenstaionValues:
		if (readAccCompenstaionValues() >= 0) {
    4ee4:	f000 fb28 	bl	5538 <readAccCompenstaionValues>
    4ee8:	4603      	mov	r3, r0
    4eea:	2b00      	cmp	r3, #0
    4eec:	db39      	blt.n	4f62 <MEMS_BMC050_task+0x26a>
			BMC050_AccCompensate.data_valid = TRUE;
    4eee:	f640 6374 	movw	r3, #3700	; 0xe74
    4ef2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4ef6:	f04f 0201 	mov.w	r2, #1
    4efa:	725a      	strb	r2, [r3, #9]
			BMC050State = readAccelerometer;
    4efc:	f640 2381 	movw	r3, #2689	; 0xa81
    4f00:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4f04:	f04f 0200 	mov.w	r2, #0
    4f08:	701a      	strb	r2, [r3, #0]
			GoToState = readAccelerometer;
    4f0a:	f640 2382 	movw	r3, #2690	; 0xa82
    4f0e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4f12:	f04f 0200 	mov.w	r2, #0
    4f16:	701a      	strb	r2, [r3, #0]
		}
		break;
    4f18:	e023      	b.n	4f62 <MEMS_BMC050_task+0x26a>

	case manualAccCompensation:
		break;

	case resetAccCompensation:
		BMC050_AccCompensate.data_valid = FALSE;
    4f1a:	f640 6374 	movw	r3, #3700	; 0xe74
    4f1e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4f22:	f04f 0200 	mov.w	r2, #0
    4f26:	725a      	strb	r2, [r3, #9]
		if (resetAccCompensationValues() >= 0)
    4f28:	f000 fb36 	bl	5598 <resetAccCompensationValues>
    4f2c:	4603      	mov	r3, r0
    4f2e:	2b00      	cmp	r3, #0
    4f30:	db19      	blt.n	4f66 <MEMS_BMC050_task+0x26e>
			BMC050State = readAccelerometerCompenstaionValues;
    4f32:	f640 2381 	movw	r3, #2689	; 0xa81
    4f36:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4f3a:	f04f 0208 	mov.w	r2, #8
    4f3e:	701a      	strb	r2, [r3, #0]
		break;
    4f40:	e011      	b.n	4f66 <MEMS_BMC050_task+0x26e>
		handleAccIRQ();
	if (checkMagIRQ())
		handleMagIRQ();

	if (BMC050_Readings.data_valid == TRUE)
		return;
    4f42:	bf00      	nop
    4f44:	e010      	b.n	4f68 <MEMS_BMC050_task+0x270>
			BMC050State = readAccelerometerCompenstaionValues;
		break;

	// error case:
	default:
		break;
    4f46:	bf00      	nop
    4f48:	e00e      	b.n	4f68 <MEMS_BMC050_task+0x270>
	switch (BMC050State) {
	case readAccelerometer:
		res = readCurrAccelerationValues(&AccDataRaw);
		if (res == 0)
			BMC050State = readMagnetometer;
		break;
    4f4a:	bf00      	nop
    4f4c:	e00c      	b.n	4f68 <MEMS_BMC050_task+0x270>

	case readMagnetometer:
		res = readCurrMagValues(&CmpDataRaw);
		if (res == 0)
			BMC050State = processResults;
		break;
    4f4e:	bf00      	nop
    4f50:	e00a      	b.n	4f68 <MEMS_BMC050_task+0x270>

	case startFastCompensation:
		BMC050_AccCompensate.data_valid = FALSE;
		if (setAccCompensationTargets() >= 0)
			BMC050State = fastCompensation_x;
		break;
    4f52:	bf00      	nop
    4f54:	e008      	b.n	4f68 <MEMS_BMC050_task+0x270>

	case fastCompensation_x:
		BMC050_AccCompensate.data_valid = FALSE;
		if (accFastCompensationX() >= 0)
			BMC050State = fastCompensation_y;
		break;
    4f56:	bf00      	nop
    4f58:	e006      	b.n	4f68 <MEMS_BMC050_task+0x270>

	case fastCompensation_y:
		BMC050_AccCompensate.data_valid = FALSE;
		if (accFastCompensationY() >= 0)
			BMC050State = fastCompensation_z;
		break;
    4f5a:	bf00      	nop
    4f5c:	e004      	b.n	4f68 <MEMS_BMC050_task+0x270>

	case fastCompensation_z:
		BMC050_AccCompensate.data_valid = FALSE;
		if (accFastCompensationZ() >= 0)
			BMC050State = readAccelerometerCompenstaionValues;
		break;
    4f5e:	bf00      	nop
    4f60:	e002      	b.n	4f68 <MEMS_BMC050_task+0x270>
		if (readAccCompenstaionValues() >= 0) {
			BMC050_AccCompensate.data_valid = TRUE;
			BMC050State = readAccelerometer;
			GoToState = readAccelerometer;
		}
		break;
    4f62:	bf00      	nop
    4f64:	e000      	b.n	4f68 <MEMS_BMC050_task+0x270>

	case resetAccCompensation:
		BMC050_AccCompensate.data_valid = FALSE;
		if (resetAccCompensationValues() >= 0)
			BMC050State = readAccelerometerCompenstaionValues;
		break;
    4f66:	bf00      	nop
	default:
		break;
		//-------------------------
	}

} // MEMS_BMC050_task
    4f68:	f107 0708 	add.w	r7, r7, #8
    4f6c:	46bd      	mov	sp, r7
    4f6e:	bd80      	pop	{r7, pc}

00004f70 <initData>:
//! void initData(void)
//------------------------------------------------------------------------------
//! @ brief initializes data structures
//------------------------------------------------------------------------------
void initData(void)
{
    4f70:	b480      	push	{r7}
    4f72:	af00      	add	r7, sp, #0
	// no valid readings so far
	BMC050_Readings.data_valid = FALSE;
    4f74:	f640 6348 	movw	r3, #3656	; 0xe48
    4f78:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4f7c:	f04f 0200 	mov.w	r2, #0
    4f80:	745a      	strb	r2, [r3, #17]

	// init local state machine
	BMC050State = readAccelerometer;
    4f82:	f640 2381 	movw	r3, #2689	; 0xa81
    4f86:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4f8a:	f04f 0200 	mov.w	r2, #0
    4f8e:	701a      	strb	r2, [r3, #0]

	data_init = 1;
    4f90:	f640 23bc 	movw	r3, #2748	; 0xabc
    4f94:	f2c1 0300 	movt	r3, #4096	; 0x1000
    4f98:	f04f 0201 	mov.w	r2, #1
    4f9c:	701a      	strb	r2, [r3, #0]
	
	return;
    4f9e:	bf00      	nop
}
    4fa0:	46bd      	mov	sp, r7
    4fa2:	bc80      	pop	{r7}
    4fa4:	4770      	bx	lr
    4fa6:	bf00      	nop

00004fa8 <initSSP>:
//! static HWStatus_t initSSP(void)
//------------------------------------------------------------------------------
//@ brief  initializes SSP interface for communication with sensor
//------------------------------------------------------------------------------
static HWStatus_t initSSP(void)
{
    4fa8:	b580      	push	{r7, lr}
    4faa:	b084      	sub	sp, #16
    4fac:	af00      	add	r7, sp, #0
	SSPInit_t init;
	SSPStatus_t res=0;
    4fae:	f04f 0300 	mov.w	r3, #0
    4fb2:	60fb      	str	r3, [r7, #12]

	init.bitlen = t8_bit;
    4fb4:	f04f 0307 	mov.w	r3, #7
    4fb8:	703b      	strb	r3, [r7, #0]
	init.clk_phase = 1;
    4fba:	f04f 0301 	mov.w	r3, #1
    4fbe:	707b      	strb	r3, [r7, #1]
	init.clk_pol = 1;
    4fc0:	f04f 0301 	mov.w	r3, #1
    4fc4:	70bb      	strb	r3, [r7, #2]
	init.mode = 0;
    4fc6:	f04f 0300 	mov.w	r3, #0
    4fca:	71fb      	strb	r3, [r7, #7]
	init.frm_format = 0;
    4fcc:	f04f 0300 	mov.w	r3, #0
    4fd0:	70fb      	strb	r3, [r7, #3]
	init.loop_back=0;
    4fd2:	f04f 0300 	mov.w	r3, #0
    4fd6:	717b      	strb	r3, [r7, #5]

//	init.ser_clk_rate = 9; 		//! 10 clocks per bit
	init.ser_clk_rate = 0; 		//! 1 clocks per bit
    4fd8:	f04f 0300 	mov.w	r3, #0
    4fdc:	713b      	strb	r3, [r7, #4]
	init.clk_prescaler = 12;
    4fde:	f04f 030c 	mov.w	r3, #12
    4fe2:	723b      	strb	r3, [r7, #8]

	init.enable=1;
    4fe4:	f04f 0301 	mov.w	r3, #1
    4fe8:	71bb      	strb	r3, [r7, #6]

	res = SSP_Init(SSP_2, &init);
    4fea:	463b      	mov	r3, r7
    4fec:	f04f 0001 	mov.w	r0, #1
    4ff0:	4619      	mov	r1, r3
    4ff2:	f001 f8ed 	bl	61d0 <SSP_Init>
    4ff6:	60f8      	str	r0, [r7, #12]
	if(res != SSP_ERR_OK)
    4ff8:	68fb      	ldr	r3, [r7, #12]
    4ffa:	2b00      	cmp	r3, #0
    4ffc:	d002      	beq.n	5004 <initSSP+0x5c>
		return HW_ERR_RESOURCE;
    4ffe:	f04f 0302 	mov.w	r3, #2
    5002:	e008      	b.n	5016 <initSSP+0x6e>

	ssp_init=1;
    5004:	f640 23bb 	movw	r3, #2747	; 0xabb
    5008:	f2c1 0300 	movt	r3, #4096	; 0x1000
    500c:	f04f 0201 	mov.w	r2, #1
    5010:	701a      	strb	r2, [r3, #0]

	return HW_ERR_OK;
    5012:	f04f 0300 	mov.w	r3, #0
}
    5016:	4618      	mov	r0, r3
    5018:	f107 0710 	add.w	r7, r7, #16
    501c:	46bd      	mov	sp, r7
    501e:	bd80      	pop	{r7, pc}

00005020 <prcRawAccValues>:
//------------------------------------------------------------------------------

static int prcRawAccValues(MEMS_BMC050_Acc_Data_Type *pData,
		MEMS_BMC050_Result_Type *pRes) {
    5020:	b480      	push	{r7}
    5022:	b083      	sub	sp, #12
    5024:	af00      	add	r7, sp, #0
    5026:	6078      	str	r0, [r7, #4]
    5028:	6039      	str	r1, [r7, #0]

	pRes->AcclDevID = pData->chip_id;
    502a:	687b      	ldr	r3, [r7, #4]
    502c:	785a      	ldrb	r2, [r3, #1]
    502e:	683b      	ldr	r3, [r7, #0]
    5030:	701a      	strb	r2, [r3, #0]
	pRes->Acceleration_X = ((s16_t) (pData->Reg_0x02.acc_x_lsb & 0x03)
    5032:	687b      	ldr	r3, [r7, #4]
    5034:	78db      	ldrb	r3, [r3, #3]
    5036:	f3c3 1381 	ubfx	r3, r3, #6, #2
    503a:	b2db      	uxtb	r3, r3
    503c:	461a      	mov	r2, r3
			| ((s16_t) pData->acc_x_msb << 2));
    503e:	687b      	ldr	r3, [r7, #4]
    5040:	791b      	ldrb	r3, [r3, #4]
    5042:	ea4f 0383 	mov.w	r3, r3, lsl #2

static int prcRawAccValues(MEMS_BMC050_Acc_Data_Type *pData,
		MEMS_BMC050_Result_Type *pRes) {

	pRes->AcclDevID = pData->chip_id;
	pRes->Acceleration_X = ((s16_t) (pData->Reg_0x02.acc_x_lsb & 0x03)
    5046:	b29b      	uxth	r3, r3
    5048:	4313      	orrs	r3, r2
    504a:	b29a      	uxth	r2, r3
    504c:	683b      	ldr	r3, [r7, #0]
    504e:	805a      	strh	r2, [r3, #2]
			| ((s16_t) pData->acc_x_msb << 2));
	if (pRes->Acceleration_X & 0x0200)
    5050:	683b      	ldr	r3, [r7, #0]
    5052:	885b      	ldrh	r3, [r3, #2]
    5054:	b29b      	uxth	r3, r3
    5056:	f403 7300 	and.w	r3, r3, #512	; 0x200
    505a:	2b00      	cmp	r3, #0
    505c:	d008      	beq.n	5070 <prcRawAccValues+0x50>
		pRes->Acceleration_X |= 0xFC00;
    505e:	683b      	ldr	r3, [r7, #0]
    5060:	885b      	ldrh	r3, [r3, #2]
    5062:	ea6f 5383 	mvn.w	r3, r3, lsl #22
    5066:	ea6f 5393 	mvn.w	r3, r3, lsr #22
    506a:	b29a      	uxth	r2, r3
    506c:	683b      	ldr	r3, [r7, #0]
    506e:	805a      	strh	r2, [r3, #2]
	pRes->Acceleration_X *= AccSensitivity;
    5070:	683b      	ldr	r3, [r7, #0]
    5072:	885b      	ldrh	r3, [r3, #2]
    5074:	b29a      	uxth	r2, r3
    5076:	f240 0301 	movw	r3, #1
    507a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    507e:	781b      	ldrb	r3, [r3, #0]
    5080:	fb03 f302 	mul.w	r3, r3, r2
    5084:	b29b      	uxth	r3, r3
    5086:	b29a      	uxth	r2, r3
    5088:	683b      	ldr	r3, [r7, #0]
    508a:	805a      	strh	r2, [r3, #2]

	pRes->Acceleration_Y = ((s16_t) (pData->Reg_0x04.acc_y_lsb & 0x03)
    508c:	687b      	ldr	r3, [r7, #4]
    508e:	795b      	ldrb	r3, [r3, #5]
    5090:	f3c3 1381 	ubfx	r3, r3, #6, #2
    5094:	b2db      	uxtb	r3, r3
    5096:	461a      	mov	r2, r3
			| ((s16_t) pData->acc_y_msb << 2));
    5098:	687b      	ldr	r3, [r7, #4]
    509a:	799b      	ldrb	r3, [r3, #6]
    509c:	ea4f 0383 	mov.w	r3, r3, lsl #2
			| ((s16_t) pData->acc_x_msb << 2));
	if (pRes->Acceleration_X & 0x0200)
		pRes->Acceleration_X |= 0xFC00;
	pRes->Acceleration_X *= AccSensitivity;

	pRes->Acceleration_Y = ((s16_t) (pData->Reg_0x04.acc_y_lsb & 0x03)
    50a0:	b29b      	uxth	r3, r3
    50a2:	4313      	orrs	r3, r2
    50a4:	b29a      	uxth	r2, r3
    50a6:	683b      	ldr	r3, [r7, #0]
    50a8:	809a      	strh	r2, [r3, #4]
			| ((s16_t) pData->acc_y_msb << 2));
	if (pRes->Acceleration_Y & 0x0200)
    50aa:	683b      	ldr	r3, [r7, #0]
    50ac:	889b      	ldrh	r3, [r3, #4]
    50ae:	b29b      	uxth	r3, r3
    50b0:	f403 7300 	and.w	r3, r3, #512	; 0x200
    50b4:	2b00      	cmp	r3, #0
    50b6:	d008      	beq.n	50ca <prcRawAccValues+0xaa>
		pRes->Acceleration_Y |= 0xFC00;
    50b8:	683b      	ldr	r3, [r7, #0]
    50ba:	889b      	ldrh	r3, [r3, #4]
    50bc:	ea6f 5383 	mvn.w	r3, r3, lsl #22
    50c0:	ea6f 5393 	mvn.w	r3, r3, lsr #22
    50c4:	b29a      	uxth	r2, r3
    50c6:	683b      	ldr	r3, [r7, #0]
    50c8:	809a      	strh	r2, [r3, #4]
	pRes->Acceleration_Y *= AccSensitivity;
    50ca:	683b      	ldr	r3, [r7, #0]
    50cc:	889b      	ldrh	r3, [r3, #4]
    50ce:	b29a      	uxth	r2, r3
    50d0:	f240 0301 	movw	r3, #1
    50d4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    50d8:	781b      	ldrb	r3, [r3, #0]
    50da:	fb03 f302 	mul.w	r3, r3, r2
    50de:	b29b      	uxth	r3, r3
    50e0:	b29a      	uxth	r2, r3
    50e2:	683b      	ldr	r3, [r7, #0]
    50e4:	809a      	strh	r2, [r3, #4]

	pRes->Acceleration_Z = ((s16_t) (pData->Reg_0x06.acc_z_lsb & 0x03)
    50e6:	687b      	ldr	r3, [r7, #4]
    50e8:	79db      	ldrb	r3, [r3, #7]
    50ea:	f3c3 1381 	ubfx	r3, r3, #6, #2
    50ee:	b2db      	uxtb	r3, r3
    50f0:	461a      	mov	r2, r3
			| ((s16_t) pData->acc_z_msb << 2));
    50f2:	687b      	ldr	r3, [r7, #4]
    50f4:	7a1b      	ldrb	r3, [r3, #8]
    50f6:	ea4f 0383 	mov.w	r3, r3, lsl #2
			| ((s16_t) pData->acc_y_msb << 2));
	if (pRes->Acceleration_Y & 0x0200)
		pRes->Acceleration_Y |= 0xFC00;
	pRes->Acceleration_Y *= AccSensitivity;

	pRes->Acceleration_Z = ((s16_t) (pData->Reg_0x06.acc_z_lsb & 0x03)
    50fa:	b29b      	uxth	r3, r3
    50fc:	4313      	orrs	r3, r2
    50fe:	b29a      	uxth	r2, r3
    5100:	683b      	ldr	r3, [r7, #0]
    5102:	80da      	strh	r2, [r3, #6]
			| ((s16_t) pData->acc_z_msb << 2));
	if (pRes->Acceleration_Z & 0x0200)
    5104:	683b      	ldr	r3, [r7, #0]
    5106:	88db      	ldrh	r3, [r3, #6]
    5108:	b29b      	uxth	r3, r3
    510a:	f403 7300 	and.w	r3, r3, #512	; 0x200
    510e:	2b00      	cmp	r3, #0
    5110:	d008      	beq.n	5124 <prcRawAccValues+0x104>
		pRes->Acceleration_Z |= 0xFC00;
    5112:	683b      	ldr	r3, [r7, #0]
    5114:	88db      	ldrh	r3, [r3, #6]
    5116:	ea6f 5383 	mvn.w	r3, r3, lsl #22
    511a:	ea6f 5393 	mvn.w	r3, r3, lsr #22
    511e:	b29a      	uxth	r2, r3
    5120:	683b      	ldr	r3, [r7, #0]
    5122:	80da      	strh	r2, [r3, #6]
	pRes->Acceleration_Z *= AccSensitivity;
    5124:	683b      	ldr	r3, [r7, #0]
    5126:	88db      	ldrh	r3, [r3, #6]
    5128:	b29a      	uxth	r2, r3
    512a:	f240 0301 	movw	r3, #1
    512e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5132:	781b      	ldrb	r3, [r3, #0]
    5134:	fb03 f302 	mul.w	r3, r3, r2
    5138:	b29b      	uxth	r3, r3
    513a:	b29a      	uxth	r2, r3
    513c:	683b      	ldr	r3, [r7, #0]
    513e:	80da      	strh	r2, [r3, #6]

	pRes->Temperature = pData->temp;
    5140:	687b      	ldr	r3, [r7, #4]
    5142:	7a5a      	ldrb	r2, [r3, #9]
    5144:	683b      	ldr	r3, [r7, #0]
    5146:	721a      	strb	r2, [r3, #8]

	return 0;
    5148:	f04f 0300 	mov.w	r3, #0
}
    514c:	4618      	mov	r0, r3
    514e:	f107 070c 	add.w	r7, r7, #12
    5152:	46bd      	mov	sp, r7
    5154:	bc80      	pop	{r7}
    5156:	4770      	bx	lr

00005158 <prcRawCmpValues>:

static int prcRawCmpValues(MEMS_BMC050_Mag_Data_Type *pData,
		MEMS_BMC050_Result_Type *pRes) {
    5158:	b480      	push	{r7}
    515a:	b083      	sub	sp, #12
    515c:	af00      	add	r7, sp, #0
    515e:	6078      	str	r0, [r7, #4]
    5160:	6039      	str	r1, [r7, #0]

	pRes->CompDevID = pData->chip_id;
    5162:	687b      	ldr	r3, [r7, #4]
    5164:	785a      	ldrb	r2, [r3, #1]
    5166:	683b      	ldr	r3, [r7, #0]
    5168:	705a      	strb	r2, [r3, #1]

	pRes->MagField_X = (s16_t) pData->Reg_0x42.mag_x_lsb
    516a:	687b      	ldr	r3, [r7, #4]
    516c:	78db      	ldrb	r3, [r3, #3]
    516e:	f3c3 03c4 	ubfx	r3, r3, #3, #5
    5172:	b2db      	uxtb	r3, r3
    5174:	461a      	mov	r2, r3
			| (s16_t) pData->mag_x_msb << 5;
    5176:	687b      	ldr	r3, [r7, #4]
    5178:	791b      	ldrb	r3, [r3, #4]
    517a:	ea4f 1343 	mov.w	r3, r3, lsl #5
static int prcRawCmpValues(MEMS_BMC050_Mag_Data_Type *pData,
		MEMS_BMC050_Result_Type *pRes) {

	pRes->CompDevID = pData->chip_id;

	pRes->MagField_X = (s16_t) pData->Reg_0x42.mag_x_lsb
    517e:	b29b      	uxth	r3, r3
    5180:	4313      	orrs	r3, r2
    5182:	b29a      	uxth	r2, r3
    5184:	683b      	ldr	r3, [r7, #0]
    5186:	815a      	strh	r2, [r3, #10]
			| (s16_t) pData->mag_x_msb << 5;
	if (pRes->MagField_X & 0x1000)
    5188:	683b      	ldr	r3, [r7, #0]
    518a:	895b      	ldrh	r3, [r3, #10]
    518c:	b29b      	uxth	r3, r3
    518e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
    5192:	2b00      	cmp	r3, #0
    5194:	d008      	beq.n	51a8 <prcRawCmpValues+0x50>
		pRes->MagField_X |= 0xE000;
    5196:	683b      	ldr	r3, [r7, #0]
    5198:	895b      	ldrh	r3, [r3, #10]
    519a:	ea6f 43c3 	mvn.w	r3, r3, lsl #19
    519e:	ea6f 43d3 	mvn.w	r3, r3, lsr #19
    51a2:	b29a      	uxth	r2, r3
    51a4:	683b      	ldr	r3, [r7, #0]
    51a6:	815a      	strh	r2, [r3, #10]

	pRes->MagField_Y = (s16_t) pData->Reg_0x44.mag_y_lsb
    51a8:	687b      	ldr	r3, [r7, #4]
    51aa:	795b      	ldrb	r3, [r3, #5]
    51ac:	f3c3 03c4 	ubfx	r3, r3, #3, #5
    51b0:	b2db      	uxtb	r3, r3
    51b2:	461a      	mov	r2, r3
			| (s16_t) pData->mag_y_msb << 5;
    51b4:	687b      	ldr	r3, [r7, #4]
    51b6:	799b      	ldrb	r3, [r3, #6]
    51b8:	ea4f 1343 	mov.w	r3, r3, lsl #5
	pRes->MagField_X = (s16_t) pData->Reg_0x42.mag_x_lsb
			| (s16_t) pData->mag_x_msb << 5;
	if (pRes->MagField_X & 0x1000)
		pRes->MagField_X |= 0xE000;

	pRes->MagField_Y = (s16_t) pData->Reg_0x44.mag_y_lsb
    51bc:	b29b      	uxth	r3, r3
    51be:	4313      	orrs	r3, r2
    51c0:	b29a      	uxth	r2, r3
    51c2:	683b      	ldr	r3, [r7, #0]
    51c4:	819a      	strh	r2, [r3, #12]
			| (s16_t) pData->mag_y_msb << 5;
	if (pRes->MagField_Y & 0x1000)
    51c6:	683b      	ldr	r3, [r7, #0]
    51c8:	899b      	ldrh	r3, [r3, #12]
    51ca:	b29b      	uxth	r3, r3
    51cc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
    51d0:	2b00      	cmp	r3, #0
    51d2:	d008      	beq.n	51e6 <prcRawCmpValues+0x8e>
		pRes->MagField_Y |= 0xE000;
    51d4:	683b      	ldr	r3, [r7, #0]
    51d6:	899b      	ldrh	r3, [r3, #12]
    51d8:	ea6f 43c3 	mvn.w	r3, r3, lsl #19
    51dc:	ea6f 43d3 	mvn.w	r3, r3, lsr #19
    51e0:	b29a      	uxth	r2, r3
    51e2:	683b      	ldr	r3, [r7, #0]
    51e4:	819a      	strh	r2, [r3, #12]

	pRes->MagField_Z = (s16_t) pData->Reg_0x46.mag_z_lsb
    51e6:	687b      	ldr	r3, [r7, #4]
    51e8:	79db      	ldrb	r3, [r3, #7]
    51ea:	f3c3 0346 	ubfx	r3, r3, #1, #7
    51ee:	b2db      	uxtb	r3, r3
    51f0:	461a      	mov	r2, r3
			| (s16_t) pData->mag_z_msb << 7;
    51f2:	687b      	ldr	r3, [r7, #4]
    51f4:	7a1b      	ldrb	r3, [r3, #8]
    51f6:	ea4f 13c3 	mov.w	r3, r3, lsl #7
	pRes->MagField_Y = (s16_t) pData->Reg_0x44.mag_y_lsb
			| (s16_t) pData->mag_y_msb << 5;
	if (pRes->MagField_Y & 0x1000)
		pRes->MagField_Y |= 0xE000;

	pRes->MagField_Z = (s16_t) pData->Reg_0x46.mag_z_lsb
    51fa:	b29b      	uxth	r3, r3
    51fc:	4313      	orrs	r3, r2
    51fe:	b29a      	uxth	r2, r3
    5200:	683b      	ldr	r3, [r7, #0]
    5202:	81da      	strh	r2, [r3, #14]
			| (s16_t) pData->mag_z_msb << 7;
	if (pRes->MagField_Z & 0x4000)
    5204:	683b      	ldr	r3, [r7, #0]
    5206:	89db      	ldrh	r3, [r3, #14]
    5208:	b29b      	uxth	r3, r3
    520a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
    520e:	2b00      	cmp	r3, #0
    5210:	d008      	beq.n	5224 <prcRawCmpValues+0xcc>
		pRes->MagField_Z |= 0x8000;
    5212:	683b      	ldr	r3, [r7, #0]
    5214:	89db      	ldrh	r3, [r3, #14]
    5216:	ea6f 4343 	mvn.w	r3, r3, lsl #17
    521a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
    521e:	b29a      	uxth	r2, r3
    5220:	683b      	ldr	r3, [r7, #0]
    5222:	81da      	strh	r2, [r3, #14]

	return 0;
    5224:	f04f 0300 	mov.w	r3, #0
}
    5228:	4618      	mov	r0, r3
    522a:	f107 070c 	add.w	r7, r7, #12
    522e:	46bd      	mov	sp, r7
    5230:	bc80      	pop	{r7}
    5232:	4770      	bx	lr

00005234 <readCurrAccelerationValues>:

static int readCurrAccelerationValues(MEMS_BMC050_Acc_Data_Type *pBuff) {
    5234:	b580      	push	{r7, lr}
    5236:	b088      	sub	sp, #32
    5238:	af00      	add	r7, sp, #0
    523a:	6078      	str	r0, [r7, #4]
	u8_t wBuff_Accl[bufsize] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    523c:	f107 030c 	add.w	r3, r7, #12
    5240:	f04f 0200 	mov.w	r2, #0
    5244:	601a      	str	r2, [r3, #0]
    5246:	f103 0304 	add.w	r3, r3, #4
    524a:	f04f 0200 	mov.w	r2, #0
    524e:	601a      	str	r2, [r3, #0]
    5250:	f103 0304 	add.w	r3, r3, #4
    5254:	f04f 0200 	mov.w	r2, #0
    5258:	601a      	str	r2, [r3, #0]
    525a:	f103 0304 	add.w	r3, r3, #4
    525e:	f04f 0200 	mov.w	r2, #0
    5262:	601a      	str	r2, [r3, #0]
    5264:	f103 0304 	add.w	r3, r3, #4
    5268:	f04f 0200 	mov.w	r2, #0
    526c:	701a      	strb	r2, [r3, #0]
    526e:	f103 0301 	add.w	r3, r3, #1
			0 };

	wBuff_Accl[0] = ((1 << 7) | 0x00); // command: read from register 40h onward
    5272:	f04f 0380 	mov.w	r3, #128	; 0x80
    5276:	733b      	strb	r3, [r7, #12]
	rwACC(wBuff_Accl, (u8_t*) pBuff, 10);
    5278:	f107 030c 	add.w	r3, r7, #12
    527c:	4618      	mov	r0, r3
    527e:	6879      	ldr	r1, [r7, #4]
    5280:	f04f 020a 	mov.w	r2, #10
    5284:	f000 faee 	bl	5864 <rwACC>

	return 0;
    5288:	f04f 0300 	mov.w	r3, #0
}
    528c:	4618      	mov	r0, r3
    528e:	f107 0720 	add.w	r7, r7, #32
    5292:	46bd      	mov	sp, r7
    5294:	bd80      	pop	{r7, pc}
    5296:	bf00      	nop

00005298 <readCurrMagValues>:

static int readCurrMagValues(MEMS_BMC050_Mag_Data_Type *pBuff) {
    5298:	b580      	push	{r7, lr}
    529a:	b088      	sub	sp, #32
    529c:	af00      	add	r7, sp, #0
    529e:	6078      	str	r0, [r7, #4]
	u8_t wBuff_Comp[bufsize] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
    52a0:	f107 030c 	add.w	r3, r7, #12
    52a4:	f04f 0200 	mov.w	r2, #0
    52a8:	601a      	str	r2, [r3, #0]
    52aa:	f103 0304 	add.w	r3, r3, #4
    52ae:	f04f 0200 	mov.w	r2, #0
    52b2:	601a      	str	r2, [r3, #0]
    52b4:	f103 0304 	add.w	r3, r3, #4
    52b8:	f04f 0200 	mov.w	r2, #0
    52bc:	601a      	str	r2, [r3, #0]
    52be:	f103 0304 	add.w	r3, r3, #4
    52c2:	f04f 0200 	mov.w	r2, #0
    52c6:	601a      	str	r2, [r3, #0]
    52c8:	f103 0304 	add.w	r3, r3, #4
    52cc:	f04f 0200 	mov.w	r2, #0
    52d0:	701a      	strb	r2, [r3, #0]
    52d2:	f103 0301 	add.w	r3, r3, #1

	wBuff_Comp[0] = ((1 << 7) | 0x40); // command: read from register 40h onward
    52d6:	f04f 03c0 	mov.w	r3, #192	; 0xc0
    52da:	733b      	strb	r3, [r7, #12]
	rwMAG(wBuff_Comp, (u8_t*) pBuff, 9);
    52dc:	f107 030c 	add.w	r3, r7, #12
    52e0:	4618      	mov	r0, r3
    52e2:	6879      	ldr	r1, [r7, #4]
    52e4:	f04f 0209 	mov.w	r2, #9
    52e8:	f000 fb2c 	bl	5944 <rwMAG>

	return 0;
    52ec:	f04f 0300 	mov.w	r3, #0
}
    52f0:	4618      	mov	r0, r3
    52f2:	f107 0720 	add.w	r7, r7, #32
    52f6:	46bd      	mov	sp, r7
    52f8:	bd80      	pop	{r7, pc}
    52fa:	bf00      	nop

000052fc <readAccRange>:

static int readAccRange(void) {
    52fc:	b580      	push	{r7, lr}
    52fe:	b08c      	sub	sp, #48	; 0x30
    5300:	af00      	add	r7, sp, #0
	u8_t wBuff[bufsize];
	u8_t rBuff[bufsize];
	int ret = 0;
    5302:	f04f 0300 	mov.w	r3, #0
    5306:	62fb      	str	r3, [r7, #44]	; 0x2c

	wBuff[0] = ((1 << 7) | 0x0F);  // command: read from register 0Fh onward
    5308:	f04f 038f 	mov.w	r3, #143	; 0x8f
    530c:	763b      	strb	r3, [r7, #24]
	wBuff[1] = *((u8_t*) &(BMC050_AccCompensate.Reg_0x37));
    530e:	4b2a      	ldr	r3, [pc, #168]	; (53b8 <readAccRange+0xbc>)
    5310:	781b      	ldrb	r3, [r3, #0]
    5312:	767b      	strb	r3, [r7, #25]
	rwACC(wBuff, rBuff, 2);
    5314:	f107 0218 	add.w	r2, r7, #24
    5318:	f107 0304 	add.w	r3, r7, #4
    531c:	4610      	mov	r0, r2
    531e:	4619      	mov	r1, r3
    5320:	f04f 0202 	mov.w	r2, #2
    5324:	f000 fa9e 	bl	5864 <rwACC>

	switch (rBuff[1] & 0xF) {
    5328:	797b      	ldrb	r3, [r7, #5]
    532a:	f003 030f 	and.w	r3, r3, #15
    532e:	f1a3 0303 	sub.w	r3, r3, #3
    5332:	2b09      	cmp	r3, #9
    5334:	d836      	bhi.n	53a4 <readAccRange+0xa8>
    5336:	a201      	add	r2, pc, #4	; (adr r2, 533c <readAccRange+0x40>)
    5338:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    533c:	00005365 	.word	0x00005365
    5340:	000053a5 	.word	0x000053a5
    5344:	00005375 	.word	0x00005375
    5348:	000053a5 	.word	0x000053a5
    534c:	000053a5 	.word	0x000053a5
    5350:	00005385 	.word	0x00005385
    5354:	000053a5 	.word	0x000053a5
    5358:	000053a5 	.word	0x000053a5
    535c:	000053a5 	.word	0x000053a5
    5360:	00005395 	.word	0x00005395
	case 0x03:
		/* +- 2g range */
		AccSensitivity = 1;
    5364:	f240 0301 	movw	r3, #1
    5368:	f2c1 0300 	movt	r3, #4096	; 0x1000
    536c:	f04f 0201 	mov.w	r2, #1
    5370:	701a      	strb	r2, [r3, #0]
		break;
    5372:	e01b      	b.n	53ac <readAccRange+0xb0>
	case 0x05:
		/* +- 4g range */
		AccSensitivity = 2;
    5374:	f240 0301 	movw	r3, #1
    5378:	f2c1 0300 	movt	r3, #4096	; 0x1000
    537c:	f04f 0202 	mov.w	r2, #2
    5380:	701a      	strb	r2, [r3, #0]
		break;
    5382:	e013      	b.n	53ac <readAccRange+0xb0>
	case 0x08:
		/* +- 8g range */
		AccSensitivity = 4;
    5384:	f240 0301 	movw	r3, #1
    5388:	f2c1 0300 	movt	r3, #4096	; 0x1000
    538c:	f04f 0204 	mov.w	r2, #4
    5390:	701a      	strb	r2, [r3, #0]
		break;
    5392:	e00b      	b.n	53ac <readAccRange+0xb0>
	case 0x0C:
		/* +- 16g range */
		AccSensitivity = 8;
    5394:	f240 0301 	movw	r3, #1
    5398:	f2c1 0300 	movt	r3, #4096	; 0x1000
    539c:	f04f 0208 	mov.w	r2, #8
    53a0:	701a      	strb	r2, [r3, #0]
		break;
    53a2:	e003      	b.n	53ac <readAccRange+0xb0>
	default:
		ret = -1;
    53a4:	f04f 33ff 	mov.w	r3, #4294967295
    53a8:	62fb      	str	r3, [r7, #44]	; 0x2c
		break;
    53aa:	bf00      	nop
	}

	return ret;
    53ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
    53ae:	4618      	mov	r0, r3
    53b0:	f107 0730 	add.w	r7, r7, #48	; 0x30
    53b4:	46bd      	mov	sp, r7
    53b6:	bd80      	pop	{r7, pc}
    53b8:	10000e76 	.word	0x10000e76

000053bc <setAccRange>:

static void setAccRange(void){
    53bc:	b580      	push	{r7, lr}
    53be:	af00      	add	r7, sp, #0
	
	switch(AccSensitivity){
    53c0:	f240 0301 	movw	r3, #1
    53c4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    53c8:	781b      	ldrb	r3, [r3, #0]
    53ca:	2b04      	cmp	r3, #4
    53cc:	d011      	beq.n	53f2 <setAccRange+0x36>
    53ce:	2b08      	cmp	r3, #8
    53d0:	d016      	beq.n	5400 <setAccRange+0x44>
    53d2:	2b02      	cmp	r3, #2
    53d4:	d006      	beq.n	53e4 <setAccRange+0x28>
	default:	
	case 1:
		/* +- 2g range */
		wAccReg(0x0F, 0x03);
    53d6:	f04f 000f 	mov.w	r0, #15
    53da:	f04f 0103 	mov.w	r1, #3
    53de:	f000 fa25 	bl	582c <wAccReg>
		break;
    53e2:	e014      	b.n	540e <setAccRange+0x52>
	case 2:
		/* +- 4g range */
		wAccReg(0x0F, 0x05);
    53e4:	f04f 000f 	mov.w	r0, #15
    53e8:	f04f 0105 	mov.w	r1, #5
    53ec:	f000 fa1e 	bl	582c <wAccReg>
		break;
    53f0:	e00d      	b.n	540e <setAccRange+0x52>
	case 4:
		/* +- 8g range */
		wAccReg(0x0F, 0x08);
    53f2:	f04f 000f 	mov.w	r0, #15
    53f6:	f04f 0108 	mov.w	r1, #8
    53fa:	f000 fa17 	bl	582c <wAccReg>
		break;
    53fe:	e006      	b.n	540e <setAccRange+0x52>
	case 8:
		/* +- 16g range */
		wAccReg(0x0F, 0x0C);
    5400:	f04f 000f 	mov.w	r0, #15
    5404:	f04f 010c 	mov.w	r1, #12
    5408:	f000 fa10 	bl	582c <wAccReg>
		break;
    540c:	bf00      	nop
	}
	return;
    540e:	bf00      	nop
}
    5410:	bd80      	pop	{r7, pc}
    5412:	bf00      	nop

00005414 <readAccIRQConfig>:

static int readAccIRQConfig(void) {
    5414:	b580      	push	{r7, lr}
    5416:	b088      	sub	sp, #32
    5418:	af00      	add	r7, sp, #0
	u8_t wBuff[26]={0,0,0,0,0,0,0,0,0,0,
    541a:	463b      	mov	r3, r7
    541c:	f04f 0200 	mov.w	r2, #0
    5420:	601a      	str	r2, [r3, #0]
    5422:	f103 0304 	add.w	r3, r3, #4
    5426:	f04f 0200 	mov.w	r2, #0
    542a:	601a      	str	r2, [r3, #0]
    542c:	f103 0304 	add.w	r3, r3, #4
    5430:	f04f 0200 	mov.w	r2, #0
    5434:	601a      	str	r2, [r3, #0]
    5436:	f103 0304 	add.w	r3, r3, #4
    543a:	f04f 0200 	mov.w	r2, #0
    543e:	601a      	str	r2, [r3, #0]
    5440:	f103 0304 	add.w	r3, r3, #4
    5444:	f04f 0200 	mov.w	r2, #0
    5448:	601a      	str	r2, [r3, #0]
    544a:	f103 0304 	add.w	r3, r3, #4
    544e:	f04f 0200 	mov.w	r2, #0
    5452:	601a      	str	r2, [r3, #0]
    5454:	f103 0304 	add.w	r3, r3, #4
    5458:	f04f 0200 	mov.w	r2, #0
    545c:	801a      	strh	r2, [r3, #0]
    545e:	f103 0302 	add.w	r3, r3, #2
					0,0,0,0,0,0,0,0,0,0,
					0,0,0,0,0,0};
	int ret = 0;
    5462:	f04f 0300 	mov.w	r3, #0
    5466:	61fb      	str	r3, [r7, #28]

	wBuff[0] = ((1 << 7) | 0x16);  // command: read from register 16h onward
    5468:	f04f 0396 	mov.w	r3, #150	; 0x96
    546c:	703b      	strb	r3, [r7, #0]
	rwACC(wBuff, (u8_t*)&AccIRQConfig, 26);
    546e:	463b      	mov	r3, r7
    5470:	4618      	mov	r0, r3
    5472:	f640 2184 	movw	r1, #2692	; 0xa84
    5476:	f2c1 0100 	movt	r1, #4096	; 0x1000
    547a:	f04f 021a 	mov.w	r2, #26
    547e:	f000 f9f1 	bl	5864 <rwACC>

	return ret;
    5482:	69fb      	ldr	r3, [r7, #28]
}
    5484:	4618      	mov	r0, r3
    5486:	f107 0720 	add.w	r7, r7, #32
    548a:	46bd      	mov	sp, r7
    548c:	bd80      	pop	{r7, pc}
    548e:	bf00      	nop

00005490 <accFastCompensationX>:

static int accFastCompensationX(void) {
    5490:	b580      	push	{r7, lr}
    5492:	af00      	add	r7, sp, #0

	if (AccCalRdy())
    5494:	f7ff fa9e 	bl	49d4 <AccCalRdy>
    5498:	4603      	mov	r3, r0
    549a:	2b00      	cmp	r3, #0
    549c:	d002      	beq.n	54a4 <accFastCompensationX+0x14>
		return -1;
    549e:	f04f 33ff 	mov.w	r3, #4294967295
    54a2:	e007      	b.n	54b4 <accFastCompensationX+0x24>

	wAccReg(0x36, 0x20);
    54a4:	f04f 0036 	mov.w	r0, #54	; 0x36
    54a8:	f04f 0120 	mov.w	r1, #32
    54ac:	f000 f9be 	bl	582c <wAccReg>

	return 0;
    54b0:	f04f 0300 	mov.w	r3, #0
}
    54b4:	4618      	mov	r0, r3
    54b6:	bd80      	pop	{r7, pc}

000054b8 <accFastCompensationY>:

static int accFastCompensationY(void) {
    54b8:	b580      	push	{r7, lr}
    54ba:	af00      	add	r7, sp, #0

	if (AccCalRdy())
    54bc:	f7ff fa8a 	bl	49d4 <AccCalRdy>
    54c0:	4603      	mov	r3, r0
    54c2:	2b00      	cmp	r3, #0
    54c4:	d002      	beq.n	54cc <accFastCompensationY+0x14>
		return -1;
    54c6:	f04f 33ff 	mov.w	r3, #4294967295
    54ca:	e007      	b.n	54dc <accFastCompensationY+0x24>

	wAccReg(0x36, 0x40);
    54cc:	f04f 0036 	mov.w	r0, #54	; 0x36
    54d0:	f04f 0140 	mov.w	r1, #64	; 0x40
    54d4:	f000 f9aa 	bl	582c <wAccReg>

	return 0;
    54d8:	f04f 0300 	mov.w	r3, #0
}
    54dc:	4618      	mov	r0, r3
    54de:	bd80      	pop	{r7, pc}

000054e0 <accFastCompensationZ>:

static int accFastCompensationZ(void) {
    54e0:	b580      	push	{r7, lr}
    54e2:	af00      	add	r7, sp, #0
	
	if (AccCalRdy())
    54e4:	f7ff fa76 	bl	49d4 <AccCalRdy>
    54e8:	4603      	mov	r3, r0
    54ea:	2b00      	cmp	r3, #0
    54ec:	d002      	beq.n	54f4 <accFastCompensationZ+0x14>
		return -1;
    54ee:	f04f 33ff 	mov.w	r3, #4294967295
    54f2:	e007      	b.n	5504 <accFastCompensationZ+0x24>

	wAccReg(0x36, 0x60);
    54f4:	f04f 0036 	mov.w	r0, #54	; 0x36
    54f8:	f04f 0160 	mov.w	r1, #96	; 0x60
    54fc:	f000 f996 	bl	582c <wAccReg>

	return 0;
    5500:	f04f 0300 	mov.w	r3, #0
}
    5504:	4618      	mov	r0, r3
    5506:	bd80      	pop	{r7, pc}

00005508 <setAccCompensationTargets>:

static int setAccCompensationTargets(void) {
    5508:	b580      	push	{r7, lr}
    550a:	af00      	add	r7, sp, #0

	if (AccCalRdy())
    550c:	f7ff fa62 	bl	49d4 <AccCalRdy>
    5510:	4603      	mov	r3, r0
    5512:	2b00      	cmp	r3, #0
    5514:	d002      	beq.n	551c <setAccCompensationTargets+0x14>
		return -1;
    5516:	f04f 33ff 	mov.w	r3, #4294967295
    551a:	e008      	b.n	552e <setAccCompensationTargets+0x26>

	wAccReg(0x37, *((u8_t*) &(BMC050_AccCompensate.Reg_0x37)));
    551c:	4b05      	ldr	r3, [pc, #20]	; (5534 <setAccCompensationTargets+0x2c>)
    551e:	781b      	ldrb	r3, [r3, #0]
    5520:	f04f 0037 	mov.w	r0, #55	; 0x37
    5524:	4619      	mov	r1, r3
    5526:	f000 f981 	bl	582c <wAccReg>

	return 0;
    552a:	f04f 0300 	mov.w	r3, #0
}
    552e:	4618      	mov	r0, r3
    5530:	bd80      	pop	{r7, pc}
    5532:	bf00      	nop
    5534:	10000e76 	.word	0x10000e76

00005538 <readAccCompenstaionValues>:

static int readAccCompenstaionValues(void) {
    5538:	b580      	push	{r7, lr}
    553a:	b086      	sub	sp, #24
    553c:	af00      	add	r7, sp, #0
	u8_t wBuff[bufsize];

	wBuff[0] = ((1 << 7) | 0x36);  // command: read from register 36h onward
    553e:	f04f 03b6 	mov.w	r3, #182	; 0xb6
    5542:	713b      	strb	r3, [r7, #4]
	wBuff[1] = 0x00; // + 8 clocks for compensation configuration part I
    5544:	f04f 0300 	mov.w	r3, #0
    5548:	717b      	strb	r3, [r7, #5]
	wBuff[2] = 0x00; // + 8 clocks for compensation configuration part II
    554a:	f04f 0300 	mov.w	r3, #0
    554e:	71bb      	strb	r3, [r7, #6]
	wBuff[3] = 0x00; // + 8 clocks for compensation value for filtered data for the x-axis
    5550:	f04f 0300 	mov.w	r3, #0
    5554:	71fb      	strb	r3, [r7, #7]
	wBuff[4] = 0x00; // + 8 clocks for compensation value for filtered data for the y-axis.
    5556:	f04f 0300 	mov.w	r3, #0
    555a:	723b      	strb	r3, [r7, #8]
	wBuff[5] = 0x00; // + 8 clocks for compensation value for filtered data for the z-axis.
    555c:	f04f 0300 	mov.w	r3, #0
    5560:	727b      	strb	r3, [r7, #9]
	wBuff[6] = 0x00; // + 8 clocks for compensation value for unfiltered data for the x-axis.
    5562:	f04f 0300 	mov.w	r3, #0
    5566:	72bb      	strb	r3, [r7, #10]
	wBuff[7] = 0x00; // + 8 clocks for compensation value for unfiltered data for the y-axis.
    5568:	f04f 0300 	mov.w	r3, #0
    556c:	72fb      	strb	r3, [r7, #11]
	wBuff[8] = 0x00; // + 8 clocks for compensation value for unfiltered data for the z-axis.
    556e:	f04f 0300 	mov.w	r3, #0
    5572:	733b      	strb	r3, [r7, #12]
	rwACC(wBuff, (u8_t*)&BMC050_AccCompensate, 9);
    5574:	f107 0304 	add.w	r3, r7, #4
    5578:	4618      	mov	r0, r3
    557a:	f640 6174 	movw	r1, #3700	; 0xe74
    557e:	f2c1 0100 	movt	r1, #4096	; 0x1000
    5582:	f04f 0209 	mov.w	r2, #9
    5586:	f000 f96d 	bl	5864 <rwACC>

	return 0;
    558a:	f04f 0300 	mov.w	r3, #0
}
    558e:	4618      	mov	r0, r3
    5590:	f107 0718 	add.w	r7, r7, #24
    5594:	46bd      	mov	sp, r7
    5596:	bd80      	pop	{r7, pc}

00005598 <resetAccCompensationValues>:

static int resetAccCompensationValues(void) {
    5598:	b580      	push	{r7, lr}
    559a:	af00      	add	r7, sp, #0

	if (AccCalRdy())
    559c:	f7ff fa1a 	bl	49d4 <AccCalRdy>
    55a0:	4603      	mov	r3, r0
    55a2:	2b00      	cmp	r3, #0
    55a4:	d002      	beq.n	55ac <resetAccCompensationValues+0x14>
		return -1;
    55a6:	f04f 33ff 	mov.w	r3, #4294967295
    55aa:	e007      	b.n	55bc <resetAccCompensationValues+0x24>

	wAccReg(0x36, 0x80);
    55ac:	f04f 0036 	mov.w	r0, #54	; 0x36
    55b0:	f04f 0180 	mov.w	r1, #128	; 0x80
    55b4:	f000 f93a 	bl	582c <wAccReg>

	return 0;
    55b8:	f04f 0300 	mov.w	r3, #0
}
    55bc:	4618      	mov	r0, r3
    55be:	bd80      	pop	{r7, pc}

000055c0 <checkAccIRQ>:

static u8_t checkAccIRQ(void) {
    55c0:	b480      	push	{r7}
    55c2:	af00      	add	r7, sp, #0
	return((LPC_GPIO2->PIN>>5)&1);
    55c4:	f248 0340 	movw	r3, #32832	; 0x8040
    55c8:	f2c2 0309 	movt	r3, #8201	; 0x2009
    55cc:	695b      	ldr	r3, [r3, #20]
    55ce:	ea4f 1353 	mov.w	r3, r3, lsr #5
    55d2:	b2db      	uxtb	r3, r3
    55d4:	f003 0301 	and.w	r3, r3, #1
    55d8:	b2db      	uxtb	r3, r3
}
    55da:	4618      	mov	r0, r3
    55dc:	46bd      	mov	sp, r7
    55de:	bc80      	pop	{r7}
    55e0:	4770      	bx	lr
    55e2:	bf00      	nop

000055e4 <checkMagIRQ>:

static u8_t checkMagIRQ(void) {
    55e4:	b480      	push	{r7}
    55e6:	af00      	add	r7, sp, #0
	return ((LPC_GPIO2->PIN>>6)&1);
    55e8:	f248 0340 	movw	r3, #32832	; 0x8040
    55ec:	f2c2 0309 	movt	r3, #8201	; 0x2009
    55f0:	695b      	ldr	r3, [r3, #20]
    55f2:	ea4f 1393 	mov.w	r3, r3, lsr #6
    55f6:	b2db      	uxtb	r3, r3
    55f8:	f003 0301 	and.w	r3, r3, #1
    55fc:	b2db      	uxtb	r3, r3
}
    55fe:	4618      	mov	r0, r3
    5600:	46bd      	mov	sp, r7
    5602:	bc80      	pop	{r7}
    5604:	4770      	bx	lr
    5606:	bf00      	nop

00005608 <handleAccIRQ>:

static void handleAccIRQ(void) {
    5608:	b580      	push	{r7, lr}
    560a:	b088      	sub	sp, #32
    560c:	af00      	add	r7, sp, #0
	u8_t wBuff[bufsize];
	MEMS_BMC050_Acc_IRQ_Type irqReg;

	wBuff[0] = ((1 << 7) | 0x09);  // command: read from register 09h onward
    560e:	f04f 0389 	mov.w	r3, #137	; 0x89
    5612:	733b      	strb	r3, [r7, #12]
	wBuff[1] = 0x00; // + 8 clocks for IRQ part 1
    5614:	f04f 0300 	mov.w	r3, #0
    5618:	737b      	strb	r3, [r7, #13]
	wBuff[2] = 0x00; // + 8 clocks for IRQ part 2
    561a:	f04f 0300 	mov.w	r3, #0
    561e:	73bb      	strb	r3, [r7, #14]
	wBuff[3] = 0x00; // + 8 clocks for IRQ part 3
    5620:	f04f 0300 	mov.w	r3, #0
    5624:	73fb      	strb	r3, [r7, #15]
	wBuff[4] = 0x00; // + 8 clocks for IRQ part 4
    5626:	f04f 0300 	mov.w	r3, #0
    562a:	743b      	strb	r3, [r7, #16]
	rwACC(wBuff, (u8_t*)&irqReg, 5);
    562c:	f107 020c 	add.w	r2, r7, #12
    5630:	f107 0304 	add.w	r3, r7, #4
    5634:	4610      	mov	r0, r2
    5636:	4619      	mov	r1, r3
    5638:	f04f 0205 	mov.w	r2, #5
    563c:	f000 f912 	bl	5864 <rwACC>

	irqReg.Reg_0x09.reseved = 0;
    5640:	797b      	ldrb	r3, [r7, #5]
    5642:	f36f 03c3 	bfc	r3, #3, #1
    5646:	717b      	strb	r3, [r7, #5]
	irqReg.Reg_0x0A.reseved = 0;
    5648:	79bb      	ldrb	r3, [r7, #6]
    564a:	f36f 0306 	bfc	r3, #0, #7
    564e:	71bb      	strb	r3, [r7, #6]
	/**************************/
	/* handle interrupts here */
	/**************************/
	while (*((u8_t*)&irqReg.Reg_0x0A) != 0 || *((u8_t*)&irqReg.Reg_0x09) != 0) {
    5650:	e0c1      	b.n	57d6 <handleAccIRQ+0x1ce>
		irqReg.Reg_0x09.reseved = 0;
    5652:	797b      	ldrb	r3, [r7, #5]
    5654:	f36f 03c3 	bfc	r3, #3, #1
    5658:	717b      	strb	r3, [r7, #5]
		irqReg.Reg_0x0A.reseved = 0;
    565a:	79bb      	ldrb	r3, [r7, #6]
    565c:	f36f 0306 	bfc	r3, #0, #7
    5660:	71bb      	strb	r3, [r7, #6]

		if (irqReg.Reg_0x09.flat_int) {
    5662:	797b      	ldrb	r3, [r7, #5]
    5664:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
    5668:	b2db      	uxtb	r3, r3
    566a:	2b00      	cmp	r3, #0
    566c:	d01f      	beq.n	56ae <handleAccIRQ+0xa6>
			/* flat interrupt */
			if (irqReg.Reg_0x0C.orient_z){
    566e:	7a3b      	ldrb	r3, [r7, #8]
    5670:	f003 0340 	and.w	r3, r3, #64	; 0x40
    5674:	b2db      	uxtb	r3, r3
    5676:	2b00      	cmp	r3, #0
    5678:	d007      	beq.n	568a <handleAccIRQ+0x82>
				BMC050_Readings.orientation = flat_upside_down;
    567a:	f640 6348 	movw	r3, #3656	; 0xe48
    567e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5682:	f04f 0201 	mov.w	r2, #1
    5686:	741a      	strb	r2, [r3, #16]
    5688:	e006      	b.n	5698 <handleAccIRQ+0x90>
			}else{
				BMC050_Readings.orientation = flat;
    568a:	f640 6348 	movw	r3, #3656	; 0xe48
    568e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5692:	f04f 0200 	mov.w	r2, #0
    5696:	741a      	strb	r2, [r3, #16]
			}
			vertical_axis = Z_AXIS;
    5698:	f240 0300 	movw	r3, #0
    569c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    56a0:	f04f 0203 	mov.w	r2, #3
    56a4:	701a      	strb	r2, [r3, #0]
			irqReg.Reg_0x09.flat_int = 0;
    56a6:	797b      	ldrb	r3, [r7, #5]
    56a8:	f36f 13c7 	bfc	r3, #7, #1
    56ac:	717b      	strb	r3, [r7, #5]
		}

		if (irqReg.Reg_0x09.orient_int) {
    56ae:	797b      	ldrb	r3, [r7, #5]
    56b0:	f003 0340 	and.w	r3, r3, #64	; 0x40
    56b4:	b2db      	uxtb	r3, r3
    56b6:	2b00      	cmp	r3, #0
    56b8:	d051      	beq.n	575e <handleAccIRQ+0x156>
			/* orientation interrupt */
			switch (irqReg.Reg_0x0C.orient_xy) {
    56ba:	7a3b      	ldrb	r3, [r7, #8]
    56bc:	f3c3 1301 	ubfx	r3, r3, #4, #2
    56c0:	b2db      	uxtb	r3, r3
    56c2:	2b03      	cmp	r3, #3
    56c4:	d846      	bhi.n	5754 <handleAccIRQ+0x14c>
    56c6:	a201      	add	r2, pc, #4	; (adr r2, 56cc <handleAccIRQ+0xc4>)
    56c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
    56cc:	000056dd 	.word	0x000056dd
    56d0:	000056fb 	.word	0x000056fb
    56d4:	00005719 	.word	0x00005719
    56d8:	00005737 	.word	0x00005737
			case 0:
				/* portrait upright */
				BMC050_Readings.orientation = portrait_upside_down;
    56dc:	f640 6348 	movw	r3, #3656	; 0xe48
    56e0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    56e4:	f04f 0205 	mov.w	r2, #5
    56e8:	741a      	strb	r2, [r3, #16]
				vertical_axis = X_AXIS;
    56ea:	f240 0300 	movw	r3, #0
    56ee:	f2c1 0300 	movt	r3, #4096	; 0x1000
    56f2:	f04f 0201 	mov.w	r2, #1
    56f6:	701a      	strb	r2, [r3, #0]
				break;
    56f8:	e02d      	b.n	5756 <handleAccIRQ+0x14e>
			case 1:
				/* portrait upside down */
				BMC050_Readings.orientation = portrait;
    56fa:	f640 6348 	movw	r3, #3656	; 0xe48
    56fe:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5702:	f04f 0204 	mov.w	r2, #4
    5706:	741a      	strb	r2, [r3, #16]
				vertical_axis = X_AXIS;
    5708:	f240 0300 	movw	r3, #0
    570c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5710:	f04f 0201 	mov.w	r2, #1
    5714:	701a      	strb	r2, [r3, #0]
				break;
    5716:	e01e      	b.n	5756 <handleAccIRQ+0x14e>
			case 2:
				/* landscape left */
				BMC050_Readings.orientation = landscape_left;
    5718:	f640 6348 	movw	r3, #3656	; 0xe48
    571c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5720:	f04f 0202 	mov.w	r2, #2
    5724:	741a      	strb	r2, [r3, #16]
				vertical_axis = Y_AXIS;
    5726:	f240 0300 	movw	r3, #0
    572a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    572e:	f04f 0202 	mov.w	r2, #2
    5732:	701a      	strb	r2, [r3, #0]
				break;
    5734:	e00f      	b.n	5756 <handleAccIRQ+0x14e>
			case 3:
				/* landscape right */
				BMC050_Readings.orientation = landscape_right;
    5736:	f640 6348 	movw	r3, #3656	; 0xe48
    573a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    573e:	f04f 0203 	mov.w	r2, #3
    5742:	741a      	strb	r2, [r3, #16]
				vertical_axis = Y_AXIS;
    5744:	f240 0300 	movw	r3, #0
    5748:	f2c1 0300 	movt	r3, #4096	; 0x1000
    574c:	f04f 0202 	mov.w	r2, #2
    5750:	701a      	strb	r2, [r3, #0]
				break;
    5752:	e000      	b.n	5756 <handleAccIRQ+0x14e>
			default:
				break;
    5754:	bf00      	nop
			}

			irqReg.Reg_0x09.orient_int = 0;
    5756:	797b      	ldrb	r3, [r7, #5]
    5758:	f36f 1386 	bfc	r3, #6, #1
    575c:	717b      	strb	r3, [r7, #5]
		}

		if (irqReg.Reg_0x09.s_tap_int) {
    575e:	797b      	ldrb	r3, [r7, #5]
    5760:	f003 0320 	and.w	r3, r3, #32
    5764:	b2db      	uxtb	r3, r3
    5766:	2b00      	cmp	r3, #0
    5768:	d003      	beq.n	5772 <handleAccIRQ+0x16a>
			/* single tap interrupt */
			irqReg.Reg_0x09.s_tap_int = 0;
    576a:	797b      	ldrb	r3, [r7, #5]
    576c:	f36f 1345 	bfc	r3, #5, #1
    5770:	717b      	strb	r3, [r7, #5]
		}

		if (irqReg.Reg_0x09.d_tap_int) {
    5772:	797b      	ldrb	r3, [r7, #5]
    5774:	f003 0310 	and.w	r3, r3, #16
    5778:	b2db      	uxtb	r3, r3
    577a:	2b00      	cmp	r3, #0
    577c:	d003      	beq.n	5786 <handleAccIRQ+0x17e>
			/* double tap interrupt */
			irqReg.Reg_0x09.d_tap_int = 0;
    577e:	797b      	ldrb	r3, [r7, #5]
    5780:	f36f 1304 	bfc	r3, #4, #1
    5784:	717b      	strb	r3, [r7, #5]
		}

		if (irqReg.Reg_0x09.slope_int) {
    5786:	797b      	ldrb	r3, [r7, #5]
    5788:	f003 0304 	and.w	r3, r3, #4
    578c:	b2db      	uxtb	r3, r3
    578e:	2b00      	cmp	r3, #0
    5790:	d003      	beq.n	579a <handleAccIRQ+0x192>
			/* slope interrupt */
			irqReg.Reg_0x09.slope_int = 0;
    5792:	797b      	ldrb	r3, [r7, #5]
    5794:	f36f 0382 	bfc	r3, #2, #1
    5798:	717b      	strb	r3, [r7, #5]
		}

		if (irqReg.Reg_0x09.high_int) {
    579a:	797b      	ldrb	r3, [r7, #5]
    579c:	f003 0302 	and.w	r3, r3, #2
    57a0:	b2db      	uxtb	r3, r3
    57a2:	2b00      	cmp	r3, #0
    57a4:	d003      	beq.n	57ae <handleAccIRQ+0x1a6>
			/* high-g interrupt */
			irqReg.Reg_0x09.high_int = 0;
    57a6:	797b      	ldrb	r3, [r7, #5]
    57a8:	f36f 0341 	bfc	r3, #1, #1
    57ac:	717b      	strb	r3, [r7, #5]
		}

		if (irqReg.Reg_0x09.low_int) {
    57ae:	797b      	ldrb	r3, [r7, #5]
    57b0:	f003 0301 	and.w	r3, r3, #1
    57b4:	b2db      	uxtb	r3, r3
    57b6:	2b00      	cmp	r3, #0
    57b8:	d003      	beq.n	57c2 <handleAccIRQ+0x1ba>
			/* low-g interrupt */
			irqReg.Reg_0x09.low_int = 0;
    57ba:	797b      	ldrb	r3, [r7, #5]
    57bc:	f36f 0300 	bfc	r3, #0, #1
    57c0:	717b      	strb	r3, [r7, #5]
		}

		if (irqReg.Reg_0x0A.data_int) {
    57c2:	79bb      	ldrb	r3, [r7, #6]
    57c4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
    57c8:	b2db      	uxtb	r3, r3
    57ca:	2b00      	cmp	r3, #0
    57cc:	d003      	beq.n	57d6 <handleAccIRQ+0x1ce>
			/* new data interrupt */
			irqReg.Reg_0x0A.data_int = 0;
    57ce:	79bb      	ldrb	r3, [r7, #6]
    57d0:	f36f 13c7 	bfc	r3, #7, #1
    57d4:	71bb      	strb	r3, [r7, #6]
	irqReg.Reg_0x09.reseved = 0;
	irqReg.Reg_0x0A.reseved = 0;
	/**************************/
	/* handle interrupts here */
	/**************************/
	while (*((u8_t*)&irqReg.Reg_0x0A) != 0 || *((u8_t*)&irqReg.Reg_0x09) != 0) {
    57d6:	f107 0304 	add.w	r3, r7, #4
    57da:	f103 0302 	add.w	r3, r3, #2
    57de:	781b      	ldrb	r3, [r3, #0]
    57e0:	2b00      	cmp	r3, #0
    57e2:	f47f af36 	bne.w	5652 <handleAccIRQ+0x4a>
    57e6:	f107 0304 	add.w	r3, r7, #4
    57ea:	f103 0301 	add.w	r3, r3, #1
    57ee:	781b      	ldrb	r3, [r3, #0]
    57f0:	2b00      	cmp	r3, #0
    57f2:	f47f af2e 	bne.w	5652 <handleAccIRQ+0x4a>
			/* new data interrupt */
			irqReg.Reg_0x0A.data_int = 0;
		}
	}

	AccIRQConfig.Reg_0x21.reset_int = 1;
    57f6:	f640 2384 	movw	r3, #2692	; 0xa84
    57fa:	f2c1 0300 	movt	r3, #4096	; 0x1000
    57fe:	7b1a      	ldrb	r2, [r3, #12]
    5800:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    5804:	731a      	strb	r2, [r3, #12]
	wAccReg(0x21, *((u8_t*)&AccIRQConfig.Reg_0x21));
    5806:	4b05      	ldr	r3, [pc, #20]	; (581c <handleAccIRQ+0x214>)
    5808:	781b      	ldrb	r3, [r3, #0]
    580a:	f04f 0021 	mov.w	r0, #33	; 0x21
    580e:	4619      	mov	r1, r3
    5810:	f000 f80c 	bl	582c <wAccReg>
	
	return;
}
    5814:	f107 0720 	add.w	r7, r7, #32
    5818:	46bd      	mov	sp, r7
    581a:	bd80      	pop	{r7, pc}
    581c:	10000a90 	.word	0x10000a90

00005820 <handleMagIRQ>:

static void handleMagIRQ(void) {
    5820:	b480      	push	{r7}
    5822:	af00      	add	r7, sp, #0

	return;
    5824:	bf00      	nop
}
    5826:	46bd      	mov	sp, r7
    5828:	bc80      	pop	{r7}
    582a:	4770      	bx	lr

0000582c <wAccReg>:

// write single ACC register
static u8_t wAccReg(u8_t reg, u8_t val){
    582c:	b580      	push	{r7, lr}
    582e:	b084      	sub	sp, #16
    5830:	af00      	add	r7, sp, #0
    5832:	4602      	mov	r2, r0
    5834:	460b      	mov	r3, r1
    5836:	71fa      	strb	r2, [r7, #7]
    5838:	71bb      	strb	r3, [r7, #6]
	u8_t wbuff[2];
	u8_t rbuff[2];

	wbuff[0]=reg;
    583a:	79fb      	ldrb	r3, [r7, #7]
    583c:	733b      	strb	r3, [r7, #12]
	wbuff[1]=val;
    583e:	79bb      	ldrb	r3, [r7, #6]
    5840:	737b      	strb	r3, [r7, #13]
	return rwACC(wbuff, rbuff, 2);
    5842:	f107 020c 	add.w	r2, r7, #12
    5846:	f107 0308 	add.w	r3, r7, #8
    584a:	4610      	mov	r0, r2
    584c:	4619      	mov	r1, r3
    584e:	f04f 0202 	mov.w	r2, #2
    5852:	f000 f807 	bl	5864 <rwACC>
    5856:	4603      	mov	r3, r0
}
    5858:	4618      	mov	r0, r3
    585a:	f107 0710 	add.w	r7, r7, #16
    585e:	46bd      	mov	sp, r7
    5860:	bd80      	pop	{r7, pc}
    5862:	bf00      	nop

00005864 <rwACC>:

static u8_t rwACC(u8_t *p_wBuff, u8_t *p_rBuff, u8_t len){
    5864:	b580      	push	{r7, lr}
    5866:	b084      	sub	sp, #16
    5868:	af00      	add	r7, sp, #0
    586a:	60f8      	str	r0, [r7, #12]
    586c:	60b9      	str	r1, [r7, #8]
    586e:	4613      	mov	r3, r2
    5870:	71fb      	strb	r3, [r7, #7]
	//SSP_DATA_SETUP_Type SSPdata;

	//if(!p_rBuff)
	//	return 1;
	if(!p_wBuff)
    5872:	68fb      	ldr	r3, [r7, #12]
    5874:	2b00      	cmp	r3, #0
    5876:	d102      	bne.n	587e <rwACC+0x1a>
		return 1;
    5878:	f04f 0301 	mov.w	r3, #1
    587c:	e012      	b.n	58a4 <rwACC+0x40>
	if(!len)
    587e:	79fb      	ldrb	r3, [r7, #7]
    5880:	2b00      	cmp	r3, #0
    5882:	d102      	bne.n	588a <rwACC+0x26>
		return 1;
    5884:	f04f 0301 	mov.w	r3, #1
    5888:	e00c      	b.n	58a4 <rwACC+0x40>

	HW_BMC_CsAccelerationOn();
    588a:	f002 fb57 	bl	7f3c <HW_BMC_CsAccelerationOn>
	SSP_ReadWrite(SSP_2, p_rBuff, p_wBuff,len);
    588e:	79fb      	ldrb	r3, [r7, #7]
    5890:	f04f 0001 	mov.w	r0, #1
    5894:	68b9      	ldr	r1, [r7, #8]
    5896:	68fa      	ldr	r2, [r7, #12]
    5898:	f000 fd80 	bl	639c <SSP_ReadWrite>
	HW_BMC_CsAccelerationOff();
    589c:	f002 fb60 	bl	7f60 <HW_BMC_CsAccelerationOff>

	return 0;
    58a0:	f04f 0300 	mov.w	r3, #0
}
    58a4:	4618      	mov	r0, r3
    58a6:	f107 0710 	add.w	r7, r7, #16
    58aa:	46bd      	mov	sp, r7
    58ac:	bd80      	pop	{r7, pc}
    58ae:	bf00      	nop

000058b0 <wMagReg>:

// write single magnetometer register
static u8_t wMagReg(u8_t reg, u8_t val){
    58b0:	b580      	push	{r7, lr}
    58b2:	b084      	sub	sp, #16
    58b4:	af00      	add	r7, sp, #0
    58b6:	4602      	mov	r2, r0
    58b8:	460b      	mov	r3, r1
    58ba:	71fa      	strb	r2, [r7, #7]
    58bc:	71bb      	strb	r3, [r7, #6]
	u8_t wbuff[2];
	u8_t rbuff[2];

	wbuff[0]=reg;
    58be:	79fb      	ldrb	r3, [r7, #7]
    58c0:	733b      	strb	r3, [r7, #12]
	wbuff[1]=val;
    58c2:	79bb      	ldrb	r3, [r7, #6]
    58c4:	737b      	strb	r3, [r7, #13]
	return rwMAG(wbuff, rbuff, 2);
    58c6:	f107 020c 	add.w	r2, r7, #12
    58ca:	f107 0308 	add.w	r3, r7, #8
    58ce:	4610      	mov	r0, r2
    58d0:	4619      	mov	r1, r3
    58d2:	f04f 0202 	mov.w	r2, #2
    58d6:	f000 f835 	bl	5944 <rwMAG>
    58da:	4603      	mov	r3, r0
}
    58dc:	4618      	mov	r0, r3
    58de:	f107 0710 	add.w	r7, r7, #16
    58e2:	46bd      	mov	sp, r7
    58e4:	bd80      	pop	{r7, pc}
    58e6:	bf00      	nop

000058e8 <rMagReg>:

// read single magnetometer register
static u8_t rMagReg(u8_t reg, u8_t *p_val){
    58e8:	b580      	push	{r7, lr}
    58ea:	b084      	sub	sp, #16
    58ec:	af00      	add	r7, sp, #0
    58ee:	4603      	mov	r3, r0
    58f0:	6039      	str	r1, [r7, #0]
    58f2:	71fb      	strb	r3, [r7, #7]
	u8_t wbuff[2];
	u8_t rbuff[2];

	if(!p_val)
    58f4:	683b      	ldr	r3, [r7, #0]
    58f6:	2b00      	cmp	r3, #0
    58f8:	d102      	bne.n	5900 <rMagReg+0x18>
		return 1;
    58fa:	f04f 0301 	mov.w	r3, #1
    58fe:	e01c      	b.n	593a <rMagReg+0x52>

	wbuff[0]=reg | 1<<7;
    5900:	79fb      	ldrb	r3, [r7, #7]
    5902:	f063 037f 	orn	r3, r3, #127	; 0x7f
    5906:	b2db      	uxtb	r3, r3
    5908:	733b      	strb	r3, [r7, #12]
	wbuff[1]=0x00;
    590a:	f04f 0300 	mov.w	r3, #0
    590e:	737b      	strb	r3, [r7, #13]

	if(rwMAG(wbuff, rbuff, 2)!=0)
    5910:	f107 020c 	add.w	r2, r7, #12
    5914:	f107 0308 	add.w	r3, r7, #8
    5918:	4610      	mov	r0, r2
    591a:	4619      	mov	r1, r3
    591c:	f04f 0202 	mov.w	r2, #2
    5920:	f000 f810 	bl	5944 <rwMAG>
    5924:	4603      	mov	r3, r0
    5926:	2b00      	cmp	r3, #0
    5928:	d002      	beq.n	5930 <rMagReg+0x48>
		return 1;
    592a:	f04f 0301 	mov.w	r3, #1
    592e:	e004      	b.n	593a <rMagReg+0x52>

	*p_val=rbuff[1];
    5930:	7a7a      	ldrb	r2, [r7, #9]
    5932:	683b      	ldr	r3, [r7, #0]
    5934:	701a      	strb	r2, [r3, #0]

	return 0;
    5936:	f04f 0300 	mov.w	r3, #0
}
    593a:	4618      	mov	r0, r3
    593c:	f107 0710 	add.w	r7, r7, #16
    5940:	46bd      	mov	sp, r7
    5942:	bd80      	pop	{r7, pc}

00005944 <rwMAG>:

static u8_t rwMAG(u8_t *p_wBuff, u8_t *p_rBuff, u8_t len){
    5944:	b580      	push	{r7, lr}
    5946:	b084      	sub	sp, #16
    5948:	af00      	add	r7, sp, #0
    594a:	60f8      	str	r0, [r7, #12]
    594c:	60b9      	str	r1, [r7, #8]
    594e:	4613      	mov	r3, r2
    5950:	71fb      	strb	r3, [r7, #7]
	//SSP_DATA_SETUP_Type SSPdata;

	//if(!p_rBuff)
	//	return 1;
	if(!p_wBuff)
    5952:	68fb      	ldr	r3, [r7, #12]
    5954:	2b00      	cmp	r3, #0
    5956:	d102      	bne.n	595e <rwMAG+0x1a>
		return 1;
    5958:	f04f 0301 	mov.w	r3, #1
    595c:	e012      	b.n	5984 <rwMAG+0x40>
	if(!len)
    595e:	79fb      	ldrb	r3, [r7, #7]
    5960:	2b00      	cmp	r3, #0
    5962:	d102      	bne.n	596a <rwMAG+0x26>
		return 1;
    5964:	f04f 0301 	mov.w	r3, #1
    5968:	e00c      	b.n	5984 <rwMAG+0x40>

	HW_BMC_CsMagnetometerOn();
    596a:	f002 fb0b 	bl	7f84 <HW_BMC_CsMagnetometerOn>
	SSP_ReadWrite(SSP_2, p_rBuff, p_wBuff,len);
    596e:	79fb      	ldrb	r3, [r7, #7]
    5970:	f04f 0001 	mov.w	r0, #1
    5974:	68b9      	ldr	r1, [r7, #8]
    5976:	68fa      	ldr	r2, [r7, #12]
    5978:	f000 fd10 	bl	639c <SSP_ReadWrite>
	HW_BMC_CsMagnetometerOff();
    597c:	f002 fb14 	bl	7fa8 <HW_BMC_CsMagnetometerOff>

	return 0;
    5980:	f04f 0300 	mov.w	r3, #0
}
    5984:	4618      	mov	r0, r3
    5986:	f107 0710 	add.w	r7, r7, #16
    598a:	46bd      	mov	sp, r7
    598c:	bd80      	pop	{r7, pc}
    598e:	bf00      	nop

00005990 <MEMS_L3GD20_init>:
//! @brief	initializes L3GD20 sensor with default settings. If not done yet SSP
//!			port is also initialized
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
HWStatus_t MEMS_L3GD20_init(void){
    5990:	b580      	push	{r7, lr}
    5992:	af00      	add	r7, sp, #0

	if(!ssp_init){
    5994:	f640 23e8 	movw	r3, #2792	; 0xae8
    5998:	f2c1 0300 	movt	r3, #4096	; 0x1000
    599c:	781b      	ldrb	r3, [r3, #0]
    599e:	2b00      	cmp	r3, #0
    59a0:	d107      	bne.n	59b2 <MEMS_L3GD20_init+0x22>
		if(initSSP() != HW_ERR_OK)
    59a2:	f000 f9b7 	bl	5d14 <initSSP>
    59a6:	4603      	mov	r3, r0
    59a8:	2b00      	cmp	r3, #0
    59aa:	d002      	beq.n	59b2 <MEMS_L3GD20_init+0x22>
			return HW_ERR_RESOURCE;
    59ac:	f04f 0302 	mov.w	r3, #2
    59b0:	e109      	b.n	5bc6 <MEMS_L3GD20_init+0x236>
	}

	if(!data_init)
    59b2:	f640 23e9 	movw	r3, #2793	; 0xae9
    59b6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    59ba:	781b      	ldrb	r3, [r3, #0]
    59bc:	2b00      	cmp	r3, #0
    59be:	d101      	bne.n	59c4 <MEMS_L3GD20_init+0x34>
		initData();
    59c0:	f000 f9e4 	bl	5d8c <initData>

	// prepare write command to write from register 20h onward
	ConfRegs.dummy = L3GD20_WR | L3GD20_ADDR_INC | 0x20;
    59c4:	f640 23c4 	movw	r3, #2756	; 0xac4
    59c8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    59cc:	f04f 0260 	mov.w	r2, #96	; 0x60
    59d0:	701a      	strb	r2, [r3, #0]

	// enable all axis, set ~power down, set cut-off 50 output data rate 380Hz
	ConfRegs.Reg_0x20.Xen = 1;
    59d2:	f640 23c4 	movw	r3, #2756	; 0xac4
    59d6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    59da:	785a      	ldrb	r2, [r3, #1]
    59dc:	f042 0201 	orr.w	r2, r2, #1
    59e0:	705a      	strb	r2, [r3, #1]
	ConfRegs.Reg_0x20.Yen = 1;
    59e2:	f640 23c4 	movw	r3, #2756	; 0xac4
    59e6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    59ea:	785a      	ldrb	r2, [r3, #1]
    59ec:	f042 0202 	orr.w	r2, r2, #2
    59f0:	705a      	strb	r2, [r3, #1]
	ConfRegs.Reg_0x20.Zen = 1;
    59f2:	f640 23c4 	movw	r3, #2756	; 0xac4
    59f6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    59fa:	785a      	ldrb	r2, [r3, #1]
    59fc:	f042 0204 	orr.w	r2, r2, #4
    5a00:	705a      	strb	r2, [r3, #1]
	ConfRegs.Reg_0x20.pd = 1;
    5a02:	f640 23c4 	movw	r3, #2756	; 0xac4
    5a06:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5a0a:	785a      	ldrb	r2, [r3, #1]
    5a0c:	f042 0208 	orr.w	r2, r2, #8
    5a10:	705a      	strb	r2, [r3, #1]
	ConfRegs.Reg_0x20.bw = 2;
    5a12:	f640 23c4 	movw	r3, #2756	; 0xac4
    5a16:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5a1a:	785a      	ldrb	r2, [r3, #1]
    5a1c:	f04f 0102 	mov.w	r1, #2
    5a20:	f361 1205 	bfi	r2, r1, #4, #2
    5a24:	705a      	strb	r2, [r3, #1]
	ConfRegs.Reg_0x20.dr = 2;
    5a26:	f640 23c4 	movw	r3, #2756	; 0xac4
    5a2a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5a2e:	785a      	ldrb	r2, [r3, #1]
    5a30:	f04f 0102 	mov.w	r1, #2
    5a34:	f361 1287 	bfi	r2, r1, #6, #2
    5a38:	705a      	strb	r2, [r3, #1]

	// disable high pass filter
	ConfRegs.Reg_0x21.hpcf = 0;
    5a3a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5a3e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5a42:	789a      	ldrb	r2, [r3, #2]
    5a44:	f36f 0203 	bfc	r2, #0, #4
    5a48:	709a      	strb	r2, [r3, #2]
	ConfRegs.Reg_0x21.hpm = 0;
    5a4a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5a4e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5a52:	789a      	ldrb	r2, [r3, #2]
    5a54:	f36f 1205 	bfc	r2, #4, #2
    5a58:	709a      	strb	r2, [r3, #2]
	ConfRegs.Reg_0x21.reserved = 0;
    5a5a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5a5e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5a62:	789a      	ldrb	r2, [r3, #2]
    5a64:	f36f 1287 	bfc	r2, #6, #2
    5a68:	709a      	strb	r2, [r3, #2]

	// disable interrupts
	ConfRegs.Reg_0x22.h_lactive = 0;
    5a6a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5a6e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5a72:	78da      	ldrb	r2, [r3, #3]
    5a74:	f36f 1245 	bfc	r2, #5, #1
    5a78:	70da      	strb	r2, [r3, #3]
	ConfRegs.Reg_0x22.i1_boot = 0;
    5a7a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5a7e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5a82:	78da      	ldrb	r2, [r3, #3]
    5a84:	f36f 1286 	bfc	r2, #6, #1
    5a88:	70da      	strb	r2, [r3, #3]
	ConfRegs.Reg_0x22.i1_int1 = 0;
    5a8a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5a8e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5a92:	78da      	ldrb	r2, [r3, #3]
    5a94:	f36f 12c7 	bfc	r2, #7, #1
    5a98:	70da      	strb	r2, [r3, #3]
	ConfRegs.Reg_0x22.i2_drdy = 0;
    5a9a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5a9e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5aa2:	78da      	ldrb	r2, [r3, #3]
    5aa4:	f36f 02c3 	bfc	r2, #3, #1
    5aa8:	70da      	strb	r2, [r3, #3]
	ConfRegs.Reg_0x22.i2_empty = 0;
    5aaa:	f640 23c4 	movw	r3, #2756	; 0xac4
    5aae:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5ab2:	78da      	ldrb	r2, [r3, #3]
    5ab4:	f36f 0200 	bfc	r2, #0, #1
    5ab8:	70da      	strb	r2, [r3, #3]
	ConfRegs.Reg_0x22.i2_orun = 0;
    5aba:	f640 23c4 	movw	r3, #2756	; 0xac4
    5abe:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5ac2:	78da      	ldrb	r2, [r3, #3]
    5ac4:	f36f 0241 	bfc	r2, #1, #1
    5ac8:	70da      	strb	r2, [r3, #3]
	ConfRegs.Reg_0x22.i2_wtm = 0;
    5aca:	f640 23c4 	movw	r3, #2756	; 0xac4
    5ace:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5ad2:	78da      	ldrb	r2, [r3, #3]
    5ad4:	f36f 0282 	bfc	r2, #2, #1
    5ad8:	70da      	strb	r2, [r3, #3]
	ConfRegs.Reg_0x22.pp_od = 0;
    5ada:	f640 23c4 	movw	r3, #2756	; 0xac4
    5ade:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5ae2:	78da      	ldrb	r2, [r3, #3]
    5ae4:	f36f 1204 	bfc	r2, #4, #1
    5ae8:	70da      	strb	r2, [r3, #3]

	// set block data update
	ConfRegs.Reg_0x23.bdu = 1;
    5aea:	f640 23c4 	movw	r3, #2756	; 0xac4
    5aee:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5af2:	791a      	ldrb	r2, [r3, #4]
    5af4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    5af8:	711a      	strb	r2, [r3, #4]
	ConfRegs.Reg_0x23.ble = 0;
    5afa:	f640 23c4 	movw	r3, #2756	; 0xac4
    5afe:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5b02:	791a      	ldrb	r2, [r3, #4]
    5b04:	f36f 1286 	bfc	r2, #6, #1
    5b08:	711a      	strb	r2, [r3, #4]
	ConfRegs.Reg_0x23.fs = 0;
    5b0a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5b0e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5b12:	791a      	ldrb	r2, [r3, #4]
    5b14:	f36f 1205 	bfc	r2, #4, #2
    5b18:	711a      	strb	r2, [r3, #4]
	ConfRegs.Reg_0x23.reserved = 0;
    5b1a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5b1e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5b22:	791a      	ldrb	r2, [r3, #4]
    5b24:	f36f 0243 	bfc	r2, #1, #3
    5b28:	711a      	strb	r2, [r3, #4]
	ConfRegs.Reg_0x23.sim = 0;
    5b2a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5b2e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5b32:	791a      	ldrb	r2, [r3, #4]
    5b34:	f36f 0200 	bfc	r2, #0, #1
    5b38:	711a      	strb	r2, [r3, #4]

	// enable fifo, set boot = 1
	ConfRegs.Reg_0x24.boot = 1;
    5b3a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5b3e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5b42:	795a      	ldrb	r2, [r3, #5]
    5b44:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    5b48:	715a      	strb	r2, [r3, #5]
	ConfRegs.Reg_0x24.fifo_en = 0;
    5b4a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5b4e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5b52:	795a      	ldrb	r2, [r3, #5]
    5b54:	f36f 1286 	bfc	r2, #6, #1
    5b58:	715a      	strb	r2, [r3, #5]
	ConfRegs.Reg_0x24.hpen = 0;
    5b5a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5b5e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5b62:	795a      	ldrb	r2, [r3, #5]
    5b64:	f36f 1204 	bfc	r2, #4, #1
    5b68:	715a      	strb	r2, [r3, #5]
	ConfRegs.Reg_0x24.int_sel = 0;
    5b6a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5b6e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5b72:	795a      	ldrb	r2, [r3, #5]
    5b74:	f36f 0283 	bfc	r2, #2, #2
    5b78:	715a      	strb	r2, [r3, #5]
	ConfRegs.Reg_0x24.out_sel = 0;
    5b7a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5b7e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5b82:	795a      	ldrb	r2, [r3, #5]
    5b84:	f36f 0201 	bfc	r2, #0, #2
    5b88:	715a      	strb	r2, [r3, #5]
	ConfRegs.Reg_0x24.reserved = 0;
    5b8a:	f640 23c4 	movw	r3, #2756	; 0xac4
    5b8e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5b92:	795a      	ldrb	r2, [r3, #5]
    5b94:	f36f 1245 	bfc	r2, #5, #1
    5b98:	715a      	strb	r2, [r3, #5]

	rwL3GD20((u8_t*)&ConfRegs, NULL, 6);
    5b9a:	f640 20c4 	movw	r0, #2756	; 0xac4
    5b9e:	f2c1 0000 	movt	r0, #4096	; 0x1000
    5ba2:	f04f 0100 	mov.w	r1, #0
    5ba6:	f04f 0206 	mov.w	r2, #6
    5baa:	f000 f993 	bl	5ed4 <rwL3GD20>

	// write FIFO register
	wL3GD20Reg(0x2E, 0);
    5bae:	f04f 002e 	mov.w	r0, #46	; 0x2e
    5bb2:	f04f 0100 	mov.w	r1, #0
    5bb6:	f000 f9b3 	bl	5f20 <wL3GD20Reg>

	Wait_Usec(2000);
    5bba:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
    5bbe:	f7fc ff21 	bl	2a04 <Wait_Usec>

	return HW_ERR_OK;
    5bc2:	f04f 0300 	mov.w	r3, #0
}
    5bc6:	4618      	mov	r0, r3
    5bc8:	bd80      	pop	{r7, pc}
    5bca:	bf00      	nop

00005bcc <MEMS_L3GD20_task>:
//------------------------------------------------------------------------------
//! @brief	Gyroscope main task. Reads data from sensor, processes it and writes
//!			results to the according data structure.
//!			Should be called as often as possible.
//------------------------------------------------------------------------------
void MEMS_L3GD20_task(void){
    5bcc:	b580      	push	{r7, lr}
    5bce:	af00      	add	r7, sp, #0

	switch (L3GD20State) {
    5bd0:	f640 23c0 	movw	r3, #2752	; 0xac0
    5bd4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5bd8:	781b      	ldrb	r3, [r3, #0]
    5bda:	2b01      	cmp	r3, #1
    5bdc:	d013      	beq.n	5c06 <MEMS_L3GD20_task+0x3a>
    5bde:	2b02      	cmp	r3, #2
    5be0:	d025      	beq.n	5c2e <MEMS_L3GD20_task+0x62>
    5be2:	2b00      	cmp	r3, #0
    5be4:	d139      	bne.n	5c5a <MEMS_L3GD20_task+0x8e>
	case readGyroDevID:
		rL3GD20Reg(0x0F, &L3GD20_Readings.GyroDevID);
    5be6:	f04f 000f 	mov.w	r0, #15
    5bea:	f640 6180 	movw	r1, #3712	; 0xe80
    5bee:	f2c1 0100 	movt	r1, #4096	; 0x1000
    5bf2:	f000 f9b1 	bl	5f58 <rL3GD20Reg>
		L3GD20State = readGyroData;
    5bf6:	f640 23c0 	movw	r3, #2752	; 0xac0
    5bfa:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5bfe:	f04f 0201 	mov.w	r2, #1
    5c02:	701a      	strb	r2, [r3, #0]
		break;
    5c04:	e02a      	b.n	5c5c <MEMS_L3GD20_task+0x90>
	case readGyroData:
		rwL3GD20(wBuff_GyroData, (u8_t*)&DataRegs, 10);
    5c06:	f640 20d8 	movw	r0, #2776	; 0xad8
    5c0a:	f2c1 0000 	movt	r0, #4096	; 0x1000
    5c0e:	f640 21cc 	movw	r1, #2764	; 0xacc
    5c12:	f2c1 0100 	movt	r1, #4096	; 0x1000
    5c16:	f04f 020a 	mov.w	r2, #10
    5c1a:	f000 f95b 	bl	5ed4 <rwL3GD20>
		L3GD20State = processResults;
    5c1e:	f640 23c0 	movw	r3, #2752	; 0xac0
    5c22:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5c26:	f04f 0202 	mov.w	r2, #2
    5c2a:	701a      	strb	r2, [r3, #0]
		break;
    5c2c:	e016      	b.n	5c5c <MEMS_L3GD20_task+0x90>
	case processResults:
		prcRawValues(&DataRegs, &ConfRegs ,&L3GD20_Readings);
    5c2e:	f640 20cc 	movw	r0, #2764	; 0xacc
    5c32:	f2c1 0000 	movt	r0, #4096	; 0x1000
    5c36:	f640 21c4 	movw	r1, #2756	; 0xac4
    5c3a:	f2c1 0100 	movt	r1, #4096	; 0x1000
    5c3e:	f640 6280 	movw	r2, #3712	; 0xe80
    5c42:	f2c1 0200 	movt	r2, #4096	; 0x1000
    5c46:	f000 f8fb 	bl	5e40 <prcRawValues>
		//! switch to next state after whole data reading/processing cycle
		L3GD20State = readGyroData;
    5c4a:	f640 23c0 	movw	r3, #2752	; 0xac0
    5c4e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5c52:	f04f 0201 	mov.w	r2, #1
    5c56:	701a      	strb	r2, [r3, #0]
		break;
    5c58:	e000      	b.n	5c5c <MEMS_L3GD20_task+0x90>
	default:
		break;
    5c5a:	bf00      	nop
		//-------------------------
	}

} // MEMS_L3GD20_task
    5c5c:	bd80      	pop	{r7, pc}
    5c5e:	bf00      	nop

00005c60 <MEMS_L3GD20_SetRange>:
//! @param	range	range to use (0=250[dps]; 1=500[dps]; 2=2000[dps];
//!					3=2000[dps])
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
HWStatus_t MEMS_L3GD20_SetRange(u8_t range){
    5c60:	b580      	push	{r7, lr}
    5c62:	b084      	sub	sp, #16
    5c64:	af00      	add	r7, sp, #0
    5c66:	4603      	mov	r3, r0
    5c68:	71fb      	strb	r3, [r7, #7]
	u8_t wBuff[2];
	u8_t rBuff[2];

	if(range>3)
    5c6a:	79fb      	ldrb	r3, [r7, #7]
    5c6c:	2b03      	cmp	r3, #3
    5c6e:	d902      	bls.n	5c76 <MEMS_L3GD20_SetRange+0x16>
		return HW_ERR_ILLPARAMVAL;
    5c70:	f04f 0301 	mov.w	r3, #1
    5c74:	e01d      	b.n	5cb2 <MEMS_L3GD20_SetRange+0x52>

	ConfRegs.Reg_0x23.fs = range;
    5c76:	79fb      	ldrb	r3, [r7, #7]
    5c78:	f003 0303 	and.w	r3, r3, #3
    5c7c:	b2d9      	uxtb	r1, r3
    5c7e:	f640 23c4 	movw	r3, #2756	; 0xac4
    5c82:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5c86:	791a      	ldrb	r2, [r3, #4]
    5c88:	f361 1205 	bfi	r2, r1, #4, #2
    5c8c:	711a      	strb	r2, [r3, #4]

	wBuff[0] = L3GD20_WR | 0x23; // write register 23h
    5c8e:	f04f 0323 	mov.w	r3, #35	; 0x23
    5c92:	733b      	strb	r3, [r7, #12]
	wBuff[1] = *((u8_t*)&ConfRegs.Reg_0x23);
    5c94:	4b09      	ldr	r3, [pc, #36]	; (5cbc <MEMS_L3GD20_SetRange+0x5c>)
    5c96:	781b      	ldrb	r3, [r3, #0]
    5c98:	737b      	strb	r3, [r7, #13]

	rwL3GD20(wBuff, rBuff, 2);
    5c9a:	f107 020c 	add.w	r2, r7, #12
    5c9e:	f107 0308 	add.w	r3, r7, #8
    5ca2:	4610      	mov	r0, r2
    5ca4:	4619      	mov	r1, r3
    5ca6:	f04f 0202 	mov.w	r2, #2
    5caa:	f000 f913 	bl	5ed4 <rwL3GD20>
		
	return HW_ERR_OK;
    5cae:	f04f 0300 	mov.w	r3, #0
}
    5cb2:	4618      	mov	r0, r3
    5cb4:	f107 0710 	add.w	r7, r7, #16
    5cb8:	46bd      	mov	sp, r7
    5cba:	bd80      	pop	{r7, pc}
    5cbc:	10000ac8 	.word	0x10000ac8

00005cc0 <MEMS_L3GD20_GetRange>:
//! @param	p_val	pointer to buffer for the result
//!					(0=250[dps]; 1=500[dps]; 2=2000[dps]; 3=2000[dps])
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
HWStatus_t MEMS_L3GD20_GetRange(u8_t *p_val){
    5cc0:	b580      	push	{r7, lr}
    5cc2:	b084      	sub	sp, #16
    5cc4:	af00      	add	r7, sp, #0
    5cc6:	6078      	str	r0, [r7, #4]
	HWStatus_t res;

	if(!p_val)
    5cc8:	687b      	ldr	r3, [r7, #4]
    5cca:	2b00      	cmp	r3, #0
    5ccc:	d102      	bne.n	5cd4 <MEMS_L3GD20_GetRange+0x14>
		return HW_ERR_ILLPARAMVAL;
    5cce:	f04f 0301 	mov.w	r3, #1
    5cd2:	e017      	b.n	5d04 <MEMS_L3GD20_GetRange+0x44>

	res = rL3GD20Reg(0x23, (u8_t*)&ConfRegs.Reg_0x23);
    5cd4:	f04f 0023 	mov.w	r0, #35	; 0x23
    5cd8:	490d      	ldr	r1, [pc, #52]	; (5d10 <MEMS_L3GD20_GetRange+0x50>)
    5cda:	f000 f93d 	bl	5f58 <rL3GD20Reg>
    5cde:	60f8      	str	r0, [r7, #12]
	if(res != HW_ERR_OK)
    5ce0:	68fb      	ldr	r3, [r7, #12]
    5ce2:	2b00      	cmp	r3, #0
    5ce4:	d001      	beq.n	5cea <MEMS_L3GD20_GetRange+0x2a>
		return res;
    5ce6:	68fb      	ldr	r3, [r7, #12]
    5ce8:	e00c      	b.n	5d04 <MEMS_L3GD20_GetRange+0x44>

	*p_val = ConfRegs.Reg_0x23.fs;
    5cea:	f640 23c4 	movw	r3, #2756	; 0xac4
    5cee:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5cf2:	791b      	ldrb	r3, [r3, #4]
    5cf4:	f3c3 1301 	ubfx	r3, r3, #4, #2
    5cf8:	b2db      	uxtb	r3, r3
    5cfa:	461a      	mov	r2, r3
    5cfc:	687b      	ldr	r3, [r7, #4]
    5cfe:	701a      	strb	r2, [r3, #0]

	return HW_ERR_OK;
    5d00:	f04f 0300 	mov.w	r3, #0
}
    5d04:	4618      	mov	r0, r3
    5d06:	f107 0710 	add.w	r7, r7, #16
    5d0a:	46bd      	mov	sp, r7
    5d0c:	bd80      	pop	{r7, pc}
    5d0e:	bf00      	nop
    5d10:	10000ac8 	.word	0x10000ac8

00005d14 <initSSP>:
//------------------------------------------------------------------------------
//! @brief	initializes SSP for Gyroscope usage
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
static HWStatus_t initSSP(void){
    5d14:	b580      	push	{r7, lr}
    5d16:	b084      	sub	sp, #16
    5d18:	af00      	add	r7, sp, #0
	SSPInit_t init;
	SSPStatus_t res=0;
    5d1a:	f04f 0300 	mov.w	r3, #0
    5d1e:	60fb      	str	r3, [r7, #12]

	init.bitlen = t8_bit;
    5d20:	f04f 0307 	mov.w	r3, #7
    5d24:	703b      	strb	r3, [r7, #0]
	init.clk_phase = 1;
    5d26:	f04f 0301 	mov.w	r3, #1
    5d2a:	707b      	strb	r3, [r7, #1]
	init.clk_pol = 1;
    5d2c:	f04f 0301 	mov.w	r3, #1
    5d30:	70bb      	strb	r3, [r7, #2]
	init.mode = 0;
    5d32:	f04f 0300 	mov.w	r3, #0
    5d36:	71fb      	strb	r3, [r7, #7]
	init.frm_format = 0;
    5d38:	f04f 0300 	mov.w	r3, #0
    5d3c:	70fb      	strb	r3, [r7, #3]
	init.loop_back=0;
    5d3e:	f04f 0300 	mov.w	r3, #0
    5d42:	717b      	strb	r3, [r7, #5]

	init.ser_clk_rate = 0; 		//! 1 clocks per bit
    5d44:	f04f 0300 	mov.w	r3, #0
    5d48:	713b      	strb	r3, [r7, #4]
	init.clk_prescaler = 12;
    5d4a:	f04f 030c 	mov.w	r3, #12
    5d4e:	723b      	strb	r3, [r7, #8]

	init.enable=1;
    5d50:	f04f 0301 	mov.w	r3, #1
    5d54:	71bb      	strb	r3, [r7, #6]

	res = SSP_Init(SSP_1, &init);
    5d56:	463b      	mov	r3, r7
    5d58:	f04f 0000 	mov.w	r0, #0
    5d5c:	4619      	mov	r1, r3
    5d5e:	f000 fa37 	bl	61d0 <SSP_Init>
    5d62:	60f8      	str	r0, [r7, #12]

	if(res != SSP_ERR_OK)
    5d64:	68fb      	ldr	r3, [r7, #12]
    5d66:	2b00      	cmp	r3, #0
    5d68:	d002      	beq.n	5d70 <initSSP+0x5c>
		return HW_ERR_RESOURCE;
    5d6a:	f04f 0302 	mov.w	r3, #2
    5d6e:	e008      	b.n	5d82 <initSSP+0x6e>

	ssp_init=1;
    5d70:	f640 23e8 	movw	r3, #2792	; 0xae8
    5d74:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5d78:	f04f 0201 	mov.w	r2, #1
    5d7c:	701a      	strb	r2, [r3, #0]

	return HW_ERR_OK;
    5d7e:	f04f 0300 	mov.w	r3, #0
}
    5d82:	4618      	mov	r0, r3
    5d84:	f107 0710 	add.w	r7, r7, #16
    5d88:	46bd      	mov	sp, r7
    5d8a:	bd80      	pop	{r7, pc}

00005d8c <initData>:
//------------------------------------------------------------------------------
//! static HWStatus_t initSSP(void)
//------------------------------------------------------------------------------
//! @brief	initializes internal data structures
//------------------------------------------------------------------------------
static void initData(void){
    5d8c:	b480      	push	{r7}
    5d8e:	af00      	add	r7, sp, #0

	// this buffer will clock out 12 bytes for reading the Gyro
	wBuff_GyroData[0] = (L3GD20_RD| L3GD20_ADDR_INC | 0x25); // command: read from register 25h onward and increment register for continuous readings
    5d90:	f640 23d8 	movw	r3, #2776	; 0xad8
    5d94:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5d98:	f04f 02e5 	mov.w	r2, #229	; 0xe5
    5d9c:	701a      	strb	r2, [r3, #0]
	wBuff_GyroData[1] = 0x00; // + 8 clocks for  REFERENCE
    5d9e:	f640 23d8 	movw	r3, #2776	; 0xad8
    5da2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5da6:	f04f 0200 	mov.w	r2, #0
    5daa:	705a      	strb	r2, [r3, #1]
	wBuff_GyroData[2] = 0x00; // + 8 clocks for  OUT_TEMP
    5dac:	f640 23d8 	movw	r3, #2776	; 0xad8
    5db0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5db4:	f04f 0200 	mov.w	r2, #0
    5db8:	709a      	strb	r2, [r3, #2]
	wBuff_GyroData[3] = 0x00; // + 8 clocks for  STATUS_REG
    5dba:	f640 23d8 	movw	r3, #2776	; 0xad8
    5dbe:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5dc2:	f04f 0200 	mov.w	r2, #0
    5dc6:	70da      	strb	r2, [r3, #3]
	wBuff_GyroData[4] = 0x00; // + 8 clocks for  gyro out X LSB
    5dc8:	f640 23d8 	movw	r3, #2776	; 0xad8
    5dcc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5dd0:	f04f 0200 	mov.w	r2, #0
    5dd4:	711a      	strb	r2, [r3, #4]
	wBuff_GyroData[5] = 0x00; // + 8 clocks for  gyro out X MSB
    5dd6:	f640 23d8 	movw	r3, #2776	; 0xad8
    5dda:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5dde:	f04f 0200 	mov.w	r2, #0
    5de2:	715a      	strb	r2, [r3, #5]
	wBuff_GyroData[6] = 0x00; // + 8 clocks for  gyro out Y LSB
    5de4:	f640 23d8 	movw	r3, #2776	; 0xad8
    5de8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5dec:	f04f 0200 	mov.w	r2, #0
    5df0:	719a      	strb	r2, [r3, #6]
	wBuff_GyroData[7] = 0x00; // + 8 clocks for  gyro out Y MSB
    5df2:	f640 23d8 	movw	r3, #2776	; 0xad8
    5df6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5dfa:	f04f 0200 	mov.w	r2, #0
    5dfe:	71da      	strb	r2, [r3, #7]
	wBuff_GyroData[8] = 0x00; // + 8 clocks for  gyro out Z LSB
    5e00:	f640 23d8 	movw	r3, #2776	; 0xad8
    5e04:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5e08:	f04f 0200 	mov.w	r2, #0
    5e0c:	721a      	strb	r2, [r3, #8]
	wBuff_GyroData[9] = 0x00; // + 8 clocks for  gyro out Z MSB
    5e0e:	f640 23d8 	movw	r3, #2776	; 0xad8
    5e12:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5e16:	f04f 0200 	mov.w	r2, #0
    5e1a:	725a      	strb	r2, [r3, #9]

	// no valid readings so far
	L3GD20_Readings.data_valid = FALSE;
    5e1c:	f640 6380 	movw	r3, #3712	; 0xe80
    5e20:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5e24:	f04f 0200 	mov.w	r2, #0
    5e28:	721a      	strb	r2, [r3, #8]

	// init local state machine
	L3GD20State = readGyroDevID;
    5e2a:	f640 23c0 	movw	r3, #2752	; 0xac0
    5e2e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5e32:	f04f 0200 	mov.w	r2, #0
    5e36:	701a      	strb	r2, [r3, #0]
}
    5e38:	46bd      	mov	sp, r7
    5e3a:	bc80      	pop	{r7}
    5e3c:	4770      	bx	lr
    5e3e:	bf00      	nop

00005e40 <prcRawValues>:
//------------------------------------------------------------------------------
//! @brief	processes raw data read from gyroscopes registers and writes results
//!			to L3GD20_Readings structure
//------------------------------------------------------------------------------
static void prcRawValues(MEMS_L3GD20_Data_Register_Type *pData,
		MEMS_L3GD20_Config_Register_Type *pConf, MEMS_L3GD20_Result_Type *pRes){
    5e40:	b480      	push	{r7}
    5e42:	b087      	sub	sp, #28
    5e44:	af00      	add	r7, sp, #0
    5e46:	60f8      	str	r0, [r7, #12]
    5e48:	60b9      	str	r1, [r7, #8]
    5e4a:	607a      	str	r2, [r7, #4]
	s16_t tmp;

	L3GD20_Readings.Temperature = pData->temp;
    5e4c:	68fb      	ldr	r3, [r7, #12]
    5e4e:	789a      	ldrb	r2, [r3, #2]
    5e50:	f640 6380 	movw	r3, #3712	; 0xe80
    5e54:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5e58:	705a      	strb	r2, [r3, #1]

	tmp = (s16_t) (pData->x_l | (u16_t) pData->x_h << 8);
    5e5a:	68fb      	ldr	r3, [r7, #12]
    5e5c:	791b      	ldrb	r3, [r3, #4]
    5e5e:	461a      	mov	r2, r3
    5e60:	68fb      	ldr	r3, [r7, #12]
    5e62:	795b      	ldrb	r3, [r3, #5]
    5e64:	ea4f 2303 	mov.w	r3, r3, lsl #8
    5e68:	b29b      	uxth	r3, r3
    5e6a:	4313      	orrs	r3, r2
    5e6c:	82fb      	strh	r3, [r7, #22]
	L3GD20_Readings.Gyro_X = tmp;//sens[pConf->Reg_0x23.fs] * tmp;
    5e6e:	f640 6380 	movw	r3, #3712	; 0xe80
    5e72:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5e76:	8afa      	ldrh	r2, [r7, #22]
    5e78:	805a      	strh	r2, [r3, #2]

	tmp = (s16_t) (pData->y_l | (u16_t) pData->y_h << 8);
    5e7a:	68fb      	ldr	r3, [r7, #12]
    5e7c:	799b      	ldrb	r3, [r3, #6]
    5e7e:	461a      	mov	r2, r3
    5e80:	68fb      	ldr	r3, [r7, #12]
    5e82:	79db      	ldrb	r3, [r3, #7]
    5e84:	ea4f 2303 	mov.w	r3, r3, lsl #8
    5e88:	b29b      	uxth	r3, r3
    5e8a:	4313      	orrs	r3, r2
    5e8c:	82fb      	strh	r3, [r7, #22]
	L3GD20_Readings.Gyro_Y = tmp;//sens[pConf->Reg_0x23.fs] * tmp;
    5e8e:	f640 6380 	movw	r3, #3712	; 0xe80
    5e92:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5e96:	8afa      	ldrh	r2, [r7, #22]
    5e98:	809a      	strh	r2, [r3, #4]

	tmp = (s16_t) (pData->z_l | (u16_t) pData->z_h << 8);
    5e9a:	68fb      	ldr	r3, [r7, #12]
    5e9c:	7a1b      	ldrb	r3, [r3, #8]
    5e9e:	461a      	mov	r2, r3
    5ea0:	68fb      	ldr	r3, [r7, #12]
    5ea2:	7a5b      	ldrb	r3, [r3, #9]
    5ea4:	ea4f 2303 	mov.w	r3, r3, lsl #8
    5ea8:	b29b      	uxth	r3, r3
    5eaa:	4313      	orrs	r3, r2
    5eac:	82fb      	strh	r3, [r7, #22]
	L3GD20_Readings.Gyro_Z = tmp;//sens[pConf->Reg_0x23.fs] * tmp;
    5eae:	f640 6380 	movw	r3, #3712	; 0xe80
    5eb2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5eb6:	8afa      	ldrh	r2, [r7, #22]
    5eb8:	80da      	strh	r2, [r3, #6]

	L3GD20_Readings.data_valid = TRUE;
    5eba:	f640 6380 	movw	r3, #3712	; 0xe80
    5ebe:	f2c1 0300 	movt	r3, #4096	; 0x1000
    5ec2:	f04f 0201 	mov.w	r2, #1
    5ec6:	721a      	strb	r2, [r3, #8]
			
	return;
    5ec8:	bf00      	nop
}
    5eca:	f107 071c 	add.w	r7, r7, #28
    5ece:	46bd      	mov	sp, r7
    5ed0:	bc80      	pop	{r7}
    5ed2:	4770      	bx	lr

00005ed4 <rwL3GD20>:
//! @param	p_rBuff		pointer to read buffer
//! @param	len			length of buffers
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
static HWStatus_t rwL3GD20(u8_t *p_wBuff, u8_t *p_rBuff, u8_t len){
    5ed4:	b580      	push	{r7, lr}
    5ed6:	b084      	sub	sp, #16
    5ed8:	af00      	add	r7, sp, #0
    5eda:	60f8      	str	r0, [r7, #12]
    5edc:	60b9      	str	r1, [r7, #8]
    5ede:	4613      	mov	r3, r2
    5ee0:	71fb      	strb	r3, [r7, #7]

	if(!p_wBuff)
    5ee2:	68fb      	ldr	r3, [r7, #12]
    5ee4:	2b00      	cmp	r3, #0
    5ee6:	d102      	bne.n	5eee <rwL3GD20+0x1a>
		return HW_ERR_ILLPARAMVAL;
    5ee8:	f04f 0301 	mov.w	r3, #1
    5eec:	e012      	b.n	5f14 <rwL3GD20+0x40>
	if(!len)
    5eee:	79fb      	ldrb	r3, [r7, #7]
    5ef0:	2b00      	cmp	r3, #0
    5ef2:	d102      	bne.n	5efa <rwL3GD20+0x26>
		return HW_ERR_ILLPARAMVAL;
    5ef4:	f04f 0301 	mov.w	r3, #1
    5ef8:	e00c      	b.n	5f14 <rwL3GD20+0x40>

	HW_L3GD20_CsOn();
    5efa:	f002 f867 	bl	7fcc <HW_L3GD20_CsOn>
	SSP_ReadWrite(SSP_1, p_rBuff, p_wBuff, len);
    5efe:	79fb      	ldrb	r3, [r7, #7]
    5f00:	f04f 0000 	mov.w	r0, #0
    5f04:	68b9      	ldr	r1, [r7, #8]
    5f06:	68fa      	ldr	r2, [r7, #12]
    5f08:	f000 fa48 	bl	639c <SSP_ReadWrite>
	HW_L3GD20_CsOff();
    5f0c:	f002 f870 	bl	7ff0 <HW_L3GD20_CsOff>

	return HW_ERR_OK;
    5f10:	f04f 0300 	mov.w	r3, #0
}
    5f14:	4618      	mov	r0, r3
    5f16:	f107 0710 	add.w	r7, r7, #16
    5f1a:	46bd      	mov	sp, r7
    5f1c:	bd80      	pop	{r7, pc}
    5f1e:	bf00      	nop

00005f20 <wL3GD20Reg>:
//! @param	reg		address of register to write
//! @param	val		value that should be written into register
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
static HWStatus_t wL3GD20Reg(u8_t reg, u8_t val){
    5f20:	b580      	push	{r7, lr}
    5f22:	b084      	sub	sp, #16
    5f24:	af00      	add	r7, sp, #0
    5f26:	4602      	mov	r2, r0
    5f28:	460b      	mov	r3, r1
    5f2a:	71fa      	strb	r2, [r7, #7]
    5f2c:	71bb      	strb	r3, [r7, #6]
	u8_t wbuff[2];
	u8_t rbuff[2];

	wbuff[0]=reg;
    5f2e:	79fb      	ldrb	r3, [r7, #7]
    5f30:	733b      	strb	r3, [r7, #12]
	wbuff[1]=val;
    5f32:	79bb      	ldrb	r3, [r7, #6]
    5f34:	737b      	strb	r3, [r7, #13]
	return rwL3GD20(wbuff, rbuff, 2);
    5f36:	f107 020c 	add.w	r2, r7, #12
    5f3a:	f107 0308 	add.w	r3, r7, #8
    5f3e:	4610      	mov	r0, r2
    5f40:	4619      	mov	r1, r3
    5f42:	f04f 0202 	mov.w	r2, #2
    5f46:	f7ff ffc5 	bl	5ed4 <rwL3GD20>
    5f4a:	4603      	mov	r3, r0
}
    5f4c:	4618      	mov	r0, r3
    5f4e:	f107 0710 	add.w	r7, r7, #16
    5f52:	46bd      	mov	sp, r7
    5f54:	bd80      	pop	{r7, pc}
    5f56:	bf00      	nop

00005f58 <rL3GD20Reg>:
//! @param	reg		address of register to read
//! @param	p_val	pointer to buffer for register value
//------------------------------------------------------------------------------
//! @return one of the default HW_ERR codes
//------------------------------------------------------------------------------
static HWStatus_t rL3GD20Reg(u8_t reg, u8_t *p_val){
    5f58:	b580      	push	{r7, lr}
    5f5a:	b086      	sub	sp, #24
    5f5c:	af00      	add	r7, sp, #0
    5f5e:	4603      	mov	r3, r0
    5f60:	6039      	str	r1, [r7, #0]
    5f62:	71fb      	strb	r3, [r7, #7]
	u8_t wbuff[2];
	u8_t rbuff[2];
	HWStatus_t res;

	if(!p_val)
    5f64:	683b      	ldr	r3, [r7, #0]
    5f66:	2b00      	cmp	r3, #0
    5f68:	d102      	bne.n	5f70 <rL3GD20Reg+0x18>
		return HW_ERR_ILLPARAMVAL;
    5f6a:	f04f 0301 	mov.w	r3, #1
    5f6e:	e019      	b.n	5fa4 <rL3GD20Reg+0x4c>

	wbuff[0]=reg | L3GD20_RD;
    5f70:	79fb      	ldrb	r3, [r7, #7]
    5f72:	f063 037f 	orn	r3, r3, #127	; 0x7f
    5f76:	b2db      	uxtb	r3, r3
    5f78:	743b      	strb	r3, [r7, #16]
	wbuff[1]=0x00;
    5f7a:	f04f 0300 	mov.w	r3, #0
    5f7e:	747b      	strb	r3, [r7, #17]

	res = rwL3GD20(wbuff, rbuff, 2);
    5f80:	f107 0210 	add.w	r2, r7, #16
    5f84:	f107 030c 	add.w	r3, r7, #12
    5f88:	4610      	mov	r0, r2
    5f8a:	4619      	mov	r1, r3
    5f8c:	f04f 0202 	mov.w	r2, #2
    5f90:	f7ff ffa0 	bl	5ed4 <rwL3GD20>
    5f94:	6178      	str	r0, [r7, #20]
	if(res==HW_ERR_OK)
    5f96:	697b      	ldr	r3, [r7, #20]
    5f98:	2b00      	cmp	r3, #0
    5f9a:	d102      	bne.n	5fa2 <rL3GD20Reg+0x4a>
		*p_val=rbuff[1];
    5f9c:	7b7a      	ldrb	r2, [r7, #13]
    5f9e:	683b      	ldr	r3, [r7, #0]
    5fa0:	701a      	strb	r2, [r3, #0]

	return res;
    5fa2:	697b      	ldr	r3, [r7, #20]
}
    5fa4:	4618      	mov	r0, r3
    5fa6:	f107 0718 	add.w	r7, r7, #24
    5faa:	46bd      	mov	sp, r7
    5fac:	bd80      	pop	{r7, pc}
    5fae:	bf00      	nop

00005fb0 <rtc_initialize>:
#include "rtc.h"
#include "hardware.h"


int rtc_initialize (void)
{
    5fb0:	b480      	push	{r7}
    5fb2:	af00      	add	r7, sp, #0
	/* Enable PCLK to the RTC */
	LPC_SC->PCONP |= 1<<9;
    5fb4:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    5fb8:	f2c4 030f 	movt	r3, #16399	; 0x400f
    5fbc:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    5fc0:	f2c4 020f 	movt	r2, #16399	; 0x400f
    5fc4:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    5fc8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    5fcc:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4

	/* Start RTC with external XTAL */
	LPC_RTC->CCR = 0x11;
    5fd0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    5fd4:	f2c4 0302 	movt	r3, #16386	; 0x4002
    5fd8:	f04f 0211 	mov.w	r2, #17
    5fdc:	721a      	strb	r2, [r3, #8]

	LPC_RTC->RTC_AUX = 1<<4;
    5fde:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    5fe2:	f2c4 0302 	movt	r3, #16386	; 0x4002
    5fe6:	f04f 0210 	mov.w	r2, #16
    5fea:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
	return 1;
    5fee:	f04f 0301 	mov.w	r3, #1
}
    5ff2:	4618      	mov	r0, r3
    5ff4:	46bd      	mov	sp, r7
    5ff6:	bc80      	pop	{r7}
    5ff8:	4770      	bx	lr
    5ffa:	bf00      	nop

00005ffc <rtc_gettime>:



int rtc_gettime (RTC *rtc)
{
    5ffc:	b480      	push	{r7}
    5ffe:	b085      	sub	sp, #20
    6000:	af00      	add	r7, sp, #0
    6002:	6078      	str	r0, [r7, #4]
	DWORD d, t;


	do {
		t = LPC_RTC->CTIME0;
    6004:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6008:	f2c4 0302 	movt	r3, #16386	; 0x4002
    600c:	695b      	ldr	r3, [r3, #20]
    600e:	60fb      	str	r3, [r7, #12]
		d = LPC_RTC->CTIME1;
    6010:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6014:	f2c4 0302 	movt	r3, #16386	; 0x4002
    6018:	699b      	ldr	r3, [r3, #24]
    601a:	60bb      	str	r3, [r7, #8]
	} while (t != LPC_RTC->CTIME0 || d != LPC_RTC->CTIME1);
    601c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6020:	f2c4 0302 	movt	r3, #16386	; 0x4002
    6024:	695a      	ldr	r2, [r3, #20]
    6026:	68fb      	ldr	r3, [r7, #12]
    6028:	429a      	cmp	r2, r3
    602a:	d1eb      	bne.n	6004 <rtc_gettime+0x8>
    602c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6030:	f2c4 0302 	movt	r3, #16386	; 0x4002
    6034:	699a      	ldr	r2, [r3, #24]
    6036:	68bb      	ldr	r3, [r7, #8]
    6038:	429a      	cmp	r2, r3
    603a:	d1e3      	bne.n	6004 <rtc_gettime+0x8>

	if(LPC_RTC->RTC_AUX & 1<<4){
    603c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6040:	f2c4 0302 	movt	r3, #16386	; 0x4002
    6044:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
    6048:	b2db      	uxtb	r3, r3
    604a:	f003 0310 	and.w	r3, r3, #16
    604e:	2b00      	cmp	r3, #0
    6050:	d01e      	beq.n	6090 <rtc_gettime+0x94>
		rtc->sec = 0;
    6052:	687b      	ldr	r3, [r7, #4]
    6054:	f04f 0200 	mov.w	r2, #0
    6058:	71da      	strb	r2, [r3, #7]
		rtc->min = 0;
    605a:	687b      	ldr	r3, [r7, #4]
    605c:	f04f 0200 	mov.w	r2, #0
    6060:	719a      	strb	r2, [r3, #6]
		rtc->hour = 0;
    6062:	687b      	ldr	r3, [r7, #4]
    6064:	f04f 0200 	mov.w	r2, #0
    6068:	715a      	strb	r2, [r3, #5]
		rtc->wday = 0;
    606a:	687b      	ldr	r3, [r7, #4]
    606c:	f04f 0200 	mov.w	r2, #0
    6070:	711a      	strb	r2, [r3, #4]
		rtc->mday = 1;
    6072:	687b      	ldr	r3, [r7, #4]
    6074:	f04f 0201 	mov.w	r2, #1
    6078:	70da      	strb	r2, [r3, #3]
		rtc->month = 1;
    607a:	687b      	ldr	r3, [r7, #4]
    607c:	f04f 0201 	mov.w	r2, #1
    6080:	709a      	strb	r2, [r3, #2]
		rtc->year = 2011;
    6082:	687b      	ldr	r3, [r7, #4]
    6084:	f240 72db 	movw	r2, #2011	; 0x7db
    6088:	801a      	strh	r2, [r3, #0]
		return 0;
    608a:	f04f 0300 	mov.w	r3, #0
    608e:	e03e      	b.n	610e <rtc_gettime+0x112>
	}

	rtc->sec = t & 63;
    6090:	68fb      	ldr	r3, [r7, #12]
    6092:	b2db      	uxtb	r3, r3
    6094:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    6098:	b2da      	uxtb	r2, r3
    609a:	687b      	ldr	r3, [r7, #4]
    609c:	71da      	strb	r2, [r3, #7]
	rtc->min = (t >> 8) & 63;
    609e:	68fb      	ldr	r3, [r7, #12]
    60a0:	ea4f 2313 	mov.w	r3, r3, lsr #8
    60a4:	b2db      	uxtb	r3, r3
    60a6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
    60aa:	b2da      	uxtb	r2, r3
    60ac:	687b      	ldr	r3, [r7, #4]
    60ae:	719a      	strb	r2, [r3, #6]
	rtc->hour = (t >> 16) & 31;
    60b0:	68fb      	ldr	r3, [r7, #12]
    60b2:	ea4f 4313 	mov.w	r3, r3, lsr #16
    60b6:	b2db      	uxtb	r3, r3
    60b8:	f003 031f 	and.w	r3, r3, #31
    60bc:	b2da      	uxtb	r2, r3
    60be:	687b      	ldr	r3, [r7, #4]
    60c0:	715a      	strb	r2, [r3, #5]
	rtc->wday = (t >> 24) & 7;
    60c2:	68fb      	ldr	r3, [r7, #12]
    60c4:	ea4f 6313 	mov.w	r3, r3, lsr #24
    60c8:	b2db      	uxtb	r3, r3
    60ca:	f003 0307 	and.w	r3, r3, #7
    60ce:	b2da      	uxtb	r2, r3
    60d0:	687b      	ldr	r3, [r7, #4]
    60d2:	711a      	strb	r2, [r3, #4]
	rtc->mday = d & 31;
    60d4:	68bb      	ldr	r3, [r7, #8]
    60d6:	b2db      	uxtb	r3, r3
    60d8:	f003 031f 	and.w	r3, r3, #31
    60dc:	b2da      	uxtb	r2, r3
    60de:	687b      	ldr	r3, [r7, #4]
    60e0:	70da      	strb	r2, [r3, #3]
	rtc->month = (d >> 8) & 15;
    60e2:	68bb      	ldr	r3, [r7, #8]
    60e4:	ea4f 2313 	mov.w	r3, r3, lsr #8
    60e8:	b2db      	uxtb	r3, r3
    60ea:	f003 030f 	and.w	r3, r3, #15
    60ee:	b2da      	uxtb	r2, r3
    60f0:	687b      	ldr	r3, [r7, #4]
    60f2:	709a      	strb	r2, [r3, #2]
	rtc->year = (d >> 16) & 4095;
    60f4:	68bb      	ldr	r3, [r7, #8]
    60f6:	ea4f 4313 	mov.w	r3, r3, lsr #16
    60fa:	b29b      	uxth	r3, r3
    60fc:	ea4f 5303 	mov.w	r3, r3, lsl #20
    6100:	ea4f 5313 	mov.w	r3, r3, lsr #20
    6104:	b29a      	uxth	r2, r3
    6106:	687b      	ldr	r3, [r7, #4]
    6108:	801a      	strh	r2, [r3, #0]
	return 1;
    610a:	f04f 0301 	mov.w	r3, #1
}
    610e:	4618      	mov	r0, r3
    6110:	f107 0714 	add.w	r7, r7, #20
    6114:	46bd      	mov	sp, r7
    6116:	bc80      	pop	{r7}
    6118:	4770      	bx	lr
    611a:	bf00      	nop

0000611c <rtc_settime>:




int rtc_settime (const RTC *rtc)
{
    611c:	b480      	push	{r7}
    611e:	b083      	sub	sp, #12
    6120:	af00      	add	r7, sp, #0
    6122:	6078      	str	r0, [r7, #4]
	LPC_RTC->CCR = 0x12;		/* Stop RTC */
    6124:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6128:	f2c4 0302 	movt	r3, #16386	; 0x4002
    612c:	f04f 0212 	mov.w	r2, #18
    6130:	721a      	strb	r2, [r3, #8]

	/* Update RTC registers */
	LPC_RTC->SEC = rtc->sec;
    6132:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6136:	f2c4 0302 	movt	r3, #16386	; 0x4002
    613a:	687a      	ldr	r2, [r7, #4]
    613c:	79d2      	ldrb	r2, [r2, #7]
    613e:	f883 2020 	strb.w	r2, [r3, #32]
	LPC_RTC->MIN = rtc->min;
    6142:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6146:	f2c4 0302 	movt	r3, #16386	; 0x4002
    614a:	687a      	ldr	r2, [r7, #4]
    614c:	7992      	ldrb	r2, [r2, #6]
    614e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
	LPC_RTC->HOUR = rtc->hour;
    6152:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6156:	f2c4 0302 	movt	r3, #16386	; 0x4002
    615a:	687a      	ldr	r2, [r7, #4]
    615c:	7952      	ldrb	r2, [r2, #5]
    615e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
	LPC_RTC->DOW = rtc->wday;
    6162:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6166:	f2c4 0302 	movt	r3, #16386	; 0x4002
    616a:	687a      	ldr	r2, [r7, #4]
    616c:	7912      	ldrb	r2, [r2, #4]
    616e:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	LPC_RTC->DOM = rtc->mday;
    6172:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6176:	f2c4 0302 	movt	r3, #16386	; 0x4002
    617a:	687a      	ldr	r2, [r7, #4]
    617c:	78d2      	ldrb	r2, [r2, #3]
    617e:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
	LPC_RTC->MONTH = rtc->month;
    6182:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6186:	f2c4 0302 	movt	r3, #16386	; 0x4002
    618a:	687a      	ldr	r2, [r7, #4]
    618c:	7892      	ldrb	r2, [r2, #2]
    618e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
	LPC_RTC->YEAR = rtc->year;
    6192:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    6196:	f2c4 0302 	movt	r3, #16386	; 0x4002
    619a:	687a      	ldr	r2, [r7, #4]
    619c:	8812      	ldrh	r2, [r2, #0]
    619e:	879a      	strh	r2, [r3, #60]	; 0x3c

	LPC_RTC->RTC_AUX = 1<<4;	/* Clear power fail flag */
    61a0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    61a4:	f2c4 0302 	movt	r3, #16386	; 0x4002
    61a8:	f04f 0210 	mov.w	r2, #16
    61ac:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
	LPC_RTC->CCR = 0x11;			/* Restart RTC, Disable calibration feature */
    61b0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    61b4:	f2c4 0302 	movt	r3, #16386	; 0x4002
    61b8:	f04f 0211 	mov.w	r2, #17
    61bc:	721a      	strb	r2, [r3, #8]

	return 1;
    61be:	f04f 0301 	mov.w	r3, #1
}
    61c2:	4618      	mov	r0, r3
    61c4:	f107 070c 	add.w	r7, r7, #12
    61c8:	46bd      	mov	sp, r7
    61ca:	bc80      	pop	{r7}
    61cc:	4770      	bx	lr
    61ce:	bf00      	nop

000061d0 <SSP_Init>:
    61d0:	b085b480 	.word	0xb085b480
    61d4:	4603af00 	.word	0x4603af00
    61d8:	71fb6039 	.word	0x71fb6039
    61dc:	2b0279fb 	.word	0x2b0279fb
    61e0:	f04fd902 	.word	0xf04fd902
    61e4:	e0800302 	.word	0xe0800302
    61e8:	2b00683b 	.word	0x2b00683b
    61ec:	f04fd102 	.word	0xf04fd102
    61f0:	e07a0303 	.word	0xe07a0303
    61f4:	f24079fa 	.word	0xf24079fa
    61f8:	f2c10304 	.word	0xf2c10304
    61fc:	5c9b0300 	.word	0x5c9b0300
    6200:	f640461a 	.word	0xf640461a
    6204:	f2c013e8 	.word	0xf2c013e8
    6208:	f8530301 	.word	0xf8530301
    620c:	60fb3022 	.word	0x60fb3022
    6210:	781b683b 	.word	0x781b683b
    6214:	d9032b02 	.word	0xd9032b02
    6218:	781b683b 	.word	0x781b683b
    621c:	d9022b0f 	.word	0xd9022b0f
    6220:	0303f04f 	.word	0x0303f04f
    6224:	683be061 	.word	0x683be061
    6228:	2b01785b 	.word	0x2b01785b
    622c:	f04fd902 	.word	0xf04fd902
    6230:	e05a0303 	.word	0xe05a0303
    6234:	789b683b 	.word	0x789b683b
    6238:	d9022b01 	.word	0xd9022b01
    623c:	0303f04f 	.word	0x0303f04f
    6240:	683be053 	.word	0x683be053
    6244:	2b0378db 	.word	0x2b0378db
    6248:	f04fd902 	.word	0xf04fd902
    624c:	e04c0303 	.word	0xe04c0303
    6250:	781b683b 	.word	0x781b683b
    6254:	683b60bb 	.word	0x683b60bb
    6258:	ea4f78db 	.word	0xea4f78db
    625c:	68ba1303 	.word	0x68ba1303
    6260:	60bb4313 	.word	0x60bb4313
    6264:	789b683b 	.word	0x789b683b
    6268:	1383ea4f 	.word	0x1383ea4f
    626c:	431368ba 	.word	0x431368ba
    6270:	683b60bb 	.word	0x683b60bb
    6274:	ea4f785b 	.word	0xea4f785b
    6278:	68ba13c3 	.word	0x68ba13c3
    627c:	60bb4313 	.word	0x60bb4313
    6280:	791b683b 	.word	0x791b683b
    6284:	2303ea4f 	.word	0x2303ea4f
    6288:	431368ba 	.word	0x431368ba
    628c:	68fb60bb 	.word	0x68fb60bb
    6290:	601a68ba 	.word	0x601a68ba
    6294:	7a1b683b 	.word	0x7a1b683b
    6298:	68fb60bb 	.word	0x68fb60bb
    629c:	611a68ba 	.word	0x611a68ba
    62a0:	795b683b 	.word	0x795b683b
    62a4:	bf0c2b00 	.word	0xbf0c2b00
    62a8:	23012300 	.word	0x23012300
    62ac:	60bbb2db 	.word	0x60bbb2db
    62b0:	799b683b 	.word	0x799b683b
    62b4:	d0022b00 	.word	0xd0022b00
    62b8:	0302f04f 	.word	0x0302f04f
    62bc:	f04fe001 	.word	0xf04fe001
    62c0:	68ba0300 	.word	0x68ba0300
    62c4:	60bb4313 	.word	0x60bb4313
    62c8:	79db683b 	.word	0x79db683b
    62cc:	d0022b00 	.word	0xd0022b00
    62d0:	0304f04f 	.word	0x0304f04f
    62d4:	f04fe001 	.word	0xf04fe001
    62d8:	68ba0300 	.word	0x68ba0300
    62dc:	60bb4313 	.word	0x60bb4313
    62e0:	68ba68fb 	.word	0x68ba68fb
    62e4:	f04f605a 	.word	0xf04f605a
    62e8:	46180300 	.word	0x46180300
    62ec:	0714f107 	.word	0x0714f107
    62f0:	bc8046bd 	.word	0xbc8046bd
    62f4:	bf004770 	.word	0xbf004770

000062f8 <SSP_SingleRead>:
    62f8:	b084b580 	.word	0xb084b580
    62fc:	4603af00 	.word	0x4603af00
    6300:	71fb6039 	.word	0x71fb6039
    6304:	2b00683b 	.word	0x2b00683b
    6308:	f04fd102 	.word	0xf04fd102
    630c:	e01a0303 	.word	0xe01a0303
    6310:	f10779fa 	.word	0xf10779fa
    6314:	4610030f 	.word	0x4610030f
    6318:	f0004619 	.word	0xf0004619
    631c:	4603f983 	.word	0x4603f983
    6320:	d0022b00 	.word	0xd0022b00
    6324:	0302f04f 	.word	0x0302f04f
    6328:	7bfbe00d 	.word	0x7bfbe00d
    632c:	f640461a 	.word	0xf640461a
    6330:	f2c013e8 	.word	0xf2c013e8
    6334:	f8530301 	.word	0xf8530301
    6338:	689b3022 	.word	0x689b3022
    633c:	683bb29a 	.word	0x683bb29a
    6340:	f04f801a 	.word	0xf04f801a
    6344:	46180300 	.word	0x46180300
    6348:	0710f107 	.word	0x0710f107
    634c:	bd8046bd 	.word	0xbd8046bd

00006350 <SSP_SingleWrite>:
    6350:	b084b580 	.word	0xb084b580
    6354:	4602af00 	.word	0x4602af00
    6358:	71fa460b 	.word	0x71fa460b
    635c:	79fa80bb 	.word	0x79fa80bb
    6360:	030ff107 	.word	0x030ff107
    6364:	46194610 	.word	0x46194610
    6368:	f95cf000 	.word	0xf95cf000
    636c:	2b004603 	.word	0x2b004603
    6370:	f04fd002 	.word	0xf04fd002
    6374:	e00b0302 	.word	0xe00b0302
    6378:	461a7bfb 	.word	0x461a7bfb
    637c:	13e8f640 	.word	0x13e8f640
    6380:	0301f2c0 	.word	0x0301f2c0
    6384:	3022f853 	.word	0x3022f853
    6388:	609a88ba 	.word	0x609a88ba
    638c:	0300f04f 	.word	0x0300f04f
    6390:	f1074618 	.word	0xf1074618
    6394:	46bd0710 	.word	0x46bd0710
    6398:	bf00bd80 	.word	0xbf00bd80

0000639c <SSP_ReadWrite>:
    639c:	b088b580 	.word	0xb088b580
    63a0:	60b9af00 	.word	0x60b9af00
    63a4:	4602607a 	.word	0x4602607a
    63a8:	73bb73fa 	.word	0x73bb73fa
    63ac:	f1077bfa 	.word	0xf1077bfa
    63b0:	46100313 	.word	0x46100313
    63b4:	f0004619 	.word	0xf0004619
    63b8:	4603f935 	.word	0x4603f935
    63bc:	d0022b00 	.word	0xd0022b00
    63c0:	0302f04f 	.word	0x0302f04f
    63c4:	7bbbe128 	.word	0x7bbbe128
    63c8:	d1022b00 	.word	0xd1022b00
    63cc:	0303f04f 	.word	0x0303f04f
    63d0:	7bfae122 	.word	0x7bfae122
    63d4:	0304f240 	.word	0x0304f240
    63d8:	0300f2c1 	.word	0x0300f2c1
    63dc:	461a5c9b 	.word	0x461a5c9b
    63e0:	13e8f640 	.word	0x13e8f640
    63e4:	0301f2c0 	.word	0x0301f2c0
    63e8:	3022f853 	.word	0x3022f853
    63ec:	7bfa61bb 	.word	0x7bfa61bb
    63f0:	0304f240 	.word	0x0304f240
    63f4:	0300f2c1 	.word	0x0300f2c1
    63f8:	ea4f5c9b 	.word	0xea4f5c9b
    63fc:	f6401203 	.word	0xf6401203
    6400:	f2c123f0 	.word	0xf2c123f0
    6404:	18d30300 	.word	0x18d30300
    6408:	697b617b 	.word	0x697b617b
    640c:	697b781a 	.word	0x697b781a
    6410:	429a789b 	.word	0x429a789b
    6414:	697bd105 	.word	0x697bd105
    6418:	697b785a 	.word	0x697b785a
    641c:	429a789b 	.word	0x429a789b
    6420:	f04fd002 	.word	0xf04fd002
    6424:	e0f70304 	.word	0xe0f70304
    6428:	7bba697b 	.word	0x7bba697b
    642c:	69bb709a 	.word	0x69bb709a
    6430:	f003681b 	.word	0xf003681b
    6434:	2b07030f 	.word	0x2b07030f
    6438:	697bd80a 	.word	0x697bd80a
    643c:	605a68ba 	.word	0x605a68ba
    6440:	687a697b 	.word	0x687a697b
    6444:	697b609a 	.word	0x697b609a
    6448:	0201f04f 	.word	0x0201f04f
    644c:	e00970da 	.word	0xe00970da
    6450:	68ba697b 	.word	0x68ba697b
    6454:	697b605a 	.word	0x697b605a
    6458:	609a687a 	.word	0x609a687a
    645c:	f04f697b 	.word	0xf04f697b
    6460:	70da0200 	.word	0x70da0200
    6464:	f04f697b 	.word	0xf04f697b
    6468:	701a0200 	.word	0x701a0200
    646c:	f04f697b 	.word	0xf04f697b
    6470:	705a0200 	.word	0x705a0200
    6474:	0300f04f 	.word	0x0300f04f
    6478:	e00761fb 	.word	0xe00761fb
    647c:	f1077bfa 	.word	0xf1077bfa
    6480:	46100310 	.word	0x46100310
    6484:	f7ff4619 	.word	0xf7ff4619
    6488:	61f8ff37 	.word	0x61f8ff37
    648c:	68db69bb 	.word	0x68db69bb
    6490:	0304f003 	.word	0x0304f003
    6494:	d0022b00 	.word	0xd0022b00
    6498:	2b0069fb 	.word	0x2b0069fb
    649c:	69bbd0ee 	.word	0x69bbd0ee
    64a0:	0203f04f 	.word	0x0203f04f
    64a4:	69bb621a 	.word	0x69bb621a
    64a8:	0200f04f 	.word	0x0200f04f
    64ac:	69bb615a 	.word	0x69bb615a
    64b0:	0200f04f 	.word	0x0200f04f
    64b4:	e06a619a 	.word	0xe06a619a
    64b8:	78db697b 	.word	0x78db697b
    64bc:	d00f2b00 	.word	0xd00f2b00
    64c0:	689b697b 	.word	0x689b697b
    64c4:	d1032b00 	.word	0xd1032b00
    64c8:	03fff04f 	.word	0x03fff04f
    64cc:	e018823b 	.word	0xe018823b
    64d0:	689a697b 	.word	0x689a697b
    64d4:	785b697b 	.word	0x785b697b
    64d8:	781b18d3 	.word	0x781b18d3
    64dc:	e010823b 	.word	0xe010823b
    64e0:	689b697b 	.word	0x689b697b
    64e4:	d1032b00 	.word	0xd1032b00
    64e8:	73fff64f 	.word	0x73fff64f
    64ec:	e008823b 	.word	0xe008823b
    64f0:	689a697b 	.word	0x689a697b
    64f4:	785b697b 	.word	0x785b697b
    64f8:	0343ea4f 	.word	0x0343ea4f
    64fc:	881b18d3 	.word	0x881b18d3
    6500:	8a3b823b 	.word	0x8a3b823b
    6504:	46107bfa 	.word	0x46107bfa
    6508:	f7ff4619 	.word	0xf7ff4619
    650c:	697bff21 	.word	0x697bff21
    6510:	f103785b 	.word	0xf103785b
    6514:	b2da0301 	.word	0xb2da0301
    6518:	705a697b 	.word	0x705a697b
    651c:	7bfae02b 	.word	0x7bfae02b
    6520:	0310f107 	.word	0x0310f107
    6524:	46194610 	.word	0x46194610
    6528:	fee6f7ff 	.word	0xfee6f7ff
    652c:	78db697b 	.word	0x78db697b
    6530:	d00c2b00 	.word	0xd00c2b00
    6534:	685b697b 	.word	0x685b697b
    6538:	d0152b00 	.word	0xd0152b00
    653c:	685a697b 	.word	0x685a697b
    6540:	781b697b 	.word	0x781b697b
    6544:	8a3a18d3 	.word	0x8a3a18d3
    6548:	701ab2d2 	.word	0x701ab2d2
    654c:	697be00c 	.word	0x697be00c
    6550:	2b00685b 	.word	0x2b00685b
    6554:	697bd008 	.word	0x697bd008
    6558:	697b685a 	.word	0x697b685a
    655c:	ea4f781b 	.word	0xea4f781b
    6560:	18d30343 	.word	0x18d30343
    6564:	801a8a3a 	.word	0x801a8a3a
    6568:	781b697b 	.word	0x781b697b
    656c:	0301f103 	.word	0x0301f103
    6570:	697bb2da 	.word	0x697bb2da
    6574:	69bb701a 	.word	0x69bb701a
    6578:	f00368db 	.word	0xf00368db
    657c:	2b000304 	.word	0x2b000304
    6580:	697bd005 	.word	0x697bd005
    6584:	697b781a 	.word	0x697b781a
    6588:	429a789b 	.word	0x429a789b
    658c:	69bbd3c7 	.word	0x69bbd3c7
    6590:	f00368db 	.word	0xf00368db
    6594:	2b000302 	.word	0x2b000302
    6598:	697bd005 	.word	0x697bd005
    659c:	697b785a 	.word	0x697b785a
    65a0:	429a789b 	.word	0x429a789b
    65a4:	697bd388 	.word	0x697bd388
    65a8:	697b781a 	.word	0x697b781a
    65ac:	429a789b 	.word	0x429a789b
    65b0:	697bd305 	.word	0x697bd305
    65b4:	697b785a 	.word	0x697b785a
    65b8:	429a789b 	.word	0x429a789b
    65bc:	7bfad211 	.word	0x7bfad211
    65c0:	0304f240 	.word	0x0304f240
    65c4:	0300f2c1 	.word	0x0300f2c1
    65c8:	461a5c9b 	.word	0x461a5c9b
    65cc:	23ecf640 	.word	0x23ecf640
    65d0:	0300f2c1 	.word	0x0300f2c1
    65d4:	0101f04f 	.word	0x0101f04f
    65d8:	69bb5499 	.word	0x69bb5499
    65dc:	020ff04f 	.word	0x020ff04f
    65e0:	f240615a 	.word	0xf240615a
    65e4:	f2c1030b 	.word	0xf2c1030b
    65e8:	781b0300 	.word	0x781b0300
    65ec:	d1022b00 	.word	0xd1022b00
    65f0:	0300f04f 	.word	0x0300f04f
    65f4:	bf00e010 	.word	0xbf00e010
    65f8:	f2407bfa 	.word	0xf2407bfa
    65fc:	f2c10304 	.word	0xf2c10304
    6600:	5c9b0300 	.word	0x5c9b0300
    6604:	f640461a 	.word	0xf640461a
    6608:	f2c123ec 	.word	0xf2c123ec
    660c:	5c9b0300 	.word	0x5c9b0300
    6610:	d1f12b00 	.word	0xd1f12b00
    6614:	0300f04f 	.word	0x0300f04f
    6618:	f1074618 	.word	0xf1074618
    661c:	46bd0720 	.word	0x46bd0720
    6620:	bf00bd80 	.word	0xbf00bd80
    6624:	b083b480 	.word	0xb083b480
    6628:	4603af00 	.word	0x4603af00
    662c:	71fb6039 	.word	0x71fb6039
    6630:	2b00683b 	.word	0x2b00683b
    6634:	f04fd102 	.word	0xf04fd102
    6638:	e01a0303 	.word	0xe01a0303
    663c:	2b0279fb 	.word	0x2b0279fb
    6640:	f04fd902 	.word	0xf04fd902
    6644:	e0140302 	.word	0xe0140302
    6648:	f24079fa 	.word	0xf24079fa
    664c:	f2c10304 	.word	0xf2c10304
    6650:	5c9b0300 	.word	0x5c9b0300
    6654:	d9022b02 	.word	0xd9022b02
    6658:	0301f04f 	.word	0x0301f04f
    665c:	79fae009 	.word	0x79fae009
    6660:	0304f240 	.word	0x0304f240
    6664:	0300f2c1 	.word	0x0300f2c1
    6668:	683b5c9a 	.word	0x683b5c9a
    666c:	f04f701a 	.word	0xf04f701a
    6670:	46180300 	.word	0x46180300
    6674:	070cf107 	.word	0x070cf107
    6678:	bc8046bd 	.word	0xbc8046bd
    667c:	bf004770 	.word	0xbf004770
    6680:	b085b480 	.word	0xb085b480
    6684:	4603af00 	.word	0x4603af00
    6688:	71fb6039 	.word	0x71fb6039
    668c:	2b00683b 	.word	0x2b00683b
    6690:	f04fd102 	.word	0xf04fd102
    6694:	e0270303 	.word	0xe0270303
    6698:	2b0279fb 	.word	0x2b0279fb
    669c:	f04fd902 	.word	0xf04fd902
    66a0:	e0210301 	.word	0xe0210301
    66a4:	0300f04f 	.word	0x0300f04f
    66a8:	e01873fb 	.word	0xe01873fb
    66ac:	f2407bfa 	.word	0xf2407bfa
    66b0:	f2c10304 	.word	0xf2c10304
    66b4:	5c9b0300 	.word	0x5c9b0300
    66b8:	429a79fa 	.word	0x429a79fa
    66bc:	7bfbd004 	.word	0x7bfbd004
    66c0:	0301f103 	.word	0x0301f103
    66c4:	e00a73fb 	.word	0xe00a73fb
    66c8:	f2407bfa 	.word	0xf2407bfa
    66cc:	f2c10308 	.word	0xf2c10308
    66d0:	5c9a0300 	.word	0x5c9a0300
    66d4:	701a683b 	.word	0x701a683b
    66d8:	0300f04f 	.word	0x0300f04f
    66dc:	7bfbe004 	.word	0x7bfbe004
    66e0:	d9e32b02 	.word	0xd9e32b02
    66e4:	0301f04f 	.word	0x0301f04f
    66e8:	f1074618 	.word	0xf1074618
    66ec:	46bd0714 	.word	0x46bd0714
    66f0:	4770bc80 	.word	0x4770bc80

000066f4 <SSP0_IRQHandler>:
    66f4:	b086b580 	.word	0xb086b580
    66f8:	f240af00 	.word	0xf240af00
    66fc:	f2c10304 	.word	0xf2c10304
    6700:	781b0300 	.word	0x781b0300
    6704:	7dfa75fb 	.word	0x7dfa75fb
    6708:	13e8f640 	.word	0x13e8f640
    670c:	0301f2c0 	.word	0x0301f2c0
    6710:	3022f853 	.word	0x3022f853
    6714:	7dfb613b 	.word	0x7dfb613b
    6718:	1203ea4f 	.word	0x1203ea4f
    671c:	23f0f640 	.word	0x23f0f640
    6720:	0300f2c1 	.word	0x0300f2c1
    6724:	60fb18d3 	.word	0x60fb18d3
    6728:	69db693b 	.word	0x69db693b
    672c:	68bb60bb 	.word	0x68bb60bb
    6730:	0301f003 	.word	0x0301f003
    6734:	d0122b00 	.word	0xd0122b00
    6738:	7b1b68fb 	.word	0x7b1b68fb
    673c:	d0062bff 	.word	0xd0062bff
    6740:	7b1b68fb 	.word	0x7b1b68fb
    6744:	0301f103 	.word	0x0301f103
    6748:	68fbb2da 	.word	0x68fbb2da
    674c:	68fb731a 	.word	0x68fb731a
    6750:	68fb789a 	.word	0x68fb789a
    6754:	693b701a 	.word	0x693b701a
    6758:	0201f04f 	.word	0x0201f04f
    675c:	68bb621a 	.word	0x68bb621a
    6760:	0302f003 	.word	0x0302f003
    6764:	d1322b00 	.word	0xd1322b00
    6768:	f00368bb 	.word	0xf00368bb
    676c:	2b000304 	.word	0x2b000304
    6770:	e02cd03e 	.word	0xe02cd03e
    6774:	0306f107 	.word	0x0306f107
    6778:	0000f04f 	.word	0x0000f04f
    677c:	f7ff4619 	.word	0xf7ff4619
    6780:	68fbfdbb 	.word	0x68fbfdbb
    6784:	2b0078db 	.word	0x2b0078db
    6788:	68fbd00c 	.word	0x68fbd00c
    678c:	2b00685b 	.word	0x2b00685b
    6790:	68fbd015 	.word	0x68fbd015
    6794:	68fb685a 	.word	0x68fb685a
    6798:	18d3781b 	.word	0x18d3781b
    679c:	b2d288fa 	.word	0xb2d288fa
    67a0:	e00c701a 	.word	0xe00c701a
    67a4:	685b68fb 	.word	0x685b68fb
    67a8:	d0082b00 	.word	0xd0082b00
    67ac:	685a68fb 	.word	0x685a68fb
    67b0:	781b68fb 	.word	0x781b68fb
    67b4:	0343ea4f 	.word	0x0343ea4f
    67b8:	88fa18d3 	.word	0x88fa18d3
    67bc:	68fb801a 	.word	0x68fb801a
    67c0:	f103781b 	.word	0xf103781b
    67c4:	b2da0301 	.word	0xb2da0301
    67c8:	701a68fb 	.word	0x701a68fb
    67cc:	bf00e000 	.word	0xbf00e000
    67d0:	68db693b 	.word	0x68db693b
    67d4:	0304f003 	.word	0x0304f003
    67d8:	d0052b00 	.word	0xd0052b00
    67dc:	781a68fb 	.word	0x781a68fb
    67e0:	789b68fb 	.word	0x789b68fb
    67e4:	d3c5429a 	.word	0xd3c5429a
    67e8:	f04f693b 	.word	0xf04f693b
    67ec:	621a0202 	.word	0x621a0202
    67f0:	f00368bb 	.word	0xf00368bb
    67f4:	2b000308 	.word	0x2b000308
    67f8:	e031d03e 	.word	0xe031d03e
    67fc:	78db68fb 	.word	0x78db68fb
    6800:	d00f2b00 	.word	0xd00f2b00
    6804:	689b68fb 	.word	0x689b68fb
    6808:	d1032b00 	.word	0xd1032b00
    680c:	03fff04f 	.word	0x03fff04f
    6810:	e01880fb 	.word	0xe01880fb
    6814:	689a68fb 	.word	0x689a68fb
    6818:	785b68fb 	.word	0x785b68fb
    681c:	781b18d3 	.word	0x781b18d3
    6820:	e01080fb 	.word	0xe01080fb
    6824:	689b68fb 	.word	0x689b68fb
    6828:	d1032b00 	.word	0xd1032b00
    682c:	73fff64f 	.word	0x73fff64f
    6830:	e00880fb 	.word	0xe00880fb
    6834:	689a68fb 	.word	0x689a68fb
    6838:	785b68fb 	.word	0x785b68fb
    683c:	0343ea4f 	.word	0x0343ea4f
    6840:	881b18d3 	.word	0x881b18d3
    6844:	88fb80fb 	.word	0x88fb80fb
    6848:	0000f04f 	.word	0x0000f04f
    684c:	f7ff4619 	.word	0xf7ff4619
    6850:	68fbfd7f 	.word	0x68fbfd7f
    6854:	f103785b 	.word	0xf103785b
    6858:	b2da0301 	.word	0xb2da0301
    685c:	705a68fb 	.word	0x705a68fb
    6860:	68db693b 	.word	0x68db693b
    6864:	0302f003 	.word	0x0302f003
    6868:	d0052b00 	.word	0xd0052b00
    686c:	785a68fb 	.word	0x785a68fb
    6870:	789b68fb 	.word	0x789b68fb
    6874:	d3c1429a 	.word	0xd3c1429a
    6878:	781a68fb 	.word	0x781a68fb
    687c:	789b68fb 	.word	0x789b68fb
    6880:	d311429a 	.word	0xd311429a
    6884:	785a68fb 	.word	0x785a68fb
    6888:	789b68fb 	.word	0x789b68fb
    688c:	d30b429a 	.word	0xd30b429a
    6890:	f6407dfa 	.word	0xf6407dfa
    6894:	f2c123ec 	.word	0xf2c123ec
    6898:	f04f0300 	.word	0xf04f0300
    689c:	54990100 	.word	0x54990100
    68a0:	f04f693b 	.word	0xf04f693b
    68a4:	615a0200 	.word	0x615a0200
    68a8:	0718f107 	.word	0x0718f107
    68ac:	bd8046bd 	.word	0xbd8046bd

000068b0 <SSP1_IRQHandler>:
    68b0:	b086b580 	.word	0xb086b580
    68b4:	f240af00 	.word	0xf240af00
    68b8:	f2c10304 	.word	0xf2c10304
    68bc:	785b0300 	.word	0x785b0300
    68c0:	7dfa75fb 	.word	0x7dfa75fb
    68c4:	13e8f640 	.word	0x13e8f640
    68c8:	0301f2c0 	.word	0x0301f2c0
    68cc:	3022f853 	.word	0x3022f853
    68d0:	7dfb613b 	.word	0x7dfb613b
    68d4:	1203ea4f 	.word	0x1203ea4f
    68d8:	23f0f640 	.word	0x23f0f640
    68dc:	0300f2c1 	.word	0x0300f2c1
    68e0:	60fb18d3 	.word	0x60fb18d3
    68e4:	69db693b 	.word	0x69db693b
    68e8:	68bb60bb 	.word	0x68bb60bb
    68ec:	0301f003 	.word	0x0301f003
    68f0:	d0122b00 	.word	0xd0122b00
    68f4:	7b1b68fb 	.word	0x7b1b68fb
    68f8:	d0062bff 	.word	0xd0062bff
    68fc:	7b1b68fb 	.word	0x7b1b68fb
    6900:	0301f103 	.word	0x0301f103
    6904:	68fbb2da 	.word	0x68fbb2da
    6908:	68fb731a 	.word	0x68fb731a
    690c:	68fb789a 	.word	0x68fb789a
    6910:	693b701a 	.word	0x693b701a
    6914:	0201f04f 	.word	0x0201f04f
    6918:	68bb621a 	.word	0x68bb621a
    691c:	0302f003 	.word	0x0302f003
    6920:	d1322b00 	.word	0xd1322b00
    6924:	f00368bb 	.word	0xf00368bb
    6928:	2b000304 	.word	0x2b000304
    692c:	e02cd03e 	.word	0xe02cd03e
    6930:	0306f107 	.word	0x0306f107
    6934:	0001f04f 	.word	0x0001f04f
    6938:	f7ff4619 	.word	0xf7ff4619
    693c:	68fbfcdd 	.word	0x68fbfcdd
    6940:	2b0078db 	.word	0x2b0078db
    6944:	68fbd00c 	.word	0x68fbd00c
    6948:	2b00685b 	.word	0x2b00685b
    694c:	68fbd015 	.word	0x68fbd015
    6950:	68fb685a 	.word	0x68fb685a
    6954:	18d3781b 	.word	0x18d3781b
    6958:	b2d288fa 	.word	0xb2d288fa
    695c:	e00c701a 	.word	0xe00c701a
    6960:	685b68fb 	.word	0x685b68fb
    6964:	d0082b00 	.word	0xd0082b00
    6968:	685a68fb 	.word	0x685a68fb
    696c:	781b68fb 	.word	0x781b68fb
    6970:	0343ea4f 	.word	0x0343ea4f
    6974:	88fa18d3 	.word	0x88fa18d3
    6978:	68fb801a 	.word	0x68fb801a
    697c:	f103781b 	.word	0xf103781b
    6980:	b2da0301 	.word	0xb2da0301
    6984:	701a68fb 	.word	0x701a68fb
    6988:	bf00e000 	.word	0xbf00e000
    698c:	68db693b 	.word	0x68db693b
    6990:	0304f003 	.word	0x0304f003
    6994:	d0052b00 	.word	0xd0052b00
    6998:	781a68fb 	.word	0x781a68fb
    699c:	789b68fb 	.word	0x789b68fb
    69a0:	d3c5429a 	.word	0xd3c5429a
    69a4:	f04f693b 	.word	0xf04f693b
    69a8:	621a0202 	.word	0x621a0202
    69ac:	f00368bb 	.word	0xf00368bb
    69b0:	2b000308 	.word	0x2b000308
    69b4:	e031d03e 	.word	0xe031d03e
    69b8:	78db68fb 	.word	0x78db68fb
    69bc:	d00f2b00 	.word	0xd00f2b00
    69c0:	689b68fb 	.word	0x689b68fb
    69c4:	d1032b00 	.word	0xd1032b00
    69c8:	03fff04f 	.word	0x03fff04f
    69cc:	e01880fb 	.word	0xe01880fb
    69d0:	689a68fb 	.word	0x689a68fb
    69d4:	785b68fb 	.word	0x785b68fb
    69d8:	781b18d3 	.word	0x781b18d3
    69dc:	e01080fb 	.word	0xe01080fb
    69e0:	689b68fb 	.word	0x689b68fb
    69e4:	d1032b00 	.word	0xd1032b00
    69e8:	73fff64f 	.word	0x73fff64f
    69ec:	e00880fb 	.word	0xe00880fb
    69f0:	689a68fb 	.word	0x689a68fb
    69f4:	785b68fb 	.word	0x785b68fb
    69f8:	0343ea4f 	.word	0x0343ea4f
    69fc:	881b18d3 	.word	0x881b18d3
    6a00:	88fb80fb 	.word	0x88fb80fb
    6a04:	0001f04f 	.word	0x0001f04f
    6a08:	f7ff4619 	.word	0xf7ff4619
    6a0c:	68fbfca1 	.word	0x68fbfca1
    6a10:	f103785b 	.word	0xf103785b
    6a14:	b2da0301 	.word	0xb2da0301
    6a18:	705a68fb 	.word	0x705a68fb
    6a1c:	68db693b 	.word	0x68db693b
    6a20:	0302f003 	.word	0x0302f003
    6a24:	d0052b00 	.word	0xd0052b00
    6a28:	785a68fb 	.word	0x785a68fb
    6a2c:	789b68fb 	.word	0x789b68fb
    6a30:	d3c1429a 	.word	0xd3c1429a
    6a34:	781a68fb 	.word	0x781a68fb
    6a38:	789b68fb 	.word	0x789b68fb
    6a3c:	d311429a 	.word	0xd311429a
    6a40:	785a68fb 	.word	0x785a68fb
    6a44:	789b68fb 	.word	0x789b68fb
    6a48:	d30b429a 	.word	0xd30b429a
    6a4c:	f6407dfa 	.word	0xf6407dfa
    6a50:	f2c123ec 	.word	0xf2c123ec
    6a54:	f04f0300 	.word	0xf04f0300
    6a58:	54990100 	.word	0x54990100
    6a5c:	f04f693b 	.word	0xf04f693b
    6a60:	615a0200 	.word	0x615a0200
    6a64:	0718f107 	.word	0x0718f107
    6a68:	bd8046bd 	.word	0xbd8046bd

00006a6c <SSP2_IRQHandler>:
    6a6c:	b086b580 	.word	0xb086b580
    6a70:	f240af00 	.word	0xf240af00
    6a74:	f2c10304 	.word	0xf2c10304
    6a78:	789b0300 	.word	0x789b0300
    6a7c:	7dfa75fb 	.word	0x7dfa75fb
    6a80:	13e8f640 	.word	0x13e8f640
    6a84:	0301f2c0 	.word	0x0301f2c0
    6a88:	3022f853 	.word	0x3022f853
    6a8c:	7dfb613b 	.word	0x7dfb613b
    6a90:	1203ea4f 	.word	0x1203ea4f
    6a94:	23f0f640 	.word	0x23f0f640
    6a98:	0300f2c1 	.word	0x0300f2c1
    6a9c:	60fb18d3 	.word	0x60fb18d3
    6aa0:	69db693b 	.word	0x69db693b
    6aa4:	68bb60bb 	.word	0x68bb60bb
    6aa8:	0301f003 	.word	0x0301f003
    6aac:	d0122b00 	.word	0xd0122b00
    6ab0:	7b1b68fb 	.word	0x7b1b68fb
    6ab4:	d0062bff 	.word	0xd0062bff
    6ab8:	7b1b68fb 	.word	0x7b1b68fb
    6abc:	0301f103 	.word	0x0301f103
    6ac0:	68fbb2da 	.word	0x68fbb2da
    6ac4:	68fb731a 	.word	0x68fb731a
    6ac8:	68fb789a 	.word	0x68fb789a
    6acc:	693b701a 	.word	0x693b701a
    6ad0:	0201f04f 	.word	0x0201f04f
    6ad4:	68bb621a 	.word	0x68bb621a
    6ad8:	0302f003 	.word	0x0302f003
    6adc:	d1322b00 	.word	0xd1322b00
    6ae0:	f00368bb 	.word	0xf00368bb
    6ae4:	2b000304 	.word	0x2b000304
    6ae8:	e02cd03e 	.word	0xe02cd03e
    6aec:	0306f107 	.word	0x0306f107
    6af0:	0002f04f 	.word	0x0002f04f
    6af4:	f7ff4619 	.word	0xf7ff4619
    6af8:	68fbfbff 	.word	0x68fbfbff
    6afc:	2b0078db 	.word	0x2b0078db
    6b00:	68fbd00c 	.word	0x68fbd00c
    6b04:	2b00685b 	.word	0x2b00685b
    6b08:	68fbd015 	.word	0x68fbd015
    6b0c:	68fb685a 	.word	0x68fb685a
    6b10:	18d3781b 	.word	0x18d3781b
    6b14:	b2d288fa 	.word	0xb2d288fa
    6b18:	e00c701a 	.word	0xe00c701a
    6b1c:	685b68fb 	.word	0x685b68fb
    6b20:	d0082b00 	.word	0xd0082b00
    6b24:	685a68fb 	.word	0x685a68fb
    6b28:	781b68fb 	.word	0x781b68fb
    6b2c:	0343ea4f 	.word	0x0343ea4f
    6b30:	88fa18d3 	.word	0x88fa18d3
    6b34:	68fb801a 	.word	0x68fb801a
    6b38:	f103781b 	.word	0xf103781b
    6b3c:	b2da0301 	.word	0xb2da0301
    6b40:	701a68fb 	.word	0x701a68fb
    6b44:	bf00e000 	.word	0xbf00e000
    6b48:	68db693b 	.word	0x68db693b
    6b4c:	0304f003 	.word	0x0304f003
    6b50:	d0052b00 	.word	0xd0052b00
    6b54:	781a68fb 	.word	0x781a68fb
    6b58:	789b68fb 	.word	0x789b68fb
    6b5c:	d3c5429a 	.word	0xd3c5429a
    6b60:	f04f693b 	.word	0xf04f693b
    6b64:	621a0202 	.word	0x621a0202
    6b68:	f00368bb 	.word	0xf00368bb
    6b6c:	2b000308 	.word	0x2b000308
    6b70:	e031d03e 	.word	0xe031d03e
    6b74:	78db68fb 	.word	0x78db68fb
    6b78:	d00f2b00 	.word	0xd00f2b00
    6b7c:	689b68fb 	.word	0x689b68fb
    6b80:	d1032b00 	.word	0xd1032b00
    6b84:	03fff04f 	.word	0x03fff04f
    6b88:	e01880fb 	.word	0xe01880fb
    6b8c:	689a68fb 	.word	0x689a68fb
    6b90:	785b68fb 	.word	0x785b68fb
    6b94:	781b18d3 	.word	0x781b18d3
    6b98:	e01080fb 	.word	0xe01080fb
    6b9c:	689b68fb 	.word	0x689b68fb
    6ba0:	d1032b00 	.word	0xd1032b00
    6ba4:	73fff64f 	.word	0x73fff64f
    6ba8:	e00880fb 	.word	0xe00880fb
    6bac:	689a68fb 	.word	0x689a68fb
    6bb0:	785b68fb 	.word	0x785b68fb
    6bb4:	0343ea4f 	.word	0x0343ea4f
    6bb8:	881b18d3 	.word	0x881b18d3
    6bbc:	88fb80fb 	.word	0x88fb80fb
    6bc0:	0002f04f 	.word	0x0002f04f
    6bc4:	f7ff4619 	.word	0xf7ff4619
    6bc8:	68fbfbc3 	.word	0x68fbfbc3
    6bcc:	f103785b 	.word	0xf103785b
    6bd0:	b2da0301 	.word	0xb2da0301
    6bd4:	705a68fb 	.word	0x705a68fb
    6bd8:	68db693b 	.word	0x68db693b
    6bdc:	0302f003 	.word	0x0302f003
    6be0:	d0052b00 	.word	0xd0052b00
    6be4:	785a68fb 	.word	0x785a68fb
    6be8:	789b68fb 	.word	0x789b68fb
    6bec:	d3c1429a 	.word	0xd3c1429a
    6bf0:	781a68fb 	.word	0x781a68fb
    6bf4:	789b68fb 	.word	0x789b68fb
    6bf8:	d311429a 	.word	0xd311429a
    6bfc:	785a68fb 	.word	0x785a68fb
    6c00:	789b68fb 	.word	0x789b68fb
    6c04:	d30b429a 	.word	0xd30b429a
    6c08:	f6407dfa 	.word	0xf6407dfa
    6c0c:	f2c123ec 	.word	0xf2c123ec
    6c10:	f04f0300 	.word	0xf04f0300
    6c14:	54990100 	.word	0x54990100
    6c18:	f04f693b 	.word	0xf04f693b
    6c1c:	615a0200 	.word	0x615a0200
    6c20:	0718f107 	.word	0x0718f107
    6c24:	bd8046bd 	.word	0xbd8046bd
    6c28:	b083b480 	.word	0xb083b480
    6c2c:	4603af00 	.word	0x4603af00
    6c30:	f44f71fb 	.word	0xf44f71fb
    6c34:	f2ce4361 	.word	0xf2ce4361
    6c38:	f9970300 	.word	0xf9970300
    6c3c:	ea4f2007 	.word	0xea4f2007
    6c40:	79f91252 	.word	0x79f91252
    6c44:	011ff001 	.word	0x011ff001
    6c48:	0001f04f 	.word	0x0001f04f
    6c4c:	f101fa00 	.word	0xf101fa00
    6c50:	1022f843 	.word	0x1022f843
    6c54:	070cf107 	.word	0x070cf107
    6c58:	bc8046bd 	.word	0xbc8046bd
    6c5c:	bf004770 	.word	0xbf004770
    6c60:	b083b480 	.word	0xb083b480
    6c64:	4603af00 	.word	0x4603af00
    6c68:	f44f71fb 	.word	0xf44f71fb
    6c6c:	f2ce4361 	.word	0xf2ce4361
    6c70:	f9970300 	.word	0xf9970300
    6c74:	ea4f2007 	.word	0xea4f2007
    6c78:	79f91252 	.word	0x79f91252
    6c7c:	011ff001 	.word	0x011ff001
    6c80:	0001f04f 	.word	0x0001f04f
    6c84:	f101fa00 	.word	0xf101fa00
    6c88:	0220f102 	.word	0x0220f102
    6c8c:	1022f843 	.word	0x1022f843
    6c90:	070cf107 	.word	0x070cf107
    6c94:	bc8046bd 	.word	0xbc8046bd
    6c98:	bf004770 	.word	0xbf004770
    6c9c:	b085b480 	.word	0xb085b480
    6ca0:	4603af00 	.word	0x4603af00
    6ca4:	f04f71fb 	.word	0xf04f71fb
    6ca8:	60fb0300 	.word	0x60fb0300
    6cac:	2b0179fb 	.word	0x2b0179fb
    6cb0:	2b02d011 	.word	0x2b02d011
    6cb4:	2b00d01d 	.word	0x2b00d01d
    6cb8:	f44fd129 	.word	0xf44fd129
    6cbc:	f2c44340 	.word	0xf2c44340
    6cc0:	7d1b0300 	.word	0x7d1b0300
    6cc4:	f003b2db 	.word	0xf003b2db
    6cc8:	2b000320 	.word	0x2b000320
    6ccc:	f04fd020 	.word	0xf04fd020
    6cd0:	60fb0301 	.word	0x60fb0301
    6cd4:	f04fe01c 	.word	0xf04fe01c
    6cd8:	f2c40300 	.word	0xf2c40300
    6cdc:	7d1b0301 	.word	0x7d1b0301
    6ce0:	f003b2db 	.word	0xf003b2db
    6ce4:	2b000320 	.word	0x2b000320
    6ce8:	f04fd014 	.word	0xf04fd014
    6cec:	60fb0301 	.word	0x60fb0301
    6cf0:	f44fe010 	.word	0xf44fe010
    6cf4:	f2c44300 	.word	0xf2c44300
    6cf8:	7d1b0309 	.word	0x7d1b0309
    6cfc:	f003b2db 	.word	0xf003b2db
    6d00:	2b000320 	.word	0x2b000320
    6d04:	f04fd008 	.word	0xf04fd008
    6d08:	60fb0301 	.word	0x60fb0301
    6d0c:	e004e004 	.word	0xe004e004
    6d10:	e002bf00 	.word	0xe002bf00
    6d14:	e000bf00 	.word	0xe000bf00
    6d18:	68fbbf00 	.word	0x68fbbf00
    6d1c:	f1074618 	.word	0xf1074618
    6d20:	46bd0714 	.word	0x46bd0714
    6d24:	4770bc80 	.word	0x4770bc80
    6d28:	b083b480 	.word	0xb083b480
    6d2c:	4602af00 	.word	0x4602af00
    6d30:	71fa460b 	.word	0x71fa460b
    6d34:	79fb71bb 	.word	0x79fb71bb
    6d38:	d00a2b01 	.word	0xd00a2b01
    6d3c:	d00f2b02 	.word	0xd00f2b02
    6d40:	d1142b00 	.word	0xd1142b00
    6d44:	4340f44f 	.word	0x4340f44f
    6d48:	0300f2c4 	.word	0x0300f2c4
    6d4c:	701a79ba 	.word	0x701a79ba
    6d50:	f04fe00e 	.word	0xf04fe00e
    6d54:	f2c40300 	.word	0xf2c40300
    6d58:	79ba0301 	.word	0x79ba0301
    6d5c:	e007701a 	.word	0xe007701a
    6d60:	4300f44f 	.word	0x4300f44f
    6d64:	0309f2c4 	.word	0x0309f2c4
    6d68:	701a79ba 	.word	0x701a79ba
    6d6c:	bf00e000 	.word	0xbf00e000
    6d70:	070cf107 	.word	0x070cf107
    6d74:	bc8046bd 	.word	0xbc8046bd
    6d78:	bf004770 	.word	0xbf004770

00006d7c <SER_Write>:
    6d7c:	b084b580 	.word	0xb084b580
    6d80:	6039af00 	.word	0x6039af00
    6d84:	46024613 	.word	0x46024613
    6d88:	71bb71fa 	.word	0x71bb71fa
    6d8c:	0300f04f 	.word	0x0300f04f
    6d90:	683b60fb 	.word	0x683b60fb
    6d94:	79fb60bb 	.word	0x79fb60bb
    6d98:	d9032b02 	.word	0xd9032b02
    6d9c:	0301f04f 	.word	0x0301f04f
    6da0:	e10460fb 	.word	0xe10460fb
    6da4:	2b00683b 	.word	0x2b00683b
    6da8:	79bbd002 	.word	0x79bbd002
    6dac:	d1032b00 	.word	0xd1032b00
    6db0:	0306f04f 	.word	0x0306f04f
    6db4:	e0fa60fb 	.word	0xe0fa60fb
    6db8:	f64079f9 	.word	0xf64079f9
    6dbc:	f2c1628c 	.word	0xf2c1628c
    6dc0:	460b0200 	.word	0x460b0200
    6dc4:	0383ea4f 	.word	0x0383ea4f
    6dc8:	ea4f185b 	.word	0xea4f185b
    6dcc:	18d30383 	.word	0x18d30383
    6dd0:	0308f103 	.word	0x0308f103
    6dd4:	79ba79db 	.word	0x79ba79db
    6dd8:	d903429a 	.word	0xd903429a
    6ddc:	0304f04f 	.word	0x0304f04f
    6de0:	e0e460fb 	.word	0xe0e460fb
    6de4:	f64079fa 	.word	0xf64079fa
    6de8:	f2c013f4 	.word	0xf2c013f4
    6dec:	5c9b0301 	.word	0x5c9b0301
    6df0:	b25bb2db 	.word	0xb25bb2db
    6df4:	f7ff4618 	.word	0xf7ff4618
    6df8:	79f9ff33 	.word	0x79f9ff33
    6dfc:	628cf640 	.word	0x628cf640
    6e00:	0200f2c1 	.word	0x0200f2c1
    6e04:	ea4f460b 	.word	0xea4f460b
    6e08:	185b0383 	.word	0x185b0383
    6e0c:	0383ea4f 	.word	0x0383ea4f
    6e10:	f10318d3 	.word	0xf10318d3
    6e14:	79d80308 	.word	0x79d80308
    6e18:	f64079f9 	.word	0xf64079f9
    6e1c:	f2c1628c 	.word	0xf2c1628c
    6e20:	460b0200 	.word	0x460b0200
    6e24:	0383ea4f 	.word	0x0383ea4f
    6e28:	ea4f185b 	.word	0xea4f185b
    6e2c:	18d30383 	.word	0x18d30383
    6e30:	0308f103 	.word	0x0308f103
    6e34:	4298781b 	.word	0x4298781b
    6e38:	80b5f040 	.word	0x80b5f040
    6e3c:	461879fb 	.word	0x461879fb
    6e40:	ff2cf7ff 	.word	0xff2cf7ff
    6e44:	2b004603 	.word	0x2b004603
    6e48:	80adf000 	.word	0x80adf000
    6e4c:	781b68bb 	.word	0x781b68bb
    6e50:	f10268ba 	.word	0xf10268ba
    6e54:	60ba0201 	.word	0x60ba0201
    6e58:	461079fa 	.word	0x461079fa
    6e5c:	f7ff4619 	.word	0xf7ff4619
    6e60:	79bbff63 	.word	0x79bbff63
    6e64:	33fff103 	.word	0x33fff103
    6e68:	e09c71bb 	.word	0xe09c71bb
    6e6c:	f64079f9 	.word	0xf64079f9
    6e70:	f2c1628c 	.word	0xf2c1628c
    6e74:	460b0200 	.word	0x460b0200
    6e78:	0383ea4f 	.word	0x0383ea4f
    6e7c:	ea4f185b 	.word	0xea4f185b
    6e80:	18d30383 	.word	0x18d30383
    6e84:	79f96818 	.word	0x79f96818
    6e88:	628cf640 	.word	0x628cf640
    6e8c:	0200f2c1 	.word	0x0200f2c1
    6e90:	ea4f460b 	.word	0xea4f460b
    6e94:	185b0383 	.word	0x185b0383
    6e98:	0383ea4f 	.word	0x0383ea4f
    6e9c:	f10318d3 	.word	0xf10318d3
    6ea0:	78db0308 	.word	0x78db0308
    6ea4:	68ba18c3 	.word	0x68ba18c3
    6ea8:	701a7812 	.word	0x701a7812
    6eac:	f10368bb 	.word	0xf10368bb
    6eb0:	60bb0301 	.word	0x60bb0301
    6eb4:	79f879f9 	.word	0x79f879f9
    6eb8:	628cf640 	.word	0x628cf640
    6ebc:	0200f2c1 	.word	0x0200f2c1
    6ec0:	ea4f4603 	.word	0xea4f4603
    6ec4:	181b0383 	.word	0x181b0383
    6ec8:	0383ea4f 	.word	0x0383ea4f
    6ecc:	f10318d3 	.word	0xf10318d3
    6ed0:	78db0308 	.word	0x78db0308
    6ed4:	0301f103 	.word	0x0301f103
    6ed8:	f640b2d8 	.word	0xf640b2d8
    6edc:	f2c1628c 	.word	0xf2c1628c
    6ee0:	460b0200 	.word	0x460b0200
    6ee4:	0383ea4f 	.word	0x0383ea4f
    6ee8:	ea4f185b 	.word	0xea4f185b
    6eec:	18d30383 	.word	0x18d30383
    6ef0:	0308f103 	.word	0x0308f103
    6ef4:	70da4602 	.word	0x70da4602
    6ef8:	f64079f9 	.word	0xf64079f9
    6efc:	f2c1628c 	.word	0xf2c1628c
    6f00:	460b0200 	.word	0x460b0200
    6f04:	0383ea4f 	.word	0x0383ea4f
    6f08:	ea4f185b 	.word	0xea4f185b
    6f0c:	18d30383 	.word	0x18d30383
    6f10:	0308f103 	.word	0x0308f103
    6f14:	79f978d8 	.word	0x79f978d8
    6f18:	628cf640 	.word	0x628cf640
    6f1c:	0200f2c1 	.word	0x0200f2c1
    6f20:	ea4f460b 	.word	0xea4f460b
    6f24:	185b0383 	.word	0x185b0383
    6f28:	0383ea4f 	.word	0x0383ea4f
    6f2c:	f10318d3 	.word	0xf10318d3
    6f30:	781b0308 	.word	0x781b0308
    6f34:	d3104298 	.word	0xd3104298
    6f38:	f64079f9 	.word	0xf64079f9
    6f3c:	f2c1628c 	.word	0xf2c1628c
    6f40:	460b0200 	.word	0x460b0200
    6f44:	0383ea4f 	.word	0x0383ea4f
    6f48:	ea4f185b 	.word	0xea4f185b
    6f4c:	18d30383 	.word	0x18d30383
    6f50:	0308f103 	.word	0x0308f103
    6f54:	0200f04f 	.word	0x0200f04f
    6f58:	79bb70da 	.word	0x79bb70da
    6f5c:	33fff103 	.word	0x33fff103
    6f60:	79f971bb 	.word	0x79f971bb
    6f64:	f64079f8 	.word	0xf64079f8
    6f68:	f2c1628c 	.word	0xf2c1628c
    6f6c:	46030200 	.word	0x46030200
    6f70:	0383ea4f 	.word	0x0383ea4f
    6f74:	ea4f181b 	.word	0xea4f181b
    6f78:	18d30383 	.word	0x18d30383
    6f7c:	0308f103 	.word	0x0308f103
    6f80:	f10379db 	.word	0xf10379db
    6f84:	b2d833ff 	.word	0xb2d833ff
    6f88:	628cf640 	.word	0x628cf640
    6f8c:	0200f2c1 	.word	0x0200f2c1
    6f90:	ea4f460b 	.word	0xea4f460b
    6f94:	185b0383 	.word	0x185b0383
    6f98:	0383ea4f 	.word	0x0383ea4f
    6f9c:	f10318d3 	.word	0xf10318d3
    6fa0:	46020308 	.word	0x46020308
    6fa4:	79bb71da 	.word	0x79bb71da
    6fa8:	f47f2b00 	.word	0xf47f2b00
    6fac:	79faaf5f 	.word	0x79faaf5f
    6fb0:	13f4f640 	.word	0x13f4f640
    6fb4:	0301f2c0 	.word	0x0301f2c0
    6fb8:	b2db5c9b 	.word	0xb2db5c9b
    6fbc:	4618b25b 	.word	0x4618b25b
    6fc0:	fe32f7ff 	.word	0xfe32f7ff
    6fc4:	461868fb 	.word	0x461868fb
    6fc8:	0710f107 	.word	0x0710f107
    6fcc:	bd8046bd 	.word	0xbd8046bd

00006fd0 <SER_Read>:
    6fd0:	b088b580 	.word	0xb088b580
    6fd4:	60b9af00 	.word	0x60b9af00
    6fd8:	4603607b 	.word	0x4603607b
    6fdc:	461373fb 	.word	0x461373fb
    6fe0:	f04f73bb 	.word	0xf04f73bb
    6fe4:	61fb0300 	.word	0x61fb0300
    6fe8:	61bb68bb 	.word	0x61bb68bb
    6fec:	0300f04f 	.word	0x0300f04f
    6ff0:	7bfb75fb 	.word	0x7bfb75fb
    6ff4:	d9032b02 	.word	0xd9032b02
    6ff8:	0301f04f 	.word	0x0301f04f
    6ffc:	e13961fb 	.word	0xe13961fb
    7000:	2b0068bb 	.word	0x2b0068bb
    7004:	7bbbd002 	.word	0x7bbbd002
    7008:	d1032b00 	.word	0xd1032b00
    700c:	0306f04f 	.word	0x0306f04f
    7010:	e12f61fb 	.word	0xe12f61fb
    7014:	f6407bf9 	.word	0xf6407bf9
    7018:	f2c1628c 	.word	0xf2c1628c
    701c:	460b0200 	.word	0x460b0200
    7020:	0383ea4f 	.word	0x0383ea4f
    7024:	ea4f185b 	.word	0xea4f185b
    7028:	18d30383 	.word	0x18d30383
    702c:	0310f103 	.word	0x0310f103
    7030:	7bf97818 	.word	0x7bf97818
    7034:	628cf640 	.word	0x628cf640
    7038:	0200f2c1 	.word	0x0200f2c1
    703c:	ea4f460b 	.word	0xea4f460b
    7040:	185b0383 	.word	0x185b0383
    7044:	0383ea4f 	.word	0x0383ea4f
    7048:	f10318d3 	.word	0xf10318d3
    704c:	785b0308 	.word	0x785b0308
    7050:	d1034298 	.word	0xd1034298
    7054:	0302f04f 	.word	0x0302f04f
    7058:	e10b61fb 	.word	0xe10b61fb
    705c:	f6407bfa 	.word	0xf6407bfa
    7060:	f2c013f4 	.word	0xf2c013f4
    7064:	5c9b0301 	.word	0x5c9b0301
    7068:	b25bb2db 	.word	0xb25bb2db
    706c:	f7ff4618 	.word	0xf7ff4618
    7070:	7bf9fdf7 	.word	0x7bf9fdf7
    7074:	628cf640 	.word	0x628cf640
    7078:	0200f2c1 	.word	0x0200f2c1
    707c:	ea4f460b 	.word	0xea4f460b
    7080:	185b0383 	.word	0x185b0383
    7084:	0383ea4f 	.word	0x0383ea4f
    7088:	f10318d3 	.word	0xf10318d3
    708c:	785b0310 	.word	0x785b0310
    7090:	d0282b00 	.word	0xd0282b00
    7094:	0303f04f 	.word	0x0303f04f
    7098:	7bf961fb 	.word	0x7bf961fb
    709c:	628cf640 	.word	0x628cf640
    70a0:	0200f2c1 	.word	0x0200f2c1
    70a4:	ea4f460b 	.word	0xea4f460b
    70a8:	185b0383 	.word	0x185b0383
    70ac:	0383ea4f 	.word	0x0383ea4f
    70b0:	f10318d3 	.word	0xf10318d3
    70b4:	789a0310 	.word	0x789a0310
    70b8:	701a69bb 	.word	0x701a69bb
    70bc:	0301f04f 	.word	0x0301f04f
    70c0:	7bf975fb 	.word	0x7bf975fb
    70c4:	628cf640 	.word	0x628cf640
    70c8:	0200f2c1 	.word	0x0200f2c1
    70cc:	ea4f460b 	.word	0xea4f460b
    70d0:	185b0383 	.word	0x185b0383
    70d4:	0383ea4f 	.word	0x0383ea4f
    70d8:	f10318d3 	.word	0xf10318d3
    70dc:	f04f0310 	.word	0xf04f0310
    70e0:	705a0200 	.word	0x705a0200
    70e4:	7bf9e0c6 	.word	0x7bf9e0c6
    70e8:	628cf640 	.word	0x628cf640
    70ec:	0200f2c1 	.word	0x0200f2c1
    70f0:	ea4f460b 	.word	0xea4f460b
    70f4:	185b0383 	.word	0x185b0383
    70f8:	0383ea4f 	.word	0x0383ea4f
    70fc:	f10318d3 	.word	0xf10318d3
    7100:	68180304 	.word	0x68180304
    7104:	f6407bf9 	.word	0xf6407bf9
    7108:	f2c1628c 	.word	0xf2c1628c
    710c:	460b0200 	.word	0x460b0200
    7110:	0383ea4f 	.word	0x0383ea4f
    7114:	ea4f185b 	.word	0xea4f185b
    7118:	18d30383 	.word	0x18d30383
    711c:	0308f103 	.word	0x0308f103
    7120:	18c3799b 	.word	0x18c3799b
    7124:	69bb781a 	.word	0x69bb781a
    7128:	69bb701a 	.word	0x69bb701a
    712c:	0301f103 	.word	0x0301f103
    7130:	7bf961bb 	.word	0x7bf961bb
    7134:	f6407bf8 	.word	0xf6407bf8
    7138:	f2c1628c 	.word	0xf2c1628c
    713c:	46030200 	.word	0x46030200
    7140:	0383ea4f 	.word	0x0383ea4f
    7144:	ea4f181b 	.word	0xea4f181b
    7148:	18d30383 	.word	0x18d30383
    714c:	0308f103 	.word	0x0308f103
    7150:	f103799b 	.word	0xf103799b
    7154:	b2d80301 	.word	0xb2d80301
    7158:	628cf640 	.word	0x628cf640
    715c:	0200f2c1 	.word	0x0200f2c1
    7160:	ea4f460b 	.word	0xea4f460b
    7164:	185b0383 	.word	0x185b0383
    7168:	0383ea4f 	.word	0x0383ea4f
    716c:	f10318d3 	.word	0xf10318d3
    7170:	46020308 	.word	0x46020308
    7174:	7bf9719a 	.word	0x7bf9719a
    7178:	628cf640 	.word	0x628cf640
    717c:	0200f2c1 	.word	0x0200f2c1
    7180:	ea4f460b 	.word	0xea4f460b
    7184:	185b0383 	.word	0x185b0383
    7188:	0383ea4f 	.word	0x0383ea4f
    718c:	f10318d3 	.word	0xf10318d3
    7190:	79980308 	.word	0x79980308
    7194:	f6407bf9 	.word	0xf6407bf9
    7198:	f2c1628c 	.word	0xf2c1628c
    719c:	460b0200 	.word	0x460b0200
    71a0:	0383ea4f 	.word	0x0383ea4f
    71a4:	ea4f185b 	.word	0xea4f185b
    71a8:	18d30383 	.word	0x18d30383
    71ac:	0308f103 	.word	0x0308f103
    71b0:	4298785b 	.word	0x4298785b
    71b4:	7bf9d310 	.word	0x7bf9d310
    71b8:	628cf640 	.word	0x628cf640
    71bc:	0200f2c1 	.word	0x0200f2c1
    71c0:	ea4f460b 	.word	0xea4f460b
    71c4:	185b0383 	.word	0x185b0383
    71c8:	0383ea4f 	.word	0x0383ea4f
    71cc:	f10318d3 	.word	0xf10318d3
    71d0:	f04f0308 	.word	0xf04f0308
    71d4:	719a0200 	.word	0x719a0200
    71d8:	f1037bbb 	.word	0xf1037bbb
    71dc:	73bb33ff 	.word	0x73bb33ff
    71e0:	f1037dfb 	.word	0xf1037dfb
    71e4:	75fb0301 	.word	0x75fb0301
    71e8:	7bf87bf9 	.word	0x7bf87bf9
    71ec:	628cf640 	.word	0x628cf640
    71f0:	0200f2c1 	.word	0x0200f2c1
    71f4:	ea4f4603 	.word	0xea4f4603
    71f8:	181b0383 	.word	0x181b0383
    71fc:	0383ea4f 	.word	0x0383ea4f
    7200:	f10318d3 	.word	0xf10318d3
    7204:	781b0310 	.word	0x781b0310
    7208:	0301f103 	.word	0x0301f103
    720c:	f640b2d8 	.word	0xf640b2d8
    7210:	f2c1628c 	.word	0xf2c1628c
    7214:	460b0200 	.word	0x460b0200
    7218:	0383ea4f 	.word	0x0383ea4f
    721c:	ea4f185b 	.word	0xea4f185b
    7220:	18d30383 	.word	0x18d30383
    7224:	0310f103 	.word	0x0310f103
    7228:	701a4602 	.word	0x701a4602
    722c:	f6407bf9 	.word	0xf6407bf9
    7230:	f2c1628c 	.word	0xf2c1628c
    7234:	460b0200 	.word	0x460b0200
    7238:	0383ea4f 	.word	0x0383ea4f
    723c:	ea4f185b 	.word	0xea4f185b
    7240:	18d30383 	.word	0x18d30383
    7244:	0310f103 	.word	0x0310f103
    7248:	7bf97818 	.word	0x7bf97818
    724c:	628cf640 	.word	0x628cf640
    7250:	0200f2c1 	.word	0x0200f2c1
    7254:	ea4f460b 	.word	0xea4f460b
    7258:	185b0383 	.word	0x185b0383
    725c:	0383ea4f 	.word	0x0383ea4f
    7260:	f10318d3 	.word	0xf10318d3
    7264:	785b0308 	.word	0x785b0308
    7268:	d2034298 	.word	0xd2034298
    726c:	2b007bbb 	.word	0x2b007bbb
    7270:	af39f47f 	.word	0xaf39f47f
    7274:	f6407bfa 	.word	0xf6407bfa
    7278:	f2c013f4 	.word	0xf2c013f4
    727c:	5c9b0301 	.word	0x5c9b0301
    7280:	b25bb2db 	.word	0xb25bb2db
    7284:	f7ff4618 	.word	0xf7ff4618
    7288:	687bfccf 	.word	0x687bfccf
    728c:	d0022b00 	.word	0xd0022b00
    7290:	7dfa687b 	.word	0x7dfa687b
    7294:	69fb701a 	.word	0x69fb701a
    7298:	f1074618 	.word	0xf1074618
    729c:	46bd0720 	.word	0x46bd0720
    72a0:	bf00bd80 	.word	0xbf00bd80

000072a4 <UART0_IRQHandler>:
    72a4:	b085b480 	.word	0xb085b480
    72a8:	f640af00 	.word	0xf640af00
    72ac:	f2c1638c 	.word	0xf2c1638c
    72b0:	60bb0300 	.word	0x60bb0300
    72b4:	4340f44f 	.word	0x4340f44f
    72b8:	0300f2c4 	.word	0x0300f2c4
    72bc:	60fb689b 	.word	0x60fb689b
    72c0:	f00368fb 	.word	0xf00368fb
    72c4:	2b000301 	.word	0x2b000301
    72c8:	808cf040 	.word	0x808cf040
    72cc:	ea4f68fb 	.word	0xea4f68fb
    72d0:	60fb0353 	.word	0x60fb0353
    72d4:	f00368fb 	.word	0xf00368fb
    72d8:	60fb0307 	.word	0x60fb0307
    72dc:	2b0168fb 	.word	0x2b0168fb
    72e0:	68bbd133 	.word	0x68bbd133
    72e4:	68bb7bda 	.word	0x68bb7bda
    72e8:	429a7a1b 	.word	0x429a7a1b
    72ec:	f44fd26d 	.word	0xf44fd26d
    72f0:	f2c44340 	.word	0xf2c44340
    72f4:	7d1b0300 	.word	0x7d1b0300
    72f8:	f003b2db 	.word	0xf003b2db
    72fc:	2b000320 	.word	0x2b000320
    7300:	f44fd063 	.word	0xf44fd063
    7304:	f2c44340 	.word	0xf2c44340
    7308:	68ba0300 	.word	0x68ba0300
    730c:	68ba6811 	.word	0x68ba6811
    7310:	188a7b12 	.word	0x188a7b12
    7314:	701a7812 	.word	0x701a7812
    7318:	7b1b68bb 	.word	0x7b1b68bb
    731c:	0301f103 	.word	0x0301f103
    7320:	68bbb2da 	.word	0x68bbb2da
    7324:	68bb731a 	.word	0x68bb731a
    7328:	68bb7b1a 	.word	0x68bb7b1a
    732c:	429a7a1b 	.word	0x429a7a1b
    7330:	68bbd303 	.word	0x68bbd303
    7334:	0200f04f 	.word	0x0200f04f
    7338:	68bb731a 	.word	0x68bb731a
    733c:	f1037bdb 	.word	0xf1037bdb
    7340:	b2da0301 	.word	0xb2da0301
    7344:	73da68bb 	.word	0x73da68bb
    7348:	68fbe03f 	.word	0x68fbe03f
    734c:	d13c2b02 	.word	0xd13c2b02
    7350:	4340f44f 	.word	0x4340f44f
    7354:	0300f2c4 	.word	0x0300f2c4
    7358:	71fb781b 	.word	0x71fb781b
    735c:	7c1b68bb 	.word	0x7c1b68bb
    7360:	d01f2b00 	.word	0xd01f2b00
    7364:	685a68bb 	.word	0x685a68bb
    7368:	7b5b68bb 	.word	0x7b5b68bb
    736c:	79fa18d3 	.word	0x79fa18d3
    7370:	68bb701a 	.word	0x68bb701a
    7374:	f1037b5b 	.word	0xf1037b5b
    7378:	b2da0301 	.word	0xb2da0301
    737c:	735a68bb 	.word	0x735a68bb
    7380:	7b5a68bb 	.word	0x7b5a68bb
    7384:	7a5b68bb 	.word	0x7a5b68bb
    7388:	d303429a 	.word	0xd303429a
    738c:	f04f68bb 	.word	0xf04f68bb
    7390:	735a0200 	.word	0x735a0200
    7394:	7c1b68bb 	.word	0x7c1b68bb
    7398:	33fff103 	.word	0x33fff103
    739c:	68bbb2da 	.word	0x68bbb2da
    73a0:	e012741a 	.word	0xe012741a
    73a4:	7c5b68bb 	.word	0x7c5b68bb
    73a8:	d1032b00 	.word	0xd1032b00
    73ac:	f04f68bb 	.word	0xf04f68bb
    73b0:	745a0201 	.word	0x745a0201
    73b4:	7c9b68bb 	.word	0x7c9b68bb
    73b8:	d0062bff 	.word	0xd0062bff
    73bc:	7c9b68bb 	.word	0x7c9b68bb
    73c0:	0301f103 	.word	0x0301f103
    73c4:	68bbb2da 	.word	0x68bbb2da
    73c8:	f44f749a 	.word	0xf44f749a
    73cc:	f2c44340 	.word	0xf2c44340
    73d0:	689b0300 	.word	0x689b0300
    73d4:	68fb60fb 	.word	0x68fb60fb
    73d8:	0301f003 	.word	0x0301f003
    73dc:	f43f2b00 	.word	0xf43f2b00
    73e0:	e001af6f 	.word	0xe001af6f
    73e4:	bf00bf00 	.word	0xbf00bf00
    73e8:	0714f107 	.word	0x0714f107
    73ec:	bc8046bd 	.word	0xbc8046bd
    73f0:	bf004770 	.word	0xbf004770

000073f4 <UART1_IRQHandler>:
    73f4:	b085b480 	.word	0xb085b480
    73f8:	4b50af00 	.word	0x4b50af00
    73fc:	f04f60bb 	.word	0xf04f60bb
    7400:	f2c40300 	.word	0xf2c40300
    7404:	689b0301 	.word	0x689b0301
    7408:	68fb60fb 	.word	0x68fb60fb
    740c:	0301f003 	.word	0x0301f003
    7410:	f0402b00 	.word	0xf0402b00
    7414:	68fb808c 	.word	0x68fb808c
    7418:	0353ea4f 	.word	0x0353ea4f
    741c:	68fb60fb 	.word	0x68fb60fb
    7420:	0307f003 	.word	0x0307f003
    7424:	68fb60fb 	.word	0x68fb60fb
    7428:	d1332b01 	.word	0xd1332b01
    742c:	7bda68bb 	.word	0x7bda68bb
    7430:	7a1b68bb 	.word	0x7a1b68bb
    7434:	d26d429a 	.word	0xd26d429a
    7438:	0300f04f 	.word	0x0300f04f
    743c:	0301f2c4 	.word	0x0301f2c4
    7440:	b2db7d1b 	.word	0xb2db7d1b
    7444:	0320f003 	.word	0x0320f003
    7448:	d0632b00 	.word	0xd0632b00
    744c:	0300f04f 	.word	0x0300f04f
    7450:	0301f2c4 	.word	0x0301f2c4
    7454:	681168ba 	.word	0x681168ba
    7458:	7b1268ba 	.word	0x7b1268ba
    745c:	7812188a 	.word	0x7812188a
    7460:	68bb701a 	.word	0x68bb701a
    7464:	f1037b1b 	.word	0xf1037b1b
    7468:	b2da0301 	.word	0xb2da0301
    746c:	731a68bb 	.word	0x731a68bb
    7470:	7b1a68bb 	.word	0x7b1a68bb
    7474:	7a1b68bb 	.word	0x7a1b68bb
    7478:	d303429a 	.word	0xd303429a
    747c:	f04f68bb 	.word	0xf04f68bb
    7480:	731a0200 	.word	0x731a0200
    7484:	7bdb68bb 	.word	0x7bdb68bb
    7488:	0301f103 	.word	0x0301f103
    748c:	68bbb2da 	.word	0x68bbb2da
    7490:	e03f73da 	.word	0xe03f73da
    7494:	2b0268fb 	.word	0x2b0268fb
    7498:	f04fd13c 	.word	0xf04fd13c
    749c:	f2c40300 	.word	0xf2c40300
    74a0:	781b0301 	.word	0x781b0301
    74a4:	68bb71fb 	.word	0x68bb71fb
    74a8:	2b007c1b 	.word	0x2b007c1b
    74ac:	68bbd01f 	.word	0x68bbd01f
    74b0:	68bb685a 	.word	0x68bb685a
    74b4:	18d37b5b 	.word	0x18d37b5b
    74b8:	701a79fa 	.word	0x701a79fa
    74bc:	7b5b68bb 	.word	0x7b5b68bb
    74c0:	0301f103 	.word	0x0301f103
    74c4:	68bbb2da 	.word	0x68bbb2da
    74c8:	68bb735a 	.word	0x68bb735a
    74cc:	68bb7b5a 	.word	0x68bb7b5a
    74d0:	429a7a5b 	.word	0x429a7a5b
    74d4:	68bbd303 	.word	0x68bbd303
    74d8:	0200f04f 	.word	0x0200f04f
    74dc:	68bb735a 	.word	0x68bb735a
    74e0:	f1037c1b 	.word	0xf1037c1b
    74e4:	b2da33ff 	.word	0xb2da33ff
    74e8:	741a68bb 	.word	0x741a68bb
    74ec:	68bbe012 	.word	0x68bbe012
    74f0:	2b007c5b 	.word	0x2b007c5b
    74f4:	68bbd103 	.word	0x68bbd103
    74f8:	0201f04f 	.word	0x0201f04f
    74fc:	68bb745a 	.word	0x68bb745a
    7500:	2bff7c9b 	.word	0x2bff7c9b
    7504:	68bbd006 	.word	0x68bbd006
    7508:	f1037c9b 	.word	0xf1037c9b
    750c:	b2da0301 	.word	0xb2da0301
    7510:	749a68bb 	.word	0x749a68bb
    7514:	0300f04f 	.word	0x0300f04f
    7518:	0301f2c4 	.word	0x0301f2c4
    751c:	60fb689b 	.word	0x60fb689b
    7520:	f00368fb 	.word	0xf00368fb
    7524:	2b000301 	.word	0x2b000301
    7528:	af6ff43f 	.word	0xaf6ff43f
    752c:	bf00e001 	.word	0xbf00e001
    7530:	f107bf00 	.word	0xf107bf00
    7534:	46bd0714 	.word	0x46bd0714
    7538:	4770bc80 	.word	0x4770bc80
    753c:	10000ea0 	.word	0x10000ea0

00007540 <UART2_IRQHandler>:
    7540:	b085b480 	.word	0xb085b480
    7544:	4b50af00 	.word	0x4b50af00
    7548:	f44f60bb 	.word	0xf44f60bb
    754c:	f2c44300 	.word	0xf2c44300
    7550:	689b0309 	.word	0x689b0309
    7554:	68fb60fb 	.word	0x68fb60fb
    7558:	0301f003 	.word	0x0301f003
    755c:	f0402b00 	.word	0xf0402b00
    7560:	68fb808c 	.word	0x68fb808c
    7564:	0353ea4f 	.word	0x0353ea4f
    7568:	68fb60fb 	.word	0x68fb60fb
    756c:	0307f003 	.word	0x0307f003
    7570:	68fb60fb 	.word	0x68fb60fb
    7574:	d1332b01 	.word	0xd1332b01
    7578:	7bda68bb 	.word	0x7bda68bb
    757c:	7a1b68bb 	.word	0x7a1b68bb
    7580:	d26d429a 	.word	0xd26d429a
    7584:	4300f44f 	.word	0x4300f44f
    7588:	0309f2c4 	.word	0x0309f2c4
    758c:	b2db7d1b 	.word	0xb2db7d1b
    7590:	0320f003 	.word	0x0320f003
    7594:	d0632b00 	.word	0xd0632b00
    7598:	4300f44f 	.word	0x4300f44f
    759c:	0309f2c4 	.word	0x0309f2c4
    75a0:	681168ba 	.word	0x681168ba
    75a4:	7b1268ba 	.word	0x7b1268ba
    75a8:	7812188a 	.word	0x7812188a
    75ac:	68bb701a 	.word	0x68bb701a
    75b0:	f1037b1b 	.word	0xf1037b1b
    75b4:	b2da0301 	.word	0xb2da0301
    75b8:	731a68bb 	.word	0x731a68bb
    75bc:	7b1a68bb 	.word	0x7b1a68bb
    75c0:	7a1b68bb 	.word	0x7a1b68bb
    75c4:	d303429a 	.word	0xd303429a
    75c8:	f04f68bb 	.word	0xf04f68bb
    75cc:	731a0200 	.word	0x731a0200
    75d0:	7bdb68bb 	.word	0x7bdb68bb
    75d4:	0301f103 	.word	0x0301f103
    75d8:	68bbb2da 	.word	0x68bbb2da
    75dc:	e03f73da 	.word	0xe03f73da
    75e0:	2b0268fb 	.word	0x2b0268fb
    75e4:	f44fd13c 	.word	0xf44fd13c
    75e8:	f2c44300 	.word	0xf2c44300
    75ec:	781b0309 	.word	0x781b0309
    75f0:	68bb71fb 	.word	0x68bb71fb
    75f4:	2b007c1b 	.word	0x2b007c1b
    75f8:	68bbd01f 	.word	0x68bbd01f
    75fc:	68bb685a 	.word	0x68bb685a
    7600:	18d37b5b 	.word	0x18d37b5b
    7604:	701a79fa 	.word	0x701a79fa
    7608:	7b5b68bb 	.word	0x7b5b68bb
    760c:	0301f103 	.word	0x0301f103
    7610:	68bbb2da 	.word	0x68bbb2da
    7614:	68bb735a 	.word	0x68bb735a
    7618:	68bb7b5a 	.word	0x68bb7b5a
    761c:	429a7a5b 	.word	0x429a7a5b
    7620:	68bbd303 	.word	0x68bbd303
    7624:	0200f04f 	.word	0x0200f04f
    7628:	68bb735a 	.word	0x68bb735a
    762c:	f1037c1b 	.word	0xf1037c1b
    7630:	b2da33ff 	.word	0xb2da33ff
    7634:	741a68bb 	.word	0x741a68bb
    7638:	68bbe012 	.word	0x68bbe012
    763c:	2b007c5b 	.word	0x2b007c5b
    7640:	68bbd103 	.word	0x68bbd103
    7644:	0201f04f 	.word	0x0201f04f
    7648:	68bb745a 	.word	0x68bb745a
    764c:	2bff7c9b 	.word	0x2bff7c9b
    7650:	68bbd006 	.word	0x68bbd006
    7654:	f1037c9b 	.word	0xf1037c9b
    7658:	b2da0301 	.word	0xb2da0301
    765c:	749a68bb 	.word	0x749a68bb
    7660:	4300f44f 	.word	0x4300f44f
    7664:	0309f2c4 	.word	0x0309f2c4
    7668:	60fb689b 	.word	0x60fb689b
    766c:	f00368fb 	.word	0xf00368fb
    7670:	2b000301 	.word	0x2b000301
    7674:	af6ff43f 	.word	0xaf6ff43f
    7678:	bf00e001 	.word	0xbf00e001
    767c:	f107bf00 	.word	0xf107bf00
    7680:	46bd0714 	.word	0x46bd0714
    7684:	4770bc80 	.word	0x4770bc80
    7688:	10000eb4 	.word	0x10000eb4

0000768c <SER_ResetTX>:
    768c:	b084b580 	.word	0xb084b580
    7690:	4603af00 	.word	0x4603af00
    7694:	f04f71fb 	.word	0xf04f71fb
    7698:	60fb0300 	.word	0x60fb0300
    769c:	2b0279fb 	.word	0x2b0279fb
    76a0:	f04fd903 	.word	0xf04fd903
    76a4:	60fb0301 	.word	0x60fb0301
    76a8:	79fae056 	.word	0x79fae056
    76ac:	13f4f640 	.word	0x13f4f640
    76b0:	0301f2c0 	.word	0x0301f2c0
    76b4:	b2db5c9b 	.word	0xb2db5c9b
    76b8:	4618b25b 	.word	0x4618b25b
    76bc:	fad0f7ff 	.word	0xfad0f7ff
    76c0:	f64079f9 	.word	0xf64079f9
    76c4:	f2c1628c 	.word	0xf2c1628c
    76c8:	460b0200 	.word	0x460b0200
    76cc:	0383ea4f 	.word	0x0383ea4f
    76d0:	ea4f185b 	.word	0xea4f185b
    76d4:	18d30383 	.word	0x18d30383
    76d8:	0308f103 	.word	0x0308f103
    76dc:	0200f04f 	.word	0x0200f04f
    76e0:	79f970da 	.word	0x79f970da
    76e4:	628cf640 	.word	0x628cf640
    76e8:	0200f2c1 	.word	0x0200f2c1
    76ec:	ea4f460b 	.word	0xea4f460b
    76f0:	185b0383 	.word	0x185b0383
    76f4:	0383ea4f 	.word	0x0383ea4f
    76f8:	f10318d3 	.word	0xf10318d3
    76fc:	f04f0308 	.word	0xf04f0308
    7700:	711a0200 	.word	0x711a0200
    7704:	79f879f9 	.word	0x79f879f9
    7708:	628cf640 	.word	0x628cf640
    770c:	0200f2c1 	.word	0x0200f2c1
    7710:	ea4f4603 	.word	0xea4f4603
    7714:	181b0383 	.word	0x181b0383
    7718:	0383ea4f 	.word	0x0383ea4f
    771c:	f10318d3 	.word	0xf10318d3
    7720:	78180308 	.word	0x78180308
    7724:	628cf640 	.word	0x628cf640
    7728:	0200f2c1 	.word	0x0200f2c1
    772c:	ea4f460b 	.word	0xea4f460b
    7730:	185b0383 	.word	0x185b0383
    7734:	0383ea4f 	.word	0x0383ea4f
    7738:	f10318d3 	.word	0xf10318d3
    773c:	46020308 	.word	0x46020308
    7740:	79fa71da 	.word	0x79fa71da
    7744:	13f4f640 	.word	0x13f4f640
    7748:	0301f2c0 	.word	0x0301f2c0
    774c:	b2db5c9b 	.word	0xb2db5c9b
    7750:	4618b25b 	.word	0x4618b25b
    7754:	fa68f7ff 	.word	0xfa68f7ff
    7758:	461868fb 	.word	0x461868fb
    775c:	0710f107 	.word	0x0710f107
    7760:	bd8046bd 	.word	0xbd8046bd

00007764 <SER_ResetRX>:
    7764:	b084b580 	.word	0xb084b580
    7768:	4603af00 	.word	0x4603af00
    776c:	f04f71fb 	.word	0xf04f71fb
    7770:	60fb0300 	.word	0x60fb0300
    7774:	2b0279fb 	.word	0x2b0279fb
    7778:	f04fd903 	.word	0xf04fd903
    777c:	60fb0301 	.word	0x60fb0301
    7780:	79fae095 	.word	0x79fae095
    7784:	13f4f640 	.word	0x13f4f640
    7788:	0301f2c0 	.word	0x0301f2c0
    778c:	b2db5c9b 	.word	0xb2db5c9b
    7790:	4618b25b 	.word	0x4618b25b
    7794:	fa64f7ff 	.word	0xfa64f7ff
    7798:	f64079f9 	.word	0xf64079f9
    779c:	f2c1628c 	.word	0xf2c1628c
    77a0:	460b0200 	.word	0x460b0200
    77a4:	0383ea4f 	.word	0x0383ea4f
    77a8:	ea4f185b 	.word	0xea4f185b
    77ac:	18d30383 	.word	0x18d30383
    77b0:	0308f103 	.word	0x0308f103
    77b4:	0200f04f 	.word	0x0200f04f
    77b8:	79f9715a 	.word	0x79f9715a
    77bc:	628cf640 	.word	0x628cf640
    77c0:	0200f2c1 	.word	0x0200f2c1
    77c4:	ea4f460b 	.word	0xea4f460b
    77c8:	185b0383 	.word	0x185b0383
    77cc:	0383ea4f 	.word	0x0383ea4f
    77d0:	f10318d3 	.word	0xf10318d3
    77d4:	f04f0308 	.word	0xf04f0308
    77d8:	719a0200 	.word	0x719a0200
    77dc:	79f879f9 	.word	0x79f879f9
    77e0:	628cf640 	.word	0x628cf640
    77e4:	0200f2c1 	.word	0x0200f2c1
    77e8:	ea4f4603 	.word	0xea4f4603
    77ec:	181b0383 	.word	0x181b0383
    77f0:	0383ea4f 	.word	0x0383ea4f
    77f4:	f10318d3 	.word	0xf10318d3
    77f8:	78580308 	.word	0x78580308
    77fc:	628cf640 	.word	0x628cf640
    7800:	0200f2c1 	.word	0x0200f2c1
    7804:	ea4f460b 	.word	0xea4f460b
    7808:	185b0383 	.word	0x185b0383
    780c:	0383ea4f 	.word	0x0383ea4f
    7810:	f10318d3 	.word	0xf10318d3
    7814:	46020310 	.word	0x46020310
    7818:	79f9701a 	.word	0x79f9701a
    781c:	628cf640 	.word	0x628cf640
    7820:	0200f2c1 	.word	0x0200f2c1
    7824:	ea4f460b 	.word	0xea4f460b
    7828:	185b0383 	.word	0x185b0383
    782c:	0383ea4f 	.word	0x0383ea4f
    7830:	f10318d3 	.word	0xf10318d3
    7834:	f04f0310 	.word	0xf04f0310
    7838:	705a0200 	.word	0x705a0200
    783c:	f64079f9 	.word	0xf64079f9
    7840:	f2c1628c 	.word	0xf2c1628c
    7844:	460b0200 	.word	0x460b0200
    7848:	0383ea4f 	.word	0x0383ea4f
    784c:	ea4f185b 	.word	0xea4f185b
    7850:	18d30383 	.word	0x18d30383
    7854:	0310f103 	.word	0x0310f103
    7858:	0200f04f 	.word	0x0200f04f
    785c:	79fb709a 	.word	0x79fb709a
    7860:	d00a2b01 	.word	0xd00a2b01
    7864:	d00f2b02 	.word	0xd00f2b02
    7868:	d1142b00 	.word	0xd1142b00
    786c:	4340f44f 	.word	0x4340f44f
    7870:	0300f2c4 	.word	0x0300f2c4
    7874:	72fb689b 	.word	0x72fb689b
    7878:	f04fe00e 	.word	0xf04fe00e
    787c:	f2c40300 	.word	0xf2c40300
    7880:	689b0301 	.word	0x689b0301
    7884:	e00772fb 	.word	0xe00772fb
    7888:	4300f44f 	.word	0x4300f44f
    788c:	0309f2c4 	.word	0x0309f2c4
    7890:	72fb689b 	.word	0x72fb689b
    7894:	bf00e000 	.word	0xbf00e000
    7898:	f64079fa 	.word	0xf64079fa
    789c:	f2c013f4 	.word	0xf2c013f4
    78a0:	5c9b0301 	.word	0x5c9b0301
    78a4:	b25bb2db 	.word	0xb25bb2db
    78a8:	f7ff4618 	.word	0xf7ff4618
    78ac:	68fbf9bd 	.word	0x68fbf9bd
    78b0:	f1074618 	.word	0xf1074618
    78b4:	46bd0710 	.word	0x46bd0710
    78b8:	bf00bd80 	.word	0xbf00bd80

000078bc <SER_Initialize>:
    78bc:	b086b580 	.word	0xb086b580
    78c0:	4603af00 	.word	0x4603af00
    78c4:	71fb6039 	.word	0x71fb6039
    78c8:	0300f04f 	.word	0x0300f04f
    78cc:	79fa617b 	.word	0x79fa617b
    78d0:	13f4f640 	.word	0x13f4f640
    78d4:	0301f2c0 	.word	0x0301f2c0
    78d8:	b2db5c9b 	.word	0xb2db5c9b
    78dc:	4618b25b 	.word	0x4618b25b
    78e0:	f9bef7ff 	.word	0xf9bef7ff
    78e4:	2b0279fb 	.word	0x2b0279fb
    78e8:	f04fd903 	.word	0xf04fd903
    78ec:	617b0301 	.word	0x617b0301
    78f0:	683be244 	.word	0x683be244
    78f4:	f64f681a 	.word	0xf64f681a
    78f8:	429a73ff 	.word	0x429a73ff
    78fc:	f04fd903 	.word	0xf04fd903
    7900:	617b0305 	.word	0x617b0305
    7904:	683be23a 	.word	0x683be23a
    7908:	2b00685b 	.word	0x2b00685b
    790c:	f04fd103 	.word	0xf04fd103
    7910:	617b0305 	.word	0x617b0305
    7914:	683be232 	.word	0x683be232
    7918:	2b00685b 	.word	0x2b00685b
    791c:	683bd00c 	.word	0x683bd00c
    7920:	2bff681b 	.word	0x2bff681b
    7924:	683bd808 	.word	0x683bd808
    7928:	b2db681b 	.word	0xb2db681b
    792c:	d8032b02 	.word	0xd8032b02
    7930:	0305f04f 	.word	0x0305f04f
    7934:	e221617b 	.word	0xe221617b
    7938:	68db683b 	.word	0x68db683b
    793c:	d0032b00 	.word	0xd0032b00
    7940:	691b683b 	.word	0x691b683b
    7944:	d1032b00 	.word	0xd1032b00
    7948:	0305f04f 	.word	0x0305f04f
    794c:	e215617b 	.word	0xe215617b
    7950:	683b79f9 	.word	0x683b79f9
    7954:	f64068d8 	.word	0xf64068d8
    7958:	f2c1628c 	.word	0xf2c1628c
    795c:	460b0200 	.word	0x460b0200
    7960:	0383ea4f 	.word	0x0383ea4f
    7964:	ea4f185b 	.word	0xea4f185b
    7968:	18d30383 	.word	0x18d30383
    796c:	79f96018 	.word	0x79f96018
    7970:	6918683b 	.word	0x6918683b
    7974:	628cf640 	.word	0x628cf640
    7978:	0200f2c1 	.word	0x0200f2c1
    797c:	ea4f460b 	.word	0xea4f460b
    7980:	185b0383 	.word	0x185b0383
    7984:	0383ea4f 	.word	0x0383ea4f
    7988:	f10318d3 	.word	0xf10318d3
    798c:	60180304 	.word	0x60180304
    7990:	7ddb683b 	.word	0x7ddb683b
    7994:	d0032b00 	.word	0xd0032b00
    7998:	7e1b683b 	.word	0x7e1b683b
    799c:	d1032b00 	.word	0xd1032b00
    79a0:	0305f04f 	.word	0x0305f04f
    79a4:	e1e9617b 	.word	0xe1e9617b
    79a8:	683b79f9 	.word	0x683b79f9
    79ac:	f6407dd8 	.word	0xf6407dd8
    79b0:	f2c1628c 	.word	0xf2c1628c
    79b4:	460b0200 	.word	0x460b0200
    79b8:	0383ea4f 	.word	0x0383ea4f
    79bc:	ea4f185b 	.word	0xea4f185b
    79c0:	18d30383 	.word	0x18d30383
    79c4:	0308f103 	.word	0x0308f103
    79c8:	701a4602 	.word	0x701a4602
    79cc:	683b79f9 	.word	0x683b79f9
    79d0:	f6407e18 	.word	0xf6407e18
    79d4:	f2c1628c 	.word	0xf2c1628c
    79d8:	460b0200 	.word	0x460b0200
    79dc:	0383ea4f 	.word	0x0383ea4f
    79e0:	ea4f185b 	.word	0xea4f185b
    79e4:	18d30383 	.word	0x18d30383
    79e8:	0308f103 	.word	0x0308f103
    79ec:	705a4602 	.word	0x705a4602
    79f0:	f64079f9 	.word	0xf64079f9
    79f4:	f2c1628c 	.word	0xf2c1628c
    79f8:	460b0200 	.word	0x460b0200
    79fc:	0383ea4f 	.word	0x0383ea4f
    7a00:	ea4f185b 	.word	0xea4f185b
    7a04:	18d30383 	.word	0x18d30383
    7a08:	0308f103 	.word	0x0308f103
    7a0c:	0200f04f 	.word	0x0200f04f
    7a10:	79f970da 	.word	0x79f970da
    7a14:	628cf640 	.word	0x628cf640
    7a18:	0200f2c1 	.word	0x0200f2c1
    7a1c:	ea4f460b 	.word	0xea4f460b
    7a20:	185b0383 	.word	0x185b0383
    7a24:	0383ea4f 	.word	0x0383ea4f
    7a28:	f10318d3 	.word	0xf10318d3
    7a2c:	f04f0308 	.word	0xf04f0308
    7a30:	711a0200 	.word	0x711a0200
    7a34:	f64079f9 	.word	0xf64079f9
    7a38:	f2c1628c 	.word	0xf2c1628c
    7a3c:	460b0200 	.word	0x460b0200
    7a40:	0383ea4f 	.word	0x0383ea4f
    7a44:	ea4f185b 	.word	0xea4f185b
    7a48:	18d30383 	.word	0x18d30383
    7a4c:	0308f103 	.word	0x0308f103
    7a50:	0200f04f 	.word	0x0200f04f
    7a54:	79f9715a 	.word	0x79f9715a
    7a58:	628cf640 	.word	0x628cf640
    7a5c:	0200f2c1 	.word	0x0200f2c1
    7a60:	ea4f460b 	.word	0xea4f460b
    7a64:	185b0383 	.word	0x185b0383
    7a68:	0383ea4f 	.word	0x0383ea4f
    7a6c:	f10318d3 	.word	0xf10318d3
    7a70:	f04f0308 	.word	0xf04f0308
    7a74:	719a0200 	.word	0x719a0200
    7a78:	79f879f9 	.word	0x79f879f9
    7a7c:	628cf640 	.word	0x628cf640
    7a80:	0200f2c1 	.word	0x0200f2c1
    7a84:	ea4f4603 	.word	0xea4f4603
    7a88:	181b0383 	.word	0x181b0383
    7a8c:	0383ea4f 	.word	0x0383ea4f
    7a90:	f10318d3 	.word	0xf10318d3
    7a94:	78180308 	.word	0x78180308
    7a98:	628cf640 	.word	0x628cf640
    7a9c:	0200f2c1 	.word	0x0200f2c1
    7aa0:	ea4f460b 	.word	0xea4f460b
    7aa4:	185b0383 	.word	0x185b0383
    7aa8:	0383ea4f 	.word	0x0383ea4f
    7aac:	f10318d3 	.word	0xf10318d3
    7ab0:	46020308 	.word	0x46020308
    7ab4:	79f971da 	.word	0x79f971da
    7ab8:	f64079f8 	.word	0xf64079f8
    7abc:	f2c1628c 	.word	0xf2c1628c
    7ac0:	46030200 	.word	0x46030200
    7ac4:	0383ea4f 	.word	0x0383ea4f
    7ac8:	ea4f181b 	.word	0xea4f181b
    7acc:	18d30383 	.word	0x18d30383
    7ad0:	0308f103 	.word	0x0308f103
    7ad4:	f6407858 	.word	0xf6407858
    7ad8:	f2c1628c 	.word	0xf2c1628c
    7adc:	460b0200 	.word	0x460b0200
    7ae0:	0383ea4f 	.word	0x0383ea4f
    7ae4:	ea4f185b 	.word	0xea4f185b
    7ae8:	18d30383 	.word	0x18d30383
    7aec:	0310f103 	.word	0x0310f103
    7af0:	701a4602 	.word	0x701a4602
    7af4:	f64079f9 	.word	0xf64079f9
    7af8:	f2c1628c 	.word	0xf2c1628c
    7afc:	460b0200 	.word	0x460b0200
    7b00:	0383ea4f 	.word	0x0383ea4f
    7b04:	ea4f185b 	.word	0xea4f185b
    7b08:	18d30383 	.word	0x18d30383
    7b0c:	0310f103 	.word	0x0310f103
    7b10:	0200f04f 	.word	0x0200f04f
    7b14:	79f9705a 	.word	0x79f9705a
    7b18:	628cf640 	.word	0x628cf640
    7b1c:	0200f2c1 	.word	0x0200f2c1
    7b20:	ea4f460b 	.word	0xea4f460b
    7b24:	185b0383 	.word	0x185b0383
    7b28:	0383ea4f 	.word	0x0383ea4f
    7b2c:	f10318d3 	.word	0xf10318d3
    7b30:	f04f0310 	.word	0xf04f0310
    7b34:	709a0200 	.word	0x709a0200
    7b38:	0300f04f 	.word	0x0300f04f
    7b3c:	683b613b 	.word	0x683b613b
    7b40:	f1a37d1b 	.word	0xf1a37d1b
    7b44:	2b030305 	.word	0x2b030305
    7b48:	a201d81a 	.word	0xa201d81a
    7b4c:	f023f852 	.word	0xf023f852
    7b50:	00007b61 	.word	0x00007b61
    7b54:	00007b69 	.word	0x00007b69
    7b58:	00007b71 	.word	0x00007b71
    7b5c:	00007b79 	.word	0x00007b79
    7b60:	0300f04f 	.word	0x0300f04f
    7b64:	e00f613b 	.word	0xe00f613b
    7b68:	0301f04f 	.word	0x0301f04f
    7b6c:	e00b613b 	.word	0xe00b613b
    7b70:	0302f04f 	.word	0x0302f04f
    7b74:	e007613b 	.word	0xe007613b
    7b78:	0303f04f 	.word	0x0303f04f
    7b7c:	e003613b 	.word	0xe003613b
    7b80:	0305f04f 	.word	0x0305f04f
    7b84:	e0f9617b 	.word	0xe0f9617b
    7b88:	7d5b683b 	.word	0x7d5b683b
    7b8c:	d00a2b01 	.word	0xd00a2b01
    7b90:	d1042b02 	.word	0xd1042b02
    7b94:	f043693b 	.word	0xf043693b
    7b98:	613b0304 	.word	0x613b0304
    7b9c:	f04fe004 	.word	0xf04fe004
    7ba0:	617b0305 	.word	0x617b0305
    7ba4:	bf00e0ea 	.word	0xbf00e0ea
    7ba8:	7d9b683b 	.word	0x7d9b683b
    7bac:	d0042b01 	.word	0xd0042b01
    7bb0:	d00b2b02 	.word	0xd00b2b02
    7bb4:	d0122b00 	.word	0xd0122b00
    7bb8:	693be00d 	.word	0x693be00d
    7bbc:	0308f043 	.word	0x0308f043
    7bc0:	693b613b 	.word	0x693b613b
    7bc4:	0310f043 	.word	0x0310f043
    7bc8:	e009613b 	.word	0xe009613b
    7bcc:	f043693b 	.word	0xf043693b
    7bd0:	613b0308 	.word	0x613b0308
    7bd4:	f04fe004 	.word	0xf04fe004
    7bd8:	617b0305 	.word	0x617b0305
    7bdc:	bf00e0ce 	.word	0xbf00e0ce
    7be0:	2b0179fb 	.word	0x2b0179fb
    7be4:	2b02d059 	.word	0x2b02d059
    7be8:	2b00d002 	.word	0x2b00d002
    7bec:	80baf040 	.word	0x80baf040
    7bf0:	2b0079fb 	.word	0x2b0079fb
    7bf4:	f44fd105 	.word	0xf44fd105
    7bf8:	f2c44340 	.word	0xf2c44340
    7bfc:	60fb0300 	.word	0x60fb0300
    7c00:	79fbe00c 	.word	0x79fbe00c
    7c04:	d1052b02 	.word	0xd1052b02
    7c08:	4300f44f 	.word	0x4300f44f
    7c0c:	0309f2c4 	.word	0x0309f2c4
    7c10:	e00360fb 	.word	0xe00360fb
    7c14:	0301f04f 	.word	0x0301f04f
    7c18:	e0af617b 	.word	0xe0af617b
    7c1c:	f04f68fb 	.word	0xf04f68fb
    7c20:	721a0207 	.word	0x721a0207
    7c24:	f04f68fb 	.word	0xf04f68fb
    7c28:	621a0200 	.word	0x621a0200
    7c2c:	7b1b68fb 	.word	0x7b1b68fb
    7c30:	f063b2db 	.word	0xf063b2db
    7c34:	b2da037f 	.word	0xb2da037f
    7c38:	731a68fb 	.word	0x731a68fb
    7c3c:	685b683b 	.word	0x685b683b
    7c40:	ea4fb2db 	.word	0xea4fb2db
    7c44:	b2da1303 	.word	0xb2da1303
    7c48:	689b683b 	.word	0x689b683b
    7c4c:	4313b2db 	.word	0x4313b2db
    7c50:	68fbb2da 	.word	0x68fbb2da
    7c54:	2028f883 	.word	0x2028f883
    7c58:	681b683b 	.word	0x681b683b
    7c5c:	2313ea4f 	.word	0x2313ea4f
    7c60:	68fbb2da 	.word	0x68fbb2da
    7c64:	683b711a 	.word	0x683b711a
    7c68:	b2da681b 	.word	0xb2da681b
    7c6c:	701a68fb 	.word	0x701a68fb
    7c70:	b2da693b 	.word	0xb2da693b
    7c74:	731a68fb 	.word	0x731a68fb
    7c78:	f04f68fb 	.word	0xf04f68fb
    7c7c:	f8830280 	.word	0xf8830280
    7c80:	68fb2030 	.word	0x68fb2030
    7c84:	0203f04f 	.word	0x0203f04f
    7c88:	68fb605a 	.word	0x68fb605a
    7c8c:	b2db7d1b 	.word	0xb2db7d1b
    7c90:	68fb60bb 	.word	0x68fb60bb
    7c94:	60bb689b 	.word	0x60bb689b
    7c98:	f04fe065 	.word	0xf04fe065
    7c9c:	f2c40300 	.word	0xf2c40300
    7ca0:	f04f0301 	.word	0xf04f0301
    7ca4:	721a0207 	.word	0x721a0207
    7ca8:	0300f04f 	.word	0x0300f04f
    7cac:	0301f2c4 	.word	0x0301f2c4
    7cb0:	0200f04f 	.word	0x0200f04f
    7cb4:	f04f621a 	.word	0xf04f621a
    7cb8:	f2c40300 	.word	0xf2c40300
    7cbc:	f04f0301 	.word	0xf04f0301
    7cc0:	731a0280 	.word	0x731a0280
    7cc4:	0300f04f 	.word	0x0300f04f
    7cc8:	0301f2c4 	.word	0x0301f2c4
    7ccc:	6852683a 	.word	0x6852683a
    7cd0:	1102ea4f 	.word	0x1102ea4f
    7cd4:	6892683a 	.word	0x6892683a
    7cd8:	629a430a 	.word	0x629a430a
    7cdc:	0300f04f 	.word	0x0300f04f
    7ce0:	0301f2c4 	.word	0x0301f2c4
    7ce4:	6812683a 	.word	0x6812683a
    7ce8:	2212ea4f 	.word	0x2212ea4f
    7cec:	711ab2d2 	.word	0x711ab2d2
    7cf0:	0300f04f 	.word	0x0300f04f
    7cf4:	0301f2c4 	.word	0x0301f2c4
    7cf8:	6812683a 	.word	0x6812683a
    7cfc:	701ab2d2 	.word	0x701ab2d2
    7d00:	0300f04f 	.word	0x0300f04f
    7d04:	0301f2c4 	.word	0x0301f2c4
    7d08:	b2d2693a 	.word	0xb2d2693a
    7d0c:	f04f731a 	.word	0xf04f731a
    7d10:	f2c40300 	.word	0xf2c40300
    7d14:	f04f0301 	.word	0xf04f0301
    7d18:	f8830280 	.word	0xf8830280
    7d1c:	f04f2030 	.word	0xf04f2030
    7d20:	f2c40300 	.word	0xf2c40300
    7d24:	f04f0301 	.word	0xf04f0301
    7d28:	741a0200 	.word	0x741a0200
    7d2c:	0300f04f 	.word	0x0300f04f
    7d30:	0301f2c4 	.word	0x0301f2c4
    7d34:	0203f04f 	.word	0x0203f04f
    7d38:	f04f605a 	.word	0xf04f605a
    7d3c:	f2c40300 	.word	0xf2c40300
    7d40:	7d1b0301 	.word	0x7d1b0301
    7d44:	60bbb2db 	.word	0x60bbb2db
    7d48:	0300f04f 	.word	0x0300f04f
    7d4c:	0301f2c4 	.word	0x0301f2c4
    7d50:	b2db7e1b 	.word	0xb2db7e1b
    7d54:	f04f60bb 	.word	0xf04f60bb
    7d58:	f2c40300 	.word	0xf2c40300
    7d5c:	689b0301 	.word	0x689b0301
    7d60:	e00060bb 	.word	0xe00060bb
    7d64:	79fabf00 	.word	0x79fabf00
    7d68:	13f4f640 	.word	0x13f4f640
    7d6c:	0301f2c0 	.word	0x0301f2c0
    7d70:	b2db5c9b 	.word	0xb2db5c9b
    7d74:	4618b25b 	.word	0x4618b25b
    7d78:	ff56f7fe 	.word	0xff56f7fe
    7d7c:	4618697b 	.word	0x4618697b
    7d80:	0718f107 	.word	0x0718f107
    7d84:	bd8046bd 	.word	0xbd8046bd
    7d88:	b083b480 	.word	0xb083b480
    7d8c:	4603af00 	.word	0x4603af00
    7d90:	f44f71fb 	.word	0xf44f71fb
    7d94:	f2ce4361 	.word	0xf2ce4361
    7d98:	f9970300 	.word	0xf9970300
    7d9c:	ea4f2007 	.word	0xea4f2007
    7da0:	79f91252 	.word	0x79f91252
    7da4:	011ff001 	.word	0x011ff001
    7da8:	0001f04f 	.word	0x0001f04f
    7dac:	f101fa00 	.word	0xf101fa00
    7db0:	0220f102 	.word	0x0220f102
    7db4:	1022f843 	.word	0x1022f843
    7db8:	070cf107 	.word	0x070cf107
    7dbc:	bc8046bd 	.word	0xbc8046bd
    7dc0:	bf004770 	.word	0xbf004770
    7dc4:	af00b480 	.word	0xaf00b480
    7dc8:	8f4ff3bf 	.word	0x8f4ff3bf
    7dcc:	426df44f 	.word	0x426df44f
    7dd0:	0200f2ce 	.word	0x0200f2ce
    7dd4:	436df44f 	.word	0x436df44f
    7dd8:	0300f2ce 	.word	0x0300f2ce
    7ddc:	f40368db 	.word	0xf40368db
    7de0:	f04f61e0 	.word	0xf04f61e0
    7de4:	f2c00304 	.word	0xf2c00304
    7de8:	430b53fa 	.word	0x430b53fa
    7dec:	f3bf60d3 	.word	0xf3bf60d3
    7df0:	e7fe8f4f 	.word	0xe7fe8f4f

00007df4 <Init_CAN2>:
    7df4:	af00b480 	.word	0xaf00b480
    7df8:	4340f44f 	.word	0x4340f44f
    7dfc:	030ff2c4 	.word	0x030ff2c4
    7e00:	4240f44f 	.word	0x4240f44f
    7e04:	020ff2c4 	.word	0x020ff2c4
    7e08:	20c4f8d2 	.word	0x20c4f8d2
    7e0c:	4280f442 	.word	0x4280f442
    7e10:	20c4f8c3 	.word	0x20c4f8c3
    7e14:	46bdbf00 	.word	0x46bdbf00
    7e18:	4770bc80 	.word	0x4770bc80

00007e1c <Init_I2C>:
    7e1c:	b082b580 	.word	0xb082b580
    7e20:	f44faf00 	.word	0xf44faf00
    7e24:	f2c44340 	.word	0xf2c44340
    7e28:	607b0305 	.word	0x607b0305
    7e2c:	4340f44f 	.word	0x4340f44f
    7e30:	0302f2c4 	.word	0x0302f2c4
    7e34:	4203f240 	.word	0x4203f240
    7e38:	f44f601a 	.word	0xf44f601a
    7e3c:	f2c44340 	.word	0xf2c44340
    7e40:	f2400302 	.word	0xf2400302
    7e44:	605a4203 	.word	0x605a4203
    7e48:	000bf04f 	.word	0x000bf04f
    7e4c:	ff9cf7ff 	.word	0xff9cf7ff
    7e50:	4340f44f 	.word	0x4340f44f
    7e54:	030ff2c4 	.word	0x030ff2c4
    7e58:	4240f44f 	.word	0x4240f44f
    7e5c:	020ff2c4 	.word	0x020ff2c4
    7e60:	20c4f8d2 	.word	0x20c4f8d2
    7e64:	2200f442 	.word	0x2200f442
    7e68:	20c4f8c3 	.word	0x20c4f8c3
    7e6c:	f04f687b 	.word	0xf04f687b
    7e70:	619a026c 	.word	0x619a026c
    7e74:	f04f687b 	.word	0xf04f687b
    7e78:	611a0296 	.word	0x611a0296
    7e7c:	f04f687b 	.word	0xf04f687b
    7e80:	615a0296 	.word	0x615a0296
    7e84:	f04f687b 	.word	0xf04f687b
    7e88:	601a0244 	.word	0x601a0244
    7e8c:	f04f687b 	.word	0xf04f687b
    7e90:	619a0208 	.word	0x619a0208
    7e94:	f107bf00 	.word	0xf107bf00
    7e98:	46bd0708 	.word	0x46bd0708
    7e9c:	bf00bd80 	.word	0xbf00bd80

00007ea0 <Init_EEPROM>:
    7ea0:	b083b480 	.word	0xb083b480
    7ea4:	f04faf00 	.word	0xf04faf00
    7ea8:	f2c00380 	.word	0xf2c00380
    7eac:	607b0320 	.word	0x607b0320
    7eb0:	f240687a 	.word	0xf240687a
    7eb4:	f2c06302 	.word	0xf2c06302
    7eb8:	61130304 	.word	0x61130304
    7ebc:	f240687b 	.word	0xf240687b
    7ec0:	615a123f 	.word	0x615a123f
    7ec4:	f107bf00 	.word	0xf107bf00
    7ec8:	46bd070c 	.word	0x46bd070c
    7ecc:	4770bc80 	.word	0x4770bc80

00007ed0 <HW_GPS_PowerOn>:
    7ed0:	af00b480 	.word	0xaf00b480
    7ed4:	0340f248 	.word	0x0340f248
    7ed8:	0309f2c2 	.word	0x0309f2c2
    7edc:	0240f248 	.word	0x0240f248
    7ee0:	0209f2c2 	.word	0x0209f2c2
    7ee4:	f04269d2 	.word	0xf04269d2
    7ee8:	61da0204 	.word	0x61da0204
    7eec:	bc8046bd 	.word	0xbc8046bd
    7ef0:	bf004770 	.word	0xbf004770

00007ef4 <HW_GPS_PowerOff>:
    7ef4:	af00b480 	.word	0xaf00b480
    7ef8:	0340f248 	.word	0x0340f248
    7efc:	0309f2c2 	.word	0x0309f2c2
    7f00:	0240f248 	.word	0x0240f248
    7f04:	0209f2c2 	.word	0x0209f2c2
    7f08:	f0426992 	.word	0xf0426992
    7f0c:	619a0204 	.word	0x619a0204
    7f10:	bc8046bd 	.word	0xbc8046bd
    7f14:	bf004770 	.word	0xbf004770

00007f18 <HW_GPS_GetPowerState>:
    7f18:	af00b480 	.word	0xaf00b480
    7f1c:	0340f248 	.word	0x0340f248
    7f20:	0309f2c2 	.word	0x0309f2c2
    7f24:	f003695b 	.word	0xf003695b
    7f28:	2b000304 	.word	0x2b000304
    7f2c:	2300bf14 	.word	0x2300bf14
    7f30:	b2db2301 	.word	0xb2db2301
    7f34:	46bd4618 	.word	0x46bd4618
    7f38:	4770bc80 	.word	0x4770bc80

00007f3c <HW_BMC_CsAccelerationOn>:
    7f3c:	af00b480 	.word	0xaf00b480
    7f40:	4300f44f 	.word	0x4300f44f
    7f44:	0309f2c2 	.word	0x0309f2c2
    7f48:	4200f44f 	.word	0x4200f44f
    7f4c:	0209f2c2 	.word	0x0209f2c2
    7f50:	f44269d2 	.word	0xf44269d2
    7f54:	61da0280 	.word	0x61da0280
    7f58:	bc8046bd 	.word	0xbc8046bd
    7f5c:	bf004770 	.word	0xbf004770

00007f60 <HW_BMC_CsAccelerationOff>:
    7f60:	af00b480 	.word	0xaf00b480
    7f64:	4300f44f 	.word	0x4300f44f
    7f68:	0309f2c2 	.word	0x0309f2c2
    7f6c:	4200f44f 	.word	0x4200f44f
    7f70:	0209f2c2 	.word	0x0209f2c2
    7f74:	f4426992 	.word	0xf4426992
    7f78:	619a0280 	.word	0x619a0280
    7f7c:	bc8046bd 	.word	0xbc8046bd
    7f80:	bf004770 	.word	0xbf004770

00007f84 <HW_BMC_CsMagnetometerOn>:
    7f84:	af00b480 	.word	0xaf00b480
    7f88:	4300f44f 	.word	0x4300f44f
    7f8c:	0309f2c2 	.word	0x0309f2c2
    7f90:	4200f44f 	.word	0x4200f44f
    7f94:	0209f2c2 	.word	0x0209f2c2
    7f98:	f04269d2 	.word	0xf04269d2
    7f9c:	61da0240 	.word	0x61da0240
    7fa0:	bc8046bd 	.word	0xbc8046bd
    7fa4:	bf004770 	.word	0xbf004770

00007fa8 <HW_BMC_CsMagnetometerOff>:
    7fa8:	af00b480 	.word	0xaf00b480
    7fac:	4300f44f 	.word	0x4300f44f
    7fb0:	0309f2c2 	.word	0x0309f2c2
    7fb4:	4200f44f 	.word	0x4200f44f
    7fb8:	0209f2c2 	.word	0x0209f2c2
    7fbc:	f0426992 	.word	0xf0426992
    7fc0:	619a0240 	.word	0x619a0240
    7fc4:	bc8046bd 	.word	0xbc8046bd
    7fc8:	bf004770 	.word	0xbf004770

00007fcc <HW_L3GD20_CsOn>:
    7fcc:	af00b480 	.word	0xaf00b480
    7fd0:	4300f44f 	.word	0x4300f44f
    7fd4:	0309f2c2 	.word	0x0309f2c2
    7fd8:	4200f44f 	.word	0x4200f44f
    7fdc:	0209f2c2 	.word	0x0209f2c2
    7fe0:	f44269d2 	.word	0xf44269d2
    7fe4:	61da3280 	.word	0x61da3280
    7fe8:	bc8046bd 	.word	0xbc8046bd
    7fec:	bf004770 	.word	0xbf004770

00007ff0 <HW_L3GD20_CsOff>:
    7ff0:	af00b480 	.word	0xaf00b480
    7ff4:	4300f44f 	.word	0x4300f44f
    7ff8:	0309f2c2 	.word	0x0309f2c2
    7ffc:	4200f44f 	.word	0x4200f44f
    8000:	0209f2c2 	.word	0x0209f2c2
    8004:	f4426992 	.word	0xf4426992
    8008:	619a3280 	.word	0x619a3280
    800c:	bc8046bd 	.word	0xbc8046bd
    8010:	bf004770 	.word	0xbf004770

00008014 <HW_SD_PowerOn>:
    8014:	af00b480 	.word	0xaf00b480
    8018:	0340f248 	.word	0x0340f248
    801c:	0309f2c2 	.word	0x0309f2c2
    8020:	0240f248 	.word	0x0240f248
    8024:	0209f2c2 	.word	0x0209f2c2
    8028:	f04269d2 	.word	0xf04269d2
    802c:	61da0208 	.word	0x61da0208
    8030:	bc8046bd 	.word	0xbc8046bd
    8034:	bf004770 	.word	0xbf004770

00008038 <HW_SD_PowerOff>:
    8038:	af00b480 	.word	0xaf00b480
    803c:	0340f248 	.word	0x0340f248
    8040:	0309f2c2 	.word	0x0309f2c2
    8044:	0240f248 	.word	0x0240f248
    8048:	0209f2c2 	.word	0x0209f2c2
    804c:	f0426992 	.word	0xf0426992
    8050:	619a0208 	.word	0x619a0208
    8054:	bc8046bd 	.word	0xbc8046bd
    8058:	bf004770 	.word	0xbf004770

0000805c <RTC_Init>:
    805c:	af00b480 	.word	0xaf00b480
    8060:	4340f44f 	.word	0x4340f44f
    8064:	030ff2c4 	.word	0x030ff2c4
    8068:	4240f44f 	.word	0x4240f44f
    806c:	020ff2c4 	.word	0x020ff2c4
    8070:	20c4f8d2 	.word	0x20c4f8d2
    8074:	7200f442 	.word	0x7200f442
    8078:	20c4f8c3 	.word	0x20c4f8c3
    807c:	4380f44f 	.word	0x4380f44f
    8080:	0302f2c4 	.word	0x0302f2c4
    8084:	0211f04f 	.word	0x0211f04f
    8088:	f44f721a 	.word	0xf44f721a
    808c:	f2c44380 	.word	0xf2c44380
    8090:	f04f0302 	.word	0xf04f0302
    8094:	f8830210 	.word	0xf8830210
    8098:	bf00205c 	.word	0xbf00205c
    809c:	bc8046bd 	.word	0xbc8046bd
    80a0:	bf004770 	.word	0xbf004770

000080a4 <GoToSleep>:
    80a4:	b083b480 	.word	0xb083b480
    80a8:	f04faf00 	.word	0xf04faf00
    80ac:	607b0300 	.word	0x607b0300
    80b0:	4340f44f 	.word	0x4340f44f
    80b4:	030ff2c4 	.word	0x030ff2c4
    80b8:	4240f44f 	.word	0x4240f44f
    80bc:	020ff2c4 	.word	0x020ff2c4
    80c0:	20c0f8d2 	.word	0x20c0f8d2
    80c4:	0203f022 	.word	0x0203f022
    80c8:	20c0f8c3 	.word	0x20c0f8c3
    80cc:	f44fbf30 	.word	0xf44fbf30
    80d0:	f2c44340 	.word	0xf2c44340
    80d4:	f8d3030f 	.word	0xf8d3030f
    80d8:	607b30c0 	.word	0x607b30c0
    80dc:	f443687b 	.word	0xf443687b
    80e0:	607b7380 	.word	0x607b7380
    80e4:	4340f44f 	.word	0x4340f44f
    80e8:	030ff2c4 	.word	0x030ff2c4
    80ec:	f8c3687a 	.word	0xf8c3687a
    80f0:	f04f20c0 	.word	0xf04f20c0
    80f4:	46180300 	.word	0x46180300
    80f8:	070cf107 	.word	0x070cf107
    80fc:	bc8046bd 	.word	0xbc8046bd
    8100:	bf004770 	.word	0xbf004770

00008104 <GoToDeepSleep>:
    8104:	b083b480 	.word	0xb083b480
    8108:	f04faf00 	.word	0xf04faf00
    810c:	607b0300 	.word	0x607b0300
    8110:	4340f44f 	.word	0x4340f44f
    8114:	030ff2c4 	.word	0x030ff2c4
    8118:	4240f44f 	.word	0x4240f44f
    811c:	020ff2c4 	.word	0x020ff2c4
    8120:	20c0f8d2 	.word	0x20c0f8d2
    8124:	0203f022 	.word	0x0203f022
    8128:	20c0f8c3 	.word	0x20c0f8c3
    812c:	f44fbf20 	.word	0xf44fbf20
    8130:	f2c44340 	.word	0xf2c44340
    8134:	f8d3030f 	.word	0xf8d3030f
    8138:	607b30c0 	.word	0x607b30c0
    813c:	f443687b 	.word	0xf443687b
    8140:	607b7380 	.word	0x607b7380
    8144:	4340f44f 	.word	0x4340f44f
    8148:	030ff2c4 	.word	0x030ff2c4
    814c:	f8c3687a 	.word	0xf8c3687a
    8150:	f04f20c0 	.word	0xf04f20c0
    8154:	46180300 	.word	0x46180300
    8158:	070cf107 	.word	0x070cf107
    815c:	bc8046bd 	.word	0xbc8046bd
    8160:	bf004770 	.word	0xbf004770

00008164 <HW_SwitchOFF>:
    8164:	b082b580 	.word	0xb082b580
    8168:	f44faf00 	.word	0xf44faf00
    816c:	f2ce4361 	.word	0xf2ce4361
    8170:	f04f0300 	.word	0xf04f0300
    8174:	f8c332ff 	.word	0xf8c332ff
    8178:	f44f2080 	.word	0xf44f2080
    817c:	f2ce4361 	.word	0xf2ce4361
    8180:	f04f0300 	.word	0xf04f0300
    8184:	f8c332ff 	.word	0xf8c332ff
    8188:	f2482084 	.word	0xf2482084
    818c:	f2c20380 	.word	0xf2c20380
    8190:	f04f0309 	.word	0xf04f0309
    8194:	61da5280 	.word	0x61da5280
    8198:	2340f04f 	.word	0x2340f04f
    819c:	607b689b 	.word	0x607b689b
    81a0:	f04fbf00 	.word	0xf04fbf00
    81a4:	689a2340 	.word	0x689a2340
    81a8:	429a687b 	.word	0x429a687b
    81ac:	f04fd30a 	.word	0xf04fd30a
    81b0:	689a2340 	.word	0x689a2340
    81b4:	1ad3687b 	.word	0x1ad3687b
    81b8:	bf8c2b64 	.word	0xbf8c2b64
    81bc:	23012300 	.word	0x23012300
    81c0:	e00bb2db 	.word	0xe00bb2db
    81c4:	ea6f687b 	.word	0xea6f687b
    81c8:	f04f0203 	.word	0xf04f0203
    81cc:	689b2340 	.word	0x689b2340
    81d0:	2b6418d3 	.word	0x2b6418d3
    81d4:	2300bf8c 	.word	0x2300bf8c
    81d8:	b2db2301 	.word	0xb2db2301
    81dc:	d1e02b00 	.word	0xd1e02b00
    81e0:	0001f04f 	.word	0x0001f04f
    81e4:	0100f04f 	.word	0x0100f04f
    81e8:	fea8f001 	.word	0xfea8f001
    81ec:	0001f04f 	.word	0x0001f04f
    81f0:	0102f04f 	.word	0x0102f04f
    81f4:	fea2f001 	.word	0xfea2f001
    81f8:	2340f04f 	.word	0x2340f04f
    81fc:	607b689b 	.word	0x607b689b
    8200:	f04fbf00 	.word	0xf04fbf00
    8204:	689a2340 	.word	0x689a2340
    8208:	429a687b 	.word	0x429a687b
    820c:	f04fd30a 	.word	0xf04fd30a
    8210:	689a2340 	.word	0x689a2340
    8214:	1ad3687b 	.word	0x1ad3687b
    8218:	bf8c2b4b 	.word	0xbf8c2b4b
    821c:	23012300 	.word	0x23012300
    8220:	e00bb2db 	.word	0xe00bb2db
    8224:	ea6f687b 	.word	0xea6f687b
    8228:	f04f0203 	.word	0xf04f0203
    822c:	689b2340 	.word	0x689b2340
    8230:	2b4b18d3 	.word	0x2b4b18d3
    8234:	2300bf8c 	.word	0x2300bf8c
    8238:	b2db2301 	.word	0xb2db2301
    823c:	d1e02b00 	.word	0xd1e02b00
    8240:	0001f04f 	.word	0x0001f04f
    8244:	0105f04f 	.word	0x0105f04f
    8248:	fe78f001 	.word	0xfe78f001
    824c:	2340f04f 	.word	0x2340f04f
    8250:	607b689b 	.word	0x607b689b
    8254:	f248e01f 	.word	0xf248e01f
    8258:	f2c20320 	.word	0xf2c20320
    825c:	695b0309 	.word	0x695b0309
    8260:	3393ea4f 	.word	0x3393ea4f
    8264:	0301f003 	.word	0x0301f003
    8268:	d0142b00 	.word	0xd0142b00
    826c:	0320f248 	.word	0x0320f248
    8270:	0309f2c2 	.word	0x0309f2c2
    8274:	0220f248 	.word	0x0220f248
    8278:	0209f2c2 	.word	0x0209f2c2
    827c:	f04269d2 	.word	0xf04269d2
    8280:	61da4200 	.word	0x61da4200
    8284:	4340f44f 	.word	0x4340f44f
    8288:	030ff2c4 	.word	0x030ff2c4
    828c:	0200f04f 	.word	0x0200f04f
    8290:	20c4f8c3 	.word	0x20c4f8c3
    8294:	f04fe7fe 	.word	0xf04fe7fe
    8298:	689a2340 	.word	0x689a2340
    829c:	429a687b 	.word	0x429a687b
    82a0:	f04fd30c 	.word	0xf04fd30c
    82a4:	689a2340 	.word	0x689a2340
    82a8:	1ad2687b 	.word	0x1ad2687b
    82ac:	3350f24c 	.word	0x3350f24c
    82b0:	bf8c429a 	.word	0xbf8c429a
    82b4:	23012300 	.word	0x23012300
    82b8:	e00db2db 	.word	0xe00db2db
    82bc:	ea6f687b 	.word	0xea6f687b
    82c0:	f04f0203 	.word	0xf04f0203
    82c4:	689b2340 	.word	0x689b2340
    82c8:	f24c18d2 	.word	0xf24c18d2
    82cc:	429a3350 	.word	0x429a3350
    82d0:	2300bf8c 	.word	0x2300bf8c
    82d4:	b2db2301 	.word	0xb2db2301
    82d8:	d1bc2b00 	.word	0xd1bc2b00
    82dc:	fd72f7ff 	.word	0xfd72f7ff
    82e0:	0708f107 	.word	0x0708f107
    82e4:	bd8046bd 	.word	0xbd8046bd

000082e8 <HW_SDCardPresent>:
    82e8:	b083b480 	.word	0xb083b480
    82ec:	6078af00 	.word	0x6078af00
    82f0:	2b00687b 	.word	0x2b00687b
    82f4:	f04fd102 	.word	0xf04fd102
    82f8:	e0140301 	.word	0xe0140301
    82fc:	0380f248 	.word	0x0380f248
    8300:	0309f2c2 	.word	0x0309f2c2
    8304:	ea4f695b 	.word	0xea4f695b
    8308:	b2db7353 	.word	0xb2db7353
    830c:	0301f003 	.word	0x0301f003
    8310:	2b00b2db 	.word	0x2b00b2db
    8314:	2300bf14 	.word	0x2300bf14
    8318:	b2db2301 	.word	0xb2db2301
    831c:	687b461a 	.word	0x687b461a
    8320:	f04f701a 	.word	0xf04f701a
    8324:	46180300 	.word	0x46180300
    8328:	070cf107 	.word	0x070cf107
    832c:	bc8046bd 	.word	0xbc8046bd
    8330:	bf004770 	.word	0xbf004770

00008334 <HW_GetModuleID>:
    8334:	b083b480 	.word	0xb083b480
    8338:	6078af00 	.word	0x6078af00
    833c:	2b00687b 	.word	0x2b00687b
    8340:	f04fd102 	.word	0xf04fd102
    8344:	e02e0301 	.word	0xe02e0301
    8348:	0320f248 	.word	0x0320f248
    834c:	0309f2c2 	.word	0x0309f2c2
    8350:	ea4f695b 	.word	0xea4f695b
    8354:	b2db6393 	.word	0xb2db6393
    8358:	0301f003 	.word	0x0301f003
    835c:	f248b2da 	.word	0xf248b2da
    8360:	f2c20320 	.word	0xf2c20320
    8364:	695b0309 	.word	0x695b0309
    8368:	7313ea4f 	.word	0x7313ea4f
    836c:	f003b2db 	.word	0xf003b2db
    8370:	b2db0301 	.word	0xb2db0301
    8374:	0343ea4f 	.word	0x0343ea4f
    8378:	4313b2db 	.word	0x4313b2db
    837c:	f248b2da 	.word	0xf248b2da
    8380:	f2c20320 	.word	0xf2c20320
    8384:	695b0309 	.word	0x695b0309
    8388:	7353ea4f 	.word	0x7353ea4f
    838c:	f003b2db 	.word	0xf003b2db
    8390:	b2db0301 	.word	0xb2db0301
    8394:	0383ea4f 	.word	0x0383ea4f
    8398:	4313b2db 	.word	0x4313b2db
    839c:	687bb2da 	.word	0x687bb2da
    83a0:	f04f701a 	.word	0xf04f701a
    83a4:	46180300 	.word	0x46180300
    83a8:	070cf107 	.word	0x070cf107
    83ac:	bc8046bd 	.word	0xbc8046bd
    83b0:	bf004770 	.word	0xbf004770

000083b4 <HW_SetLED>:
    83b4:	b085b480 	.word	0xb085b480
    83b8:	4602af00 	.word	0x4602af00
    83bc:	71fa460b 	.word	0x71fa460b
    83c0:	f04f71bb 	.word	0xf04f71bb
    83c4:	60fb0300 	.word	0x60fb0300
    83c8:	2b0179fb 	.word	0x2b0179fb
    83cc:	2b02d002 	.word	0x2b02d002
    83d0:	e0e7d074 	.word	0xe0e7d074
    83d4:	2b0079bb 	.word	0x2b0079bb
    83d8:	f248d118 	.word	0xf248d118
    83dc:	f2c20320 	.word	0xf2c20320
    83e0:	f2480309 	.word	0xf2480309
    83e4:	f2c20220 	.word	0xf2c20220
    83e8:	69d20209 	.word	0x69d20209
    83ec:	0280f442 	.word	0x0280f442
    83f0:	f24861da 	.word	0xf24861da
    83f4:	f2c20320 	.word	0xf2c20320
    83f8:	f2480309 	.word	0xf2480309
    83fc:	f2c20220 	.word	0xf2c20220
    8400:	69d20209 	.word	0x69d20209
    8404:	2200f442 	.word	0x2200f442
    8408:	e0cf61da 	.word	0xe0cf61da
    840c:	2b0279bb 	.word	0x2b0279bb
    8410:	f248d118 	.word	0xf248d118
    8414:	f2c20320 	.word	0xf2c20320
    8418:	f2480309 	.word	0xf2480309
    841c:	f2c20220 	.word	0xf2c20220
    8420:	69d20209 	.word	0x69d20209
    8424:	2200f442 	.word	0x2200f442
    8428:	f24861da 	.word	0xf24861da
    842c:	f2c20320 	.word	0xf2c20320
    8430:	f2480309 	.word	0xf2480309
    8434:	f2c20220 	.word	0xf2c20220
    8438:	69920209 	.word	0x69920209
    843c:	0280f442 	.word	0x0280f442
    8440:	e0b3619a 	.word	0xe0b3619a
    8444:	2b0179bb 	.word	0x2b0179bb
    8448:	f248d118 	.word	0xf248d118
    844c:	f2c20320 	.word	0xf2c20320
    8450:	f2480309 	.word	0xf2480309
    8454:	f2c20220 	.word	0xf2c20220
    8458:	69920209 	.word	0x69920209
    845c:	2200f442 	.word	0x2200f442
    8460:	f248619a 	.word	0xf248619a
    8464:	f2c20320 	.word	0xf2c20320
    8468:	f2480309 	.word	0xf2480309
    846c:	f2c20220 	.word	0xf2c20220
    8470:	69d20209 	.word	0x69d20209
    8474:	0280f442 	.word	0x0280f442
    8478:	e09761da 	.word	0xe09761da
    847c:	2b0379bb 	.word	0x2b0379bb
    8480:	f248d118 	.word	0xf248d118
    8484:	f2c20320 	.word	0xf2c20320
    8488:	f2480309 	.word	0xf2480309
    848c:	f2c20220 	.word	0xf2c20220
    8490:	69920209 	.word	0x69920209
    8494:	2200f442 	.word	0x2200f442
    8498:	f248619a 	.word	0xf248619a
    849c:	f2c20320 	.word	0xf2c20320
    84a0:	f2480309 	.word	0xf2480309
    84a4:	f2c20220 	.word	0xf2c20220
    84a8:	69920209 	.word	0x69920209
    84ac:	0280f442 	.word	0x0280f442
    84b0:	e07b619a 	.word	0xe07b619a
    84b4:	0301f04f 	.word	0x0301f04f
    84b8:	e07760fb 	.word	0xe07760fb
    84bc:	2b0079bb 	.word	0x2b0079bb
    84c0:	f248d118 	.word	0xf248d118
    84c4:	f2c20320 	.word	0xf2c20320
    84c8:	f2480309 	.word	0xf2480309
    84cc:	f2c20220 	.word	0xf2c20220
    84d0:	69d20209 	.word	0x69d20209
    84d4:	7280f042 	.word	0x7280f042
    84d8:	f24861da 	.word	0xf24861da
    84dc:	f2c20320 	.word	0xf2c20320
    84e0:	f2480309 	.word	0xf2480309
    84e4:	f2c20220 	.word	0xf2c20220
    84e8:	69d20209 	.word	0x69d20209
    84ec:	7200f042 	.word	0x7200f042
    84f0:	e05b61da 	.word	0xe05b61da
    84f4:	2b0179bb 	.word	0x2b0179bb
    84f8:	f248d118 	.word	0xf248d118
    84fc:	f2c20320 	.word	0xf2c20320
    8500:	f2480309 	.word	0xf2480309
    8504:	f2c20220 	.word	0xf2c20220
    8508:	69d20209 	.word	0x69d20209
    850c:	7280f042 	.word	0x7280f042
    8510:	f24861da 	.word	0xf24861da
    8514:	f2c20320 	.word	0xf2c20320
    8518:	f2480309 	.word	0xf2480309
    851c:	f2c20220 	.word	0xf2c20220
    8520:	69920209 	.word	0x69920209
    8524:	7200f042 	.word	0x7200f042
    8528:	e03f619a 	.word	0xe03f619a
    852c:	2b0279bb 	.word	0x2b0279bb
    8530:	f248d118 	.word	0xf248d118
    8534:	f2c20320 	.word	0xf2c20320
    8538:	f2480309 	.word	0xf2480309
    853c:	f2c20220 	.word	0xf2c20220
    8540:	69920209 	.word	0x69920209
    8544:	7280f042 	.word	0x7280f042
    8548:	f248619a 	.word	0xf248619a
    854c:	f2c20320 	.word	0xf2c20320
    8550:	f2480309 	.word	0xf2480309
    8554:	f2c20220 	.word	0xf2c20220
    8558:	69d20209 	.word	0x69d20209
    855c:	7200f042 	.word	0x7200f042
    8560:	e02361da 	.word	0xe02361da
    8564:	2b0379bb 	.word	0x2b0379bb
    8568:	f248d118 	.word	0xf248d118
    856c:	f2c20320 	.word	0xf2c20320
    8570:	f2480309 	.word	0xf2480309
    8574:	f2c20220 	.word	0xf2c20220
    8578:	69920209 	.word	0x69920209
    857c:	7280f042 	.word	0x7280f042
    8580:	f248619a 	.word	0xf248619a
    8584:	f2c20320 	.word	0xf2c20320
    8588:	f2480309 	.word	0xf2480309
    858c:	f2c20220 	.word	0xf2c20220
    8590:	69920209 	.word	0x69920209
    8594:	7200f042 	.word	0x7200f042
    8598:	e007619a 	.word	0xe007619a
    859c:	0301f04f 	.word	0x0301f04f
    85a0:	e00360fb 	.word	0xe00360fb
    85a4:	0302f04f 	.word	0x0302f04f
    85a8:	bf0060fb 	.word	0xbf0060fb
    85ac:	461868fb 	.word	0x461868fb
    85b0:	0714f107 	.word	0x0714f107
    85b4:	bc8046bd 	.word	0xbc8046bd
    85b8:	bf004770 	.word	0xbf004770

000085bc <HW_GetDINn>:
    85bc:	b084b580 	.word	0xb084b580
    85c0:	4603af00 	.word	0x4603af00
    85c4:	71fb6039 	.word	0x71fb6039
    85c8:	2b00683b 	.word	0x2b00683b
    85cc:	f04fd102 	.word	0xf04fd102
    85d0:	e0220301 	.word	0xe0220301
    85d4:	0308f107 	.word	0x0308f107
    85d8:	f0004618 	.word	0xf0004618
    85dc:	60f8f823 	.word	0x60f8f823
    85e0:	2b0068fb 	.word	0x2b0068fb
    85e4:	68fbd001 	.word	0x68fbd001
    85e8:	79fbe017 	.word	0x79fbe017
    85ec:	d1052b00 	.word	0xd1052b00
    85f0:	f00368bb 	.word	0xf00368bb
    85f4:	683b0201 	.word	0x683b0201
    85f8:	e00d601a 	.word	0xe00d601a
    85fc:	2b0179fb 	.word	0x2b0179fb
    8600:	68bbd107 	.word	0x68bbd107
    8604:	0353ea4f 	.word	0x0353ea4f
    8608:	0201f003 	.word	0x0201f003
    860c:	601a683b 	.word	0x601a683b
    8610:	f04fe002 	.word	0xf04fe002
    8614:	60fb0302 	.word	0x60fb0302
    8618:	461868fb 	.word	0x461868fb
    861c:	0710f107 	.word	0x0710f107
    8620:	bd8046bd 	.word	0xbd8046bd

00008624 <HW_GetDIN>:
    8624:	b085b480 	.word	0xb085b480
    8628:	6078af00 	.word	0x6078af00
    862c:	0300f04f 	.word	0x0300f04f
    8630:	f04f60fb 	.word	0xf04f60fb
    8634:	60bb0300 	.word	0x60bb0300
    8638:	2b00687b 	.word	0x2b00687b
    863c:	f04fd102 	.word	0xf04fd102
    8640:	e01b0301 	.word	0xe01b0301
    8644:	0320f248 	.word	0x0320f248
    8648:	0309f2c2 	.word	0x0309f2c2
    864c:	f403695b 	.word	0xf403695b
    8650:	ea4f1380 	.word	0xea4f1380
    8654:	60fb5313 	.word	0x60fb5313
    8658:	0320f248 	.word	0x0320f248
    865c:	0309f2c2 	.word	0x0309f2c2
    8660:	f403695b 	.word	0xf403695b
    8664:	ea4f0300 	.word	0xea4f0300
    8668:	68fa5393 	.word	0x68fa5393
    866c:	60fb4313 	.word	0x60fb4313
    8670:	ea6f68fb 	.word	0xea6f68fb
    8674:	687b0203 	.word	0x687b0203
    8678:	68bb601a 	.word	0x68bb601a
    867c:	f1074618 	.word	0xf1074618
    8680:	46bd0714 	.word	0x46bd0714
    8684:	4770bc80 	.word	0x4770bc80

00008688 <HW_SetDOUTn>:
    8688:	b085b480 	.word	0xb085b480
    868c:	4602af00 	.word	0x4602af00
    8690:	71fa460b 	.word	0x71fa460b
    8694:	f04f71bb 	.word	0xf04f71bb
    8698:	60fb0300 	.word	0x60fb0300
    869c:	2b0079fb 	.word	0x2b0079fb
    86a0:	79bbd11c 	.word	0x79bbd11c
    86a4:	d00c2b00 	.word	0xd00c2b00
    86a8:	0320f248 	.word	0x0320f248
    86ac:	0309f2c2 	.word	0x0309f2c2
    86b0:	0220f248 	.word	0x0220f248
    86b4:	0209f2c2 	.word	0x0209f2c2
    86b8:	f4426992 	.word	0xf4426992
    86bc:	619a2280 	.word	0x619a2280
    86c0:	f248e010 	.word	0xf248e010
    86c4:	f2c20320 	.word	0xf2c20320
    86c8:	f2480309 	.word	0xf2480309
    86cc:	f2c20220 	.word	0xf2c20220
    86d0:	69d20209 	.word	0x69d20209
    86d4:	2280f442 	.word	0x2280f442
    86d8:	e00361da 	.word	0xe00361da
    86dc:	0302f04f 	.word	0x0302f04f
    86e0:	bf0060fb 	.word	0xbf0060fb
    86e4:	461868fb 	.word	0x461868fb
    86e8:	0714f107 	.word	0x0714f107
    86ec:	bc8046bd 	.word	0xbc8046bd
    86f0:	bf004770 	.word	0xbf004770

000086f4 <HW_SetDOUT>:
    86f4:	b083b480 	.word	0xb083b480
    86f8:	6078af00 	.word	0x6078af00
    86fc:	2b00687b 	.word	0x2b00687b
    8700:	f04fd102 	.word	0xf04fd102
    8704:	e0200301 	.word	0xe0200301
    8708:	681b687b 	.word	0x681b687b
    870c:	0301f003 	.word	0x0301f003
    8710:	d00c2b00 	.word	0xd00c2b00
    8714:	0320f248 	.word	0x0320f248
    8718:	0309f2c2 	.word	0x0309f2c2
    871c:	0220f248 	.word	0x0220f248
    8720:	0209f2c2 	.word	0x0209f2c2
    8724:	f4426992 	.word	0xf4426992
    8728:	619a2280 	.word	0x619a2280
    872c:	f248e00b 	.word	0xf248e00b
    8730:	f2c20320 	.word	0xf2c20320
    8734:	f2480309 	.word	0xf2480309
    8738:	f2c20220 	.word	0xf2c20220
    873c:	69d20209 	.word	0x69d20209
    8740:	2280f442 	.word	0x2280f442
    8744:	f04f61da 	.word	0xf04f61da
    8748:	46180300 	.word	0x46180300
    874c:	070cf107 	.word	0x070cf107
    8750:	bc8046bd 	.word	0xbc8046bd
    8754:	bf004770 	.word	0xbf004770

00008758 <HW_GetDOUT>:
    8758:	b083b480 	.word	0xb083b480
    875c:	6078af00 	.word	0x6078af00
    8760:	2b00687b 	.word	0x2b00687b
    8764:	f04fd102 	.word	0xf04fd102
    8768:	e00c0301 	.word	0xe00c0301
    876c:	0320f248 	.word	0x0320f248
    8770:	0309f2c2 	.word	0x0309f2c2
    8774:	ea4f699b 	.word	0xea4f699b
    8778:	f0034393 	.word	0xf0034393
    877c:	687b0201 	.word	0x687b0201
    8780:	f04f601a 	.word	0xf04f601a
    8784:	46180300 	.word	0x46180300
    8788:	070cf107 	.word	0x070cf107
    878c:	bc8046bd 	.word	0xbc8046bd
    8790:	bf004770 	.word	0xbf004770

00008794 <HW_JumpToBootloader>:
    8794:	b082b5b0 	.word	0xb082b5b0
    8798:	6078af00 	.word	0x6078af00
    879c:	4300f44f 	.word	0x4300f44f
    87a0:	0304f2c4 	.word	0x0304f2c4
    87a4:	0201f04f 	.word	0x0201f04f
    87a8:	f44f601a 	.word	0xf44f601a
    87ac:	f2ce4361 	.word	0xf2ce4361
    87b0:	f04f0300 	.word	0xf04f0300
    87b4:	f8c332ff 	.word	0xf8c332ff
    87b8:	f44f2080 	.word	0xf44f2080
    87bc:	f2ce4361 	.word	0xf2ce4361
    87c0:	f04f0300 	.word	0xf04f0300
    87c4:	f8c332ff 	.word	0xf8c332ff
    87c8:	f44f2084 	.word	0xf44f2084
    87cc:	f2c142f9 	.word	0xf2c142f9
    87d0:	f6400200 	.word	0xf6400200
    87d4:	f2c013f8 	.word	0xf2c013f8
    87d8:	46150301 	.word	0x46150301
    87dc:	cc0f461c 	.word	0xcc0f461c
    87e0:	60696028 	.word	0x60696028
    87e4:	60eb60aa 	.word	0x60eb60aa
    87e8:	742b7823 	.word	0x742b7823
    87ec:	43a0f647 	.word	0x43a0f647
    87f0:	0300f2c1 	.word	0x0300f2c1
    87f4:	601a687a 	.word	0x601a687a
    87f8:	fae4f7ff 	.word	0xfae4f7ff
    87fc:	0708f107 	.word	0x0708f107
    8800:	bdb046bd 	.word	0xbdb046bd

00008804 <HW_Init>:
    8804:	b082b580 	.word	0xb082b580
    8808:	f44faf00 	.word	0xf44faf00
    880c:	f2c24300 	.word	0xf2c24300
    8810:	f04f0309 	.word	0xf04f0309
    8814:	f2c00240 	.word	0xf2c00240
    8818:	619a6241 	.word	0x619a6241
    881c:	0320f248 	.word	0x0320f248
    8820:	0309f2c2 	.word	0x0309f2c2
    8824:	7280f44f 	.word	0x7280f44f
    8828:	0200f2c8 	.word	0x0200f2c8
    882c:	f248619a 	.word	0xf248619a
    8830:	f2c20380 	.word	0xf2c20380
    8834:	f04f0309 	.word	0xf04f0309
    8838:	619a5280 	.word	0x619a5280
    883c:	4300f44f 	.word	0x4300f44f
    8840:	0309f2c2 	.word	0x0309f2c2
    8844:	0240f04f 	.word	0x0240f04f
    8848:	6245f2c0 	.word	0x6245f2c0
    884c:	f248601a 	.word	0xf248601a
    8850:	f2c20320 	.word	0xf2c20320
    8854:	f44f0309 	.word	0xf44f0309
    8858:	f2c862a0 	.word	0xf2c862a0
    885c:	601a324c 	.word	0x601a324c
    8860:	0340f248 	.word	0x0340f248
    8864:	0309f2c2 	.word	0x0309f2c2
    8868:	020cf04f 	.word	0x020cf04f
    886c:	f248601a 	.word	0xf248601a
    8870:	f2c20380 	.word	0xf2c20380
    8874:	f04f0309 	.word	0xf04f0309
    8878:	601a5280 	.word	0x601a5280
    887c:	4340f44f 	.word	0x4340f44f
    8880:	0302f2c4 	.word	0x0302f2c4
    8884:	4203f240 	.word	0x4203f240
    8888:	f44f601a 	.word	0xf44f601a
    888c:	f2c44340 	.word	0xf2c44340
    8890:	f2400302 	.word	0xf2400302
    8894:	605a4203 	.word	0x605a4203
    8898:	4340f44f 	.word	0x4340f44f
    889c:	0302f2c4 	.word	0x0302f2c4
    88a0:	0201f04f 	.word	0x0201f04f
    88a4:	f44f609a 	.word	0xf44f609a
    88a8:	f2c44340 	.word	0xf2c44340
    88ac:	f04f0302 	.word	0xf04f0302
    88b0:	60da0201 	.word	0x60da0201
    88b4:	4340f44f 	.word	0x4340f44f
    88b8:	0302f2c4 	.word	0x0302f2c4
    88bc:	0230f04f 	.word	0x0230f04f
    88c0:	f44f619a 	.word	0xf44f619a
    88c4:	f2c44340 	.word	0xf2c44340
    88c8:	f04f0302 	.word	0xf04f0302
    88cc:	61da0232 	.word	0x61da0232
    88d0:	4340f44f 	.word	0x4340f44f
    88d4:	0302f2c4 	.word	0x0302f2c4
    88d8:	02a2f04f 	.word	0x02a2f04f
    88dc:	f44f621a 	.word	0xf44f621a
    88e0:	f2c44340 	.word	0xf2c44340
    88e4:	f04f0302 	.word	0xf04f0302
    88e8:	625a02a2 	.word	0x625a02a2
    88ec:	4340f44f 	.word	0x4340f44f
    88f0:	0302f2c4 	.word	0x0302f2c4
    88f4:	0201f04f 	.word	0x0201f04f
    88f8:	f44f629a 	.word	0xf44f629a
    88fc:	f2c44340 	.word	0xf2c44340
    8900:	f04f0302 	.word	0xf04f0302
    8904:	62da0201 	.word	0x62da0201
    8908:	4340f44f 	.word	0x4340f44f
    890c:	0302f2c4 	.word	0x0302f2c4
    8910:	0202f04f 	.word	0x0202f04f
    8914:	f44f63da 	.word	0xf44f63da
    8918:	f2c44340 	.word	0xf2c44340
    891c:	f04f0302 	.word	0xf04f0302
    8920:	641a0230 	.word	0x641a0230
    8924:	4340f44f 	.word	0x4340f44f
    8928:	0302f2c4 	.word	0x0302f2c4
    892c:	0232f04f 	.word	0x0232f04f
    8930:	f44f645a 	.word	0xf44f645a
    8934:	f2c44340 	.word	0xf2c44340
    8938:	f04f0302 	.word	0xf04f0302
    893c:	649a0232 	.word	0x649a0232
    8940:	4340f44f 	.word	0x4340f44f
    8944:	0302f2c4 	.word	0x0302f2c4
    8948:	0230f04f 	.word	0x0230f04f
    894c:	f44f659a 	.word	0xf44f659a
    8950:	f2c44340 	.word	0xf2c44340
    8954:	f04f0302 	.word	0xf04f0302
    8958:	665a0230 	.word	0x665a0230
    895c:	4340f44f 	.word	0x4340f44f
    8960:	0302f2c4 	.word	0x0302f2c4
    8964:	0230f04f 	.word	0x0230f04f
    8968:	f44f669a 	.word	0xf44f669a
    896c:	f2c44340 	.word	0xf2c44340
    8970:	f04f0302 	.word	0xf04f0302
    8974:	675a0200 	.word	0x675a0200
    8978:	4340f44f 	.word	0x4340f44f
    897c:	0302f2c4 	.word	0x0302f2c4
    8980:	0200f04f 	.word	0x0200f04f
    8984:	f44f679a 	.word	0xf44f679a
    8988:	f2c44340 	.word	0xf2c44340
    898c:	f04f0302 	.word	0xf04f0302
    8990:	f8c30214 	.word	0xf8c30214
    8994:	f44f2080 	.word	0xf44f2080
    8998:	f2c44340 	.word	0xf2c44340
    899c:	f04f0302 	.word	0xf04f0302
    89a0:	f8c3020c 	.word	0xf8c3020c
    89a4:	f44f2084 	.word	0xf44f2084
    89a8:	f2c44340 	.word	0xf2c44340
    89ac:	f04f0302 	.word	0xf04f0302
    89b0:	f8c30204 	.word	0xf8c30204
    89b4:	f44f2090 	.word	0xf44f2090
    89b8:	f2c44340 	.word	0xf2c44340
    89bc:	f04f0302 	.word	0xf04f0302
    89c0:	f8c30200 	.word	0xf8c30200
    89c4:	f44f20a0 	.word	0xf44f20a0
    89c8:	f2c44340 	.word	0xf2c44340
    89cc:	f04f0302 	.word	0xf04f0302
    89d0:	f8c30230 	.word	0xf8c30230
    89d4:	f44f20a4 	.word	0xf44f20a4
    89d8:	f2c44340 	.word	0xf2c44340
    89dc:	f04f0302 	.word	0xf04f0302
    89e0:	f8c30222 	.word	0xf8c30222
    89e4:	f44f20a8 	.word	0xf44f20a8
    89e8:	f2c44340 	.word	0xf2c44340
    89ec:	f04f0302 	.word	0xf04f0302
    89f0:	f8c30230 	.word	0xf8c30230
    89f4:	f44f20b8 	.word	0xf44f20b8
    89f8:	f2c44340 	.word	0xf2c44340
    89fc:	f04f0302 	.word	0xf04f0302
    8a00:	f8c30230 	.word	0xf8c30230
    8a04:	f44f20bc 	.word	0xf44f20bc
    8a08:	f2c44340 	.word	0xf2c44340
    8a0c:	f04f0302 	.word	0xf04f0302
    8a10:	f8c30220 	.word	0xf8c30220
    8a14:	f44f20c8 	.word	0xf44f20c8
    8a18:	f2c44340 	.word	0xf2c44340
    8a1c:	f04f0302 	.word	0xf04f0302
    8a20:	f8c30200 	.word	0xf8c30200
    8a24:	f44f20cc 	.word	0xf44f20cc
    8a28:	f2c44340 	.word	0xf2c44340
    8a2c:	f04f0302 	.word	0xf04f0302
    8a30:	f8c30228 	.word	0xf8c30228
    8a34:	f44f20d0 	.word	0xf44f20d0
    8a38:	f2c44340 	.word	0xf2c44340
    8a3c:	f04f0302 	.word	0xf04f0302
    8a40:	f8c30200 	.word	0xf8c30200
    8a44:	f44f20d8 	.word	0xf44f20d8
    8a48:	f2c44340 	.word	0xf2c44340
    8a4c:	f04f0302 	.word	0xf04f0302
    8a50:	f8c30228 	.word	0xf8c30228
    8a54:	f44f20dc 	.word	0xf44f20dc
    8a58:	f2c44340 	.word	0xf2c44340
    8a5c:	f04f0302 	.word	0xf04f0302
    8a60:	f8c30200 	.word	0xf8c30200
    8a64:	f44f20e0 	.word	0xf44f20e0
    8a68:	f2c44340 	.word	0xf2c44340
    8a6c:	f04f0302 	.word	0xf04f0302
    8a70:	f8c30200 	.word	0xf8c30200
    8a74:	f44f20e4 	.word	0xf44f20e4
    8a78:	f2c44340 	.word	0xf2c44340
    8a7c:	f04f0302 	.word	0xf04f0302
    8a80:	f8c30220 	.word	0xf8c30220
    8a84:	f44f20e8 	.word	0xf44f20e8
    8a88:	f2c44340 	.word	0xf2c44340
    8a8c:	f04f0302 	.word	0xf04f0302
    8a90:	f8c30220 	.word	0xf8c30220
    8a94:	f44f20f0 	.word	0xf44f20f0
    8a98:	f2c44340 	.word	0xf2c44340
    8a9c:	f04f0302 	.word	0xf04f0302
    8aa0:	f8c30220 	.word	0xf8c30220
    8aa4:	f44f20f4 	.word	0xf44f20f4
    8aa8:	f2c44340 	.word	0xf2c44340
    8aac:	f04f0302 	.word	0xf04f0302
    8ab0:	f8c30230 	.word	0xf8c30230
    8ab4:	f44f20fc 	.word	0xf44f20fc
    8ab8:	f2c44340 	.word	0xf2c44340
    8abc:	f04f0302 	.word	0xf04f0302
    8ac0:	f8c30232 	.word	0xf8c30232
    8ac4:	f44f2100 	.word	0xf44f2100
    8ac8:	f2c44340 	.word	0xf2c44340
    8acc:	f04f0302 	.word	0xf04f0302
    8ad0:	f8c30232 	.word	0xf8c30232
    8ad4:	f44f2104 	.word	0xf44f2104
    8ad8:	f2c44340 	.word	0xf2c44340
    8adc:	f04f0302 	.word	0xf04f0302
    8ae0:	f8c30200 	.word	0xf8c30200
    8ae4:	f44f2108 	.word	0xf44f2108
    8ae8:	f2c44340 	.word	0xf2c44340
    8aec:	f04f0302 	.word	0xf04f0302
    8af0:	f8c30200 	.word	0xf8c30200
    8af4:	f44f210c 	.word	0xf44f210c
    8af8:	f2c44340 	.word	0xf2c44340
    8afc:	f04f0302 	.word	0xf04f0302
    8b00:	f8c30220 	.word	0xf8c30220
    8b04:	f44f2110 	.word	0xf44f2110
    8b08:	f2c44340 	.word	0xf2c44340
    8b0c:	f04f0302 	.word	0xf04f0302
    8b10:	f8c30220 	.word	0xf8c30220
    8b14:	f44f2114 	.word	0xf44f2114
    8b18:	f2c44340 	.word	0xf2c44340
    8b1c:	f04f0302 	.word	0xf04f0302
    8b20:	f8c30220 	.word	0xf8c30220
    8b24:	f44f2118 	.word	0xf44f2118
    8b28:	f2c44340 	.word	0xf2c44340
    8b2c:	f04f0302 	.word	0xf04f0302
    8b30:	f8c30201 	.word	0xf8c30201
    8b34:	f44f211c 	.word	0xf44f211c
    8b38:	f2c44340 	.word	0xf2c44340
    8b3c:	f04f0302 	.word	0xf04f0302
    8b40:	f8c30201 	.word	0xf8c30201
    8b44:	f44f2120 	.word	0xf44f2120
    8b48:	f2c44340 	.word	0xf2c44340
    8b4c:	f04f0302 	.word	0xf04f0302
    8b50:	f8c30228 	.word	0xf8c30228
    8b54:	f44f2124 	.word	0xf44f2124
    8b58:	f2c44340 	.word	0xf2c44340
    8b5c:	f04f0302 	.word	0xf04f0302
    8b60:	f8c30220 	.word	0xf8c30220
    8b64:	f44f2128 	.word	0xf44f2128
    8b68:	f2c44340 	.word	0xf2c44340
    8b6c:	f04f0302 	.word	0xf04f0302
    8b70:	f8c30200 	.word	0xf8c30200
    8b74:	f44f2270 	.word	0xf44f2270
    8b78:	f2c44340 	.word	0xf2c44340
    8b7c:	f04f0302 	.word	0xf04f0302
    8b80:	f8c30220 	.word	0xf8c30220
    8b84:	f0032274 	.word	0xf0032274
    8b88:	f7fffa87 	.word	0xf7fffa87
    8b8c:	f7fff933 	.word	0xf7fff933
    8b90:	f7fff945 	.word	0xf7fff945
    8b94:	f04ffa3f 	.word	0xf04ffa3f
    8b98:	f04f0001 	.word	0xf04f0001
    8b9c:	f7ff0101 	.word	0xf7ff0101
    8ba0:	f04ffc09 	.word	0xf04ffc09
    8ba4:	607b0300 	.word	0x607b0300
    8ba8:	687be003 	.word	0x687be003
    8bac:	0301f103 	.word	0x0301f103
    8bb0:	687a607b 	.word	0x687a607b
    8bb4:	233ff244 	.word	0x233ff244
    8bb8:	030ff2c0 	.word	0x030ff2c0
    8bbc:	d9f4429a 	.word	0xd9f4429a
    8bc0:	0001f04f 	.word	0x0001f04f
    8bc4:	0102f04f 	.word	0x0102f04f
    8bc8:	fbf4f7ff 	.word	0xfbf4f7ff
    8bcc:	f968f7ff 	.word	0xf968f7ff
    8bd0:	0300f04f 	.word	0x0300f04f
    8bd4:	f1074618 	.word	0xf1074618
    8bd8:	46bd0708 	.word	0x46bd0708
    8bdc:	bf00bd80 	.word	0xbf00bd80
    8be0:	af00b580 	.word	0xaf00b580
    8be4:	0001f04f 	.word	0x0001f04f
    8be8:	f8cef7ff 	.word	0xf8cef7ff
    8bec:	4340f44f 	.word	0x4340f44f
    8bf0:	030ff2c4 	.word	0x030ff2c4
    8bf4:	4240f44f 	.word	0x4240f44f
    8bf8:	020ff2c4 	.word	0x020ff2c4
    8bfc:	20c4f8d2 	.word	0x20c4f8d2
    8c00:	0202f042 	.word	0x0202f042
    8c04:	20c4f8c3 	.word	0x20c4f8c3
    8c08:	2340f04f 	.word	0x2340f04f
    8c0c:	0202f04f 	.word	0x0202f04f
    8c10:	f04f605a 	.word	0xf04f605a
    8c14:	f04f2340 	.word	0xf04f2340
    8c18:	60da0278 	.word	0x60da0278
    8c1c:	2340f04f 	.word	0x2340f04f
    8c20:	0201f04f 	.word	0x0201f04f
    8c24:	f04f615a 	.word	0xf04f615a
    8c28:	f04f2340 	.word	0xf04f2340
    8c2c:	68922240 	.word	0x68922240
    8c30:	727af502 	.word	0x727af502
    8c34:	f04f619a 	.word	0xf04f619a
    8c38:	f04f2340 	.word	0xf04f2340
    8c3c:	601a32ff 	.word	0x601a32ff
    8c40:	2340f04f 	.word	0x2340f04f
    8c44:	0201f04f 	.word	0x0201f04f
    8c48:	bd80605a 	.word	0xbd80605a

00008c4c <BOD_IRQHandler>:
    8c4c:	af00b580 	.word	0xaf00b580
    8c50:	fa58f7ff 	.word	0xfa58f7ff
    8c54:	bf00bd80 	.word	0xbf00bd80
    8c58:	b086b580 	.word	0xb086b580
    8c5c:	4603af00 	.word	0x4603af00
    8c60:	f04f71fb 	.word	0xf04f71fb
    8c64:	617b0300 	.word	0x617b0300
    8c68:	2b0079fb 	.word	0x2b0079fb
    8c6c:	2b01d002 	.word	0x2b01d002
    8c70:	e051d042 	.word	0xe051d042
    8c74:	0380f04f 	.word	0x0380f04f
    8c78:	0320f2c0 	.word	0x0320f2c0
    8c7c:	f640613b 	.word	0xf640613b
    8c80:	f2c133b8 	.word	0xf2c133b8
    8c84:	781b0300 	.word	0x781b0300
    8c88:	d00a2b00 	.word	0xd00a2b00
    8c8c:	f8d3693b 	.word	0xf8d3693b
    8c90:	f0033f60 	.word	0xf0033f60
    8c94:	2b006380 	.word	0x2b006380
    8c98:	f04fd103 	.word	0xf04fd103
    8c9c:	617b0301 	.word	0x617b0301
    8ca0:	f640e03f 	.word	0xf640e03f
    8ca4:	f2c133b8 	.word	0xf2c133b8
    8ca8:	f04f0300 	.word	0xf04f0300
    8cac:	701a0200 	.word	0x701a0200
    8cb0:	f04f693b 	.word	0xf04f693b
    8cb4:	f8c36280 	.word	0xf8c36280
    8cb8:	f6402f68 	.word	0xf6402f68
    8cbc:	f2c133b9 	.word	0xf2c133b9
    8cc0:	781b0300 	.word	0x781b0300
    8cc4:	d00a2b00 	.word	0xd00a2b00
    8cc8:	f8d3693b 	.word	0xf8d3693b
    8ccc:	f0033f60 	.word	0xf0033f60
    8cd0:	2b005380 	.word	0x2b005380
    8cd4:	f04fd103 	.word	0xf04fd103
    8cd8:	617b0301 	.word	0x617b0301
    8cdc:	f640e021 	.word	0xf640e021
    8ce0:	f2c133b9 	.word	0xf2c133b9
    8ce4:	f04f0300 	.word	0xf04f0300
    8ce8:	701a0200 	.word	0x701a0200
    8cec:	f04f693b 	.word	0xf04f693b
    8cf0:	f8c35280 	.word	0xf8c35280
    8cf4:	e0142f68 	.word	0xe0142f68
    8cf8:	fa12f003 	.word	0xfa12f003
    8cfc:	00a0f04f 	.word	0x00a0f04f
    8d00:	fa40f003 	.word	0xfa40f003
    8d04:	f00360f8 	.word	0xf00360f8
    8d08:	68fbfb17 	.word	0x68fbfb17
    8d0c:	d0072b00 	.word	0xd0072b00
    8d10:	0301f04f 	.word	0x0301f04f
    8d14:	e003617b 	.word	0xe003617b
    8d18:	0301f04f 	.word	0x0301f04f
    8d1c:	e000617b 	.word	0xe000617b
    8d20:	697bbf00 	.word	0x697bbf00
    8d24:	f1074618 	.word	0xf1074618
    8d28:	46bd0718 	.word	0x46bd0718
    8d2c:	bf00bd80 	.word	0xbf00bd80
    8d30:	b088b580 	.word	0xb088b580
    8d34:	4603af00 	.word	0x4603af00
    8d38:	f04f71fb 	.word	0xf04f71fb
    8d3c:	61fb0300 	.word	0x61fb0300
    8d40:	2b0179fb 	.word	0x2b0179fb
    8d44:	f04fd903 	.word	0xf04fd903
    8d48:	61fb0301 	.word	0x61fb0301
    8d4c:	79fbe0bf 	.word	0x79fbe0bf
    8d50:	024cf04f 	.word	0x024cf04f
    8d54:	f203fb02 	.word	0xf203fb02
    8d58:	3320f640 	.word	0x3320f640
    8d5c:	0300f2c1 	.word	0x0300f2c1
    8d60:	617b18d3 	.word	0x617b18d3
    8d64:	681a697b 	.word	0x681a697b
    8d68:	f64079f9 	.word	0xf64079f9
    8d6c:	f2c0230c 	.word	0xf2c0230c
    8d70:	f8530301 	.word	0xf8530301
    8d74:	429a3021 	.word	0x429a3021
    8d78:	f04fd902 	.word	0xf04fd902
    8d7c:	e0a70302 	.word	0xe0a70302
    8d80:	7a1b697b 	.word	0x7a1b697b
    8d84:	d0032b00 	.word	0xd0032b00
    8d88:	685b697b 	.word	0x685b697b
    8d8c:	d1052b00 	.word	0xd1052b00
    8d90:	f04f697b 	.word	0xf04f697b
    8d94:	721a0200 	.word	0x721a0200
    8d98:	e09969fb 	.word	0xe09969fb
    8d9c:	79fbbf00 	.word	0x79fbbf00
    8da0:	f7ff4618 	.word	0xf7ff4618
    8da4:	4603ff59 	.word	0x4603ff59
    8da8:	d1f82b00 	.word	0xd1f82b00
    8dac:	2b0179fb 	.word	0x2b0179fb
    8db0:	f003d145 	.word	0xf003d145
    8db4:	697bf9b5 	.word	0x697bf9b5
    8db8:	ea4f681b 	.word	0xea4f681b
    8dbc:	b2db2393 	.word	0xb2db2393
    8dc0:	0306f003 	.word	0x0306f003
    8dc4:	f063b2db 	.word	0xf063b2db
    8dc8:	74fb035f 	.word	0x74fb035f
    8dcc:	46187cfb 	.word	0x46187cfb
    8dd0:	f9d8f003 	.word	0xf9d8f003
    8dd4:	2b004603 	.word	0x2b004603
    8dd8:	f04fd003 	.word	0xf04fd003
    8ddc:	61fb0301 	.word	0x61fb0301
    8de0:	697be02a 	.word	0x697be02a
    8de4:	74fb681b 	.word	0x74fb681b
    8de8:	46187cfb 	.word	0x46187cfb
    8dec:	f9caf003 	.word	0xf9caf003
    8df0:	2b004603 	.word	0x2b004603
    8df4:	f04fd003 	.word	0xf04fd003
    8df8:	61fb0301 	.word	0x61fb0301
    8dfc:	f04fe01c 	.word	0xf04fe01c
    8e00:	61bb0300 	.word	0x61bb0300
    8e04:	697ae013 	.word	0x697ae013
    8e08:	18d369bb 	.word	0x18d369bb
    8e0c:	0308f103 	.word	0x0308f103
    8e10:	4618785b 	.word	0x4618785b
    8e14:	f9b6f003 	.word	0xf9b6f003
    8e18:	2b004603 	.word	0x2b004603
    8e1c:	f04fd003 	.word	0xf04fd003
    8e20:	61fb0301 	.word	0x61fb0301
    8e24:	69bbe008 	.word	0x69bbe008
    8e28:	0301f103 	.word	0x0301f103
    8e2c:	697b61bb 	.word	0x697b61bb
    8e30:	69bb685a 	.word	0x69bb685a
    8e34:	d8e6429a 	.word	0xd8e6429a
    8e38:	fa7ef003 	.word	0xfa7ef003
    8e3c:	f04fe040 	.word	0xf04fe040
    8e40:	f2c00380 	.word	0xf2c00380
    8e44:	60fb0320 	.word	0x60fb0320
    8e48:	681a697b 	.word	0x681a697b
    8e4c:	605a68fb 	.word	0x605a68fb
    8e50:	f04f68fb 	.word	0xf04f68fb
    8e54:	601a0203 	.word	0x601a0203
    8e58:	0300f04f 	.word	0x0300f04f
    8e5c:	e00c61bb 	.word	0xe00c61bb
    8e60:	69bb697a 	.word	0x69bb697a
    8e64:	f10318d3 	.word	0xf10318d3
    8e68:	785b0308 	.word	0x785b0308
    8e6c:	68fb461a 	.word	0x68fb461a
    8e70:	69bb609a 	.word	0x69bb609a
    8e74:	0301f103 	.word	0x0301f103
    8e78:	697b61bb 	.word	0x697b61bb
    8e7c:	69bb685a 	.word	0x69bb685a
    8e80:	d8ed429a 	.word	0xd8ed429a
    8e84:	33b8f640 	.word	0x33b8f640
    8e88:	0300f2c1 	.word	0x0300f2c1
    8e8c:	0201f04f 	.word	0x0201f04f
    8e90:	bf00701a 	.word	0xbf00701a
    8e94:	461879fb 	.word	0x461879fb
    8e98:	fedef7ff 	.word	0xfedef7ff
    8e9c:	2b004603 	.word	0x2b004603
    8ea0:	697bd1f8 	.word	0x697bd1f8
    8ea4:	68fb681a 	.word	0x68fb681a
    8ea8:	68fb605a 	.word	0x68fb605a
    8eac:	0206f04f 	.word	0x0206f04f
    8eb0:	f640601a 	.word	0xf640601a
    8eb4:	f2c133b9 	.word	0xf2c133b9
    8eb8:	f04f0300 	.word	0xf04f0300
    8ebc:	701a0201 	.word	0x701a0201
    8ec0:	2b0069fb 	.word	0x2b0069fb
    8ec4:	697bd103 	.word	0x697bd103
    8ec8:	0200f04f 	.word	0x0200f04f
    8ecc:	69fb721a 	.word	0x69fb721a
    8ed0:	f1074618 	.word	0xf1074618
    8ed4:	46bd0720 	.word	0x46bd0720
    8ed8:	bf00bd80 	.word	0xbf00bd80
    8edc:	b08ab580 	.word	0xb08ab580
    8ee0:	4603af00 	.word	0x4603af00
    8ee4:	607a60b9 	.word	0x607a60b9
    8ee8:	f04f73fb 	.word	0xf04f73fb
    8eec:	627b0300 	.word	0x627b0300
    8ef0:	2b017bfb 	.word	0x2b017bfb
    8ef4:	f04fd903 	.word	0xf04fd903
    8ef8:	627b0301 	.word	0x627b0301
    8efc:	7bfbe0de 	.word	0x7bfbe0de
    8f00:	024cf04f 	.word	0x024cf04f
    8f04:	f203fb02 	.word	0xf203fb02
    8f08:	3320f640 	.word	0x3320f640
    8f0c:	0300f2c1 	.word	0x0300f2c1
    8f10:	61fb18d3 	.word	0x61fb18d3
    8f14:	7a1b69fb 	.word	0x7a1b69fb
    8f18:	d0092b00 	.word	0xd0092b00
    8f1c:	46187bfb 	.word	0x46187bfb
    8f20:	ff06f7ff 	.word	0xff06f7ff
    8f24:	6a7b6278 	.word	0x6a7b6278
    8f28:	d0012b00 	.word	0xd0012b00
    8f2c:	e0c66a7b 	.word	0xe0c66a7b
    8f30:	68ba69fb 	.word	0x68ba69fb
    8f34:	69fb601a 	.word	0x69fb601a
    8f38:	605a687a 	.word	0x605a687a
    8f3c:	7bfbbf00 	.word	0x7bfbbf00
    8f40:	f7ff4618 	.word	0xf7ff4618
    8f44:	4603fe89 	.word	0x4603fe89
    8f48:	d1f82b00 	.word	0xd1f82b00
    8f4c:	2b017bfb 	.word	0x2b017bfb
    8f50:	f003d17b 	.word	0xf003d17b
    8f54:	69fbf8e5 	.word	0x69fbf8e5
    8f58:	ea4f681b 	.word	0xea4f681b
    8f5c:	b2db2393 	.word	0xb2db2393
    8f60:	0306f003 	.word	0x0306f003
    8f64:	f063b2db 	.word	0xf063b2db
    8f68:	76fb035f 	.word	0x76fb035f
    8f6c:	46187efb 	.word	0x46187efb
    8f70:	f908f003 	.word	0xf908f003
    8f74:	2b004603 	.word	0x2b004603
    8f78:	f04fd003 	.word	0xf04fd003
    8f7c:	627b0301 	.word	0x627b0301
    8f80:	69fbe060 	.word	0x69fbe060
    8f84:	76fb681b 	.word	0x76fb681b
    8f88:	46187efb 	.word	0x46187efb
    8f8c:	f8faf003 	.word	0xf8faf003
    8f90:	2b004603 	.word	0x2b004603
    8f94:	f04fd003 	.word	0xf04fd003
    8f98:	627b0301 	.word	0x627b0301
    8f9c:	f003e052 	.word	0xf003e052
    8fa0:	69fbf8bf 	.word	0x69fbf8bf
    8fa4:	ea4f681b 	.word	0xea4f681b
    8fa8:	b2db2393 	.word	0xb2db2393
    8fac:	0306f003 	.word	0x0306f003
    8fb0:	f063b2db 	.word	0xf063b2db
    8fb4:	76fb035e 	.word	0x76fb035e
    8fb8:	46187efb 	.word	0x46187efb
    8fbc:	f8e2f003 	.word	0xf8e2f003
    8fc0:	2b004603 	.word	0x2b004603
    8fc4:	f04fd003 	.word	0xf04fd003
    8fc8:	627b0301 	.word	0x627b0301
    8fcc:	69fbe03a 	.word	0x69fbe03a
    8fd0:	2b01685b 	.word	0x2b01685b
    8fd4:	f04fd934 	.word	0xf04fd934
    8fd8:	623b0300 	.word	0x623b0300
    8fdc:	6a3be016 	.word	0x6a3be016
    8fe0:	0308f103 	.word	0x0308f103
    8fe4:	18d369fa 	.word	0x18d369fa
    8fe8:	0301f103 	.word	0x0301f103
    8fec:	0000f04f 	.word	0x0000f04f
    8ff0:	f0034619 	.word	0xf0034619
    8ff4:	4603f973 	.word	0x4603f973
    8ff8:	d0032b00 	.word	0xd0032b00
    8ffc:	0301f04f 	.word	0x0301f04f
    9000:	e01f627b 	.word	0xe01f627b
    9004:	f1036a3b 	.word	0xf1036a3b
    9008:	623b0301 	.word	0x623b0301
    900c:	685b69fb 	.word	0x685b69fb
    9010:	32fff103 	.word	0x32fff103
    9014:	429a6a3b 	.word	0x429a6a3b
    9018:	6a3bd8e1 	.word	0x6a3bd8e1
    901c:	0308f103 	.word	0x0308f103
    9020:	18d369fa 	.word	0x18d369fa
    9024:	0301f103 	.word	0x0301f103
    9028:	0001f04f 	.word	0x0001f04f
    902c:	f0034619 	.word	0xf0034619
    9030:	4603f955 	.word	0x4603f955
    9034:	d0032b00 	.word	0xd0032b00
    9038:	0301f04f 	.word	0x0301f04f
    903c:	e001627b 	.word	0xe001627b
    9040:	f97af003 	.word	0xf97af003
    9044:	f978f003 	.word	0xf978f003
    9048:	f04fe031 	.word	0xf04fe031
    904c:	f2c00380 	.word	0xf2c00380
    9050:	617b0320 	.word	0x617b0320
    9054:	681a69fb 	.word	0x681a69fb
    9058:	605a697b 	.word	0x605a697b
    905c:	f04f697b 	.word	0xf04f697b
    9060:	601a0208 	.word	0x601a0208
    9064:	7bfbbf00 	.word	0x7bfbbf00
    9068:	f7ff4618 	.word	0xf7ff4618
    906c:	4603fdf5 	.word	0x4603fdf5
    9070:	d1f82b00 	.word	0xd1f82b00
    9074:	0300f04f 	.word	0x0300f04f
    9078:	e00c623b 	.word	0xe00c623b
    907c:	68db697b 	.word	0x68db697b
    9080:	69f9b2da 	.word	0x69f9b2da
    9084:	18cb6a3b 	.word	0x18cb6a3b
    9088:	0308f103 	.word	0x0308f103
    908c:	6a3b705a 	.word	0x6a3b705a
    9090:	0301f103 	.word	0x0301f103
    9094:	69fb623b 	.word	0x69fb623b
    9098:	6a3b685a 	.word	0x6a3b685a
    909c:	d8ed429a 	.word	0xd8ed429a
    90a0:	33b8f640 	.word	0x33b8f640
    90a4:	0300f2c1 	.word	0x0300f2c1
    90a8:	0201f04f 	.word	0x0201f04f
    90ac:	6a7b701a 	.word	0x6a7b701a
    90b0:	d1032b00 	.word	0xd1032b00
    90b4:	f04f69fb 	.word	0xf04f69fb
    90b8:	721a0200 	.word	0x721a0200
    90bc:	46186a7b 	.word	0x46186a7b
    90c0:	0728f107 	.word	0x0728f107
    90c4:	bd8046bd 	.word	0xbd8046bd

000090c8 <EEPROM_Read>:
    90c8:	b088b580 	.word	0xb088b580
    90cc:	60b9af00 	.word	0x60b9af00
    90d0:	603b607a 	.word	0x603b607a
    90d4:	73fb4603 	.word	0x73fb4603
    90d8:	0300f04f 	.word	0x0300f04f
    90dc:	687b61fb 	.word	0x687b61fb
    90e0:	7bfb61bb 	.word	0x7bfb61bb
    90e4:	d9032b01 	.word	0xd9032b01
    90e8:	0301f04f 	.word	0x0301f04f
    90ec:	e08961fb 	.word	0xe08961fb
    90f0:	f6407bfa 	.word	0xf6407bfa
    90f4:	f2c0230c 	.word	0xf2c0230c
    90f8:	f8530301 	.word	0xf8530301
    90fc:	f1033022 	.word	0xf1033022
    9100:	68bb0201 	.word	0x68bb0201
    9104:	d803429a 	.word	0xd803429a
    9108:	0302f04f 	.word	0x0302f04f
    910c:	e07961fb 	.word	0xe07961fb
    9110:	2b00683b 	.word	0x2b00683b
    9114:	f04fd103 	.word	0xf04fd103
    9118:	61fb0302 	.word	0x61fb0302
    911c:	68bae072 	.word	0x68bae072
    9120:	18d2683b 	.word	0x18d2683b
    9124:	f6407bf9 	.word	0xf6407bf9
    9128:	f2c0230c 	.word	0xf2c0230c
    912c:	f8530301 	.word	0xf8530301
    9130:	f1033021 	.word	0xf1033021
    9134:	429a0301 	.word	0x429a0301
    9138:	f04fd903 	.word	0xf04fd903
    913c:	61fb0302 	.word	0x61fb0302
    9140:	687be060 	.word	0x687be060
    9144:	d1032b00 	.word	0xd1032b00
    9148:	0302f04f 	.word	0x0302f04f
    914c:	e05961fb 	.word	0xe05961fb
    9150:	f04f7bfb 	.word	0xf04f7bfb
    9154:	fb02024c 	.word	0xfb02024c
    9158:	f640f203 	.word	0xf640f203
    915c:	f2c13320 	.word	0xf2c13320
    9160:	18d30300 	.word	0x18d30300
    9164:	693b613b 	.word	0x693b613b
    9168:	2b007a1b 	.word	0x2b007a1b
    916c:	7bfbd007 	.word	0x7bfbd007
    9170:	f7ff4618 	.word	0xf7ff4618
    9174:	61f8fddd 	.word	0x61f8fddd
    9178:	2b0069fb 	.word	0x2b0069fb
    917c:	7bfbd13f 	.word	0x7bfbd13f
    9180:	d1032b00 	.word	0xd1032b00
    9184:	0340f04f 	.word	0x0340f04f
    9188:	e034617b 	.word	0xe034617b
    918c:	0310f04f 	.word	0x0310f04f
    9190:	e030617b 	.word	0xe030617b
    9194:	681a693b 	.word	0x681a693b
    9198:	429a68bb 	.word	0x429a68bb
    919c:	693bd807 	.word	0x693bd807
    91a0:	68ba681b 	.word	0x68ba681b
    91a4:	693b1ad2 	.word	0x693b1ad2
    91a8:	429a685b 	.word	0x429a685b
    91ac:	697bd30e 	.word	0x697bd30e
    91b0:	0200f1c3 	.word	0x0200f1c3
    91b4:	401368bb 	.word	0x401368bb
    91b8:	46107bfa 	.word	0x46107bfa
    91bc:	697a4619 	.word	0x697a4619
    91c0:	fe8cf7ff 	.word	0xfe8cf7ff
    91c4:	69fb61f8 	.word	0x69fb61f8
    91c8:	d11a2b00 	.word	0xd11a2b00
    91cc:	681b693b 	.word	0x681b693b
    91d0:	1ad368ba 	.word	0x1ad368ba
    91d4:	18d3693a 	.word	0x18d3693a
    91d8:	69bb7a5a 	.word	0x69bb7a5a
    91dc:	69bb701a 	.word	0x69bb701a
    91e0:	0301f103 	.word	0x0301f103
    91e4:	68bb61bb 	.word	0x68bb61bb
    91e8:	0301f103 	.word	0x0301f103
    91ec:	683b60bb 	.word	0x683b60bb
    91f0:	33fff103 	.word	0x33fff103
    91f4:	683b603b 	.word	0x683b603b
    91f8:	d1cb2b00 	.word	0xd1cb2b00
    91fc:	bf00e002 	.word	0xbf00e002
    9200:	bf00e000 	.word	0xbf00e000
    9204:	461869fb 	.word	0x461869fb
    9208:	0720f107 	.word	0x0720f107
    920c:	bd8046bd 	.word	0xbd8046bd

00009210 <EEPROM_Write>:
    9210:	b088b580 	.word	0xb088b580
    9214:	60b9af00 	.word	0x60b9af00
    9218:	603b607a 	.word	0x603b607a
    921c:	73fb4603 	.word	0x73fb4603
    9220:	0300f04f 	.word	0x0300f04f
    9224:	687b61fb 	.word	0x687b61fb
    9228:	7bfb61bb 	.word	0x7bfb61bb
    922c:	d9032b01 	.word	0xd9032b01
    9230:	0301f04f 	.word	0x0301f04f
    9234:	e09661fb 	.word	0xe09661fb
    9238:	f04f7bfb 	.word	0xf04f7bfb
    923c:	fb02024c 	.word	0xfb02024c
    9240:	f640f203 	.word	0xf640f203
    9244:	f2c13320 	.word	0xf2c13320
    9248:	18d30300 	.word	0x18d30300
    924c:	7bfa613b 	.word	0x7bfa613b
    9250:	230cf640 	.word	0x230cf640
    9254:	0301f2c0 	.word	0x0301f2c0
    9258:	3022f853 	.word	0x3022f853
    925c:	0201f103 	.word	0x0201f103
    9260:	429a68bb 	.word	0x429a68bb
    9264:	f04fd803 	.word	0xf04fd803
    9268:	61fb0302 	.word	0x61fb0302
    926c:	683be07b 	.word	0x683be07b
    9270:	d1032b00 	.word	0xd1032b00
    9274:	0302f04f 	.word	0x0302f04f
    9278:	e07461fb 	.word	0xe07461fb
    927c:	683b68ba 	.word	0x683b68ba
    9280:	7bf918d2 	.word	0x7bf918d2
    9284:	230cf640 	.word	0x230cf640
    9288:	0301f2c0 	.word	0x0301f2c0
    928c:	3021f853 	.word	0x3021f853
    9290:	0301f103 	.word	0x0301f103
    9294:	d903429a 	.word	0xd903429a
    9298:	0302f04f 	.word	0x0302f04f
    929c:	e06261fb 	.word	0xe06261fb
    92a0:	2b00687b 	.word	0x2b00687b
    92a4:	f04fd103 	.word	0xf04fd103
    92a8:	61fb0302 	.word	0x61fb0302
    92ac:	7bfbe05b 	.word	0x7bfbe05b
    92b0:	d1032b00 	.word	0xd1032b00
    92b4:	033ff04f 	.word	0x033ff04f
    92b8:	e04f617b 	.word	0xe04f617b
    92bc:	030ff04f 	.word	0x030ff04f
    92c0:	e04b617b 	.word	0xe04b617b
    92c4:	697b68ba 	.word	0x697b68ba
    92c8:	693b431a 	.word	0x693b431a
    92cc:	697b6819 	.word	0x697b6819
    92d0:	429a430b 	.word	0x429a430b
    92d4:	693bd10c 	.word	0x693bd10c
    92d8:	68bb681a 	.word	0x68bb681a
    92dc:	d807429a 	.word	0xd807429a
    92e0:	681a693b 	.word	0x681a693b
    92e4:	685b693b 	.word	0x685b693b
    92e8:	68bb18d2 	.word	0x68bb18d2
    92ec:	d207429a 	.word	0xd207429a
    92f0:	46187bfb 	.word	0x46187bfb
    92f4:	fd1cf7ff 	.word	0xfd1cf7ff
    92f8:	69fb61f8 	.word	0x69fb61f8
    92fc:	d1312b00 	.word	0xd1312b00
    9300:	7a1b693b 	.word	0x7a1b693b
    9304:	d10a2b00 	.word	0xd10a2b00
    9308:	68ba693b 	.word	0x68ba693b
    930c:	693b601a 	.word	0x693b601a
    9310:	0201f04f 	.word	0x0201f04f
    9314:	693b721a 	.word	0x693b721a
    9318:	0200f04f 	.word	0x0200f04f
    931c:	693b605a 	.word	0x693b605a
    9320:	693b681a 	.word	0x693b681a
    9324:	18d2685b 	.word	0x18d2685b
    9328:	429a68bb 	.word	0x429a68bb
    932c:	693bd10e 	.word	0x693bd10e
    9330:	69ba685b 	.word	0x69ba685b
    9334:	693a7811 	.word	0x693a7811
    9338:	725118d2 	.word	0x725118d2
    933c:	0201f103 	.word	0x0201f103
    9340:	605a693b 	.word	0x605a693b
    9344:	f10369bb 	.word	0xf10369bb
    9348:	61bb0301 	.word	0x61bb0301
    934c:	f103683b 	.word	0xf103683b
    9350:	603b33ff 	.word	0x603b33ff
    9354:	f10368bb 	.word	0xf10368bb
    9358:	60bb0301 	.word	0x60bb0301
    935c:	2b00683b 	.word	0x2b00683b
    9360:	e000d1b0 	.word	0xe000d1b0
    9364:	69fbbf00 	.word	0x69fbbf00
    9368:	f1074618 	.word	0xf1074618
    936c:	46bd0720 	.word	0x46bd0720
    9370:	bf00bd80 	.word	0xbf00bd80

00009374 <EEPROM_FlushCache>:
    9374:	b084b580 	.word	0xb084b580
    9378:	4603af00 	.word	0x4603af00
    937c:	79fb71fb 	.word	0x79fb71fb
    9380:	d9032b01 	.word	0xd9032b01
    9384:	0301f04f 	.word	0x0301f04f
    9388:	e02060fb 	.word	0xe02060fb
    938c:	f04f79fb 	.word	0xf04f79fb
    9390:	fb02024c 	.word	0xfb02024c
    9394:	f640f203 	.word	0xf640f203
    9398:	f2c13320 	.word	0xf2c13320
    939c:	18d30300 	.word	0x18d30300
    93a0:	79fb60bb 	.word	0x79fb60bb
    93a4:	f7ff4618 	.word	0xf7ff4618
    93a8:	60f8fcc3 	.word	0x60f8fcc3
    93ac:	2b0068fb 	.word	0x2b0068fb
    93b0:	bf00d10c 	.word	0xbf00d10c
    93b4:	461879fb 	.word	0x461879fb
    93b8:	fc4ef7ff 	.word	0xfc4ef7ff
    93bc:	2b004603 	.word	0x2b004603
    93c0:	68bbd1f8 	.word	0x68bbd1f8
    93c4:	0200f04f 	.word	0x0200f04f
    93c8:	e000605a 	.word	0xe000605a
    93cc:	68fbbf00 	.word	0x68fbbf00
    93d0:	f1074618 	.word	0xf1074618
    93d4:	46bd0710 	.word	0x46bd0710
    93d8:	bf00bd80 	.word	0xbf00bd80

000093dc <CRC_Init>:
    93dc:	b083b480 	.word	0xb083b480
    93e0:	6078af00 	.word	0x6078af00
    93e4:	2b00687b 	.word	0x2b00687b
    93e8:	f06fd102 	.word	0xf06fd102
    93ec:	e0560301 	.word	0xe0560301
    93f0:	791b687b 	.word	0x791b687b
    93f4:	d9022b02 	.word	0xd9022b02
    93f8:	0301f06f 	.word	0x0301f06f
    93fc:	f04fe04f 	.word	0xf04fe04f
    9400:	f2c20300 	.word	0xf2c20300
    9404:	687a0309 	.word	0x687a0309
    9408:	601a7912 	.word	0x601a7912
    940c:	795b687b 	.word	0x795b687b
    9410:	d00b2b00 	.word	0xd00b2b00
    9414:	0300f04f 	.word	0x0300f04f
    9418:	0309f2c2 	.word	0x0309f2c2
    941c:	0200f04f 	.word	0x0200f04f
    9420:	0209f2c2 	.word	0x0209f2c2
    9424:	f0426812 	.word	0xf0426812
    9428:	601a0204 	.word	0x601a0204
    942c:	79db687b 	.word	0x79db687b
    9430:	d00b2b00 	.word	0xd00b2b00
    9434:	0300f04f 	.word	0x0300f04f
    9438:	0309f2c2 	.word	0x0309f2c2
    943c:	0200f04f 	.word	0x0200f04f
    9440:	0209f2c2 	.word	0x0209f2c2
    9444:	f0426812 	.word	0xf0426812
    9448:	601a0208 	.word	0x601a0208
    944c:	799b687b 	.word	0x799b687b
    9450:	d00b2b00 	.word	0xd00b2b00
    9454:	0300f04f 	.word	0x0300f04f
    9458:	0309f2c2 	.word	0x0309f2c2
    945c:	0200f04f 	.word	0x0200f04f
    9460:	0209f2c2 	.word	0x0209f2c2
    9464:	f0426812 	.word	0xf0426812
    9468:	601a0210 	.word	0x601a0210
    946c:	7a1b687b 	.word	0x7a1b687b
    9470:	d00b2b00 	.word	0xd00b2b00
    9474:	0300f04f 	.word	0x0300f04f
    9478:	0309f2c2 	.word	0x0309f2c2
    947c:	0200f04f 	.word	0x0200f04f
    9480:	0209f2c2 	.word	0x0209f2c2
    9484:	f0426812 	.word	0xf0426812
    9488:	601a0220 	.word	0x601a0220
    948c:	0300f04f 	.word	0x0300f04f
    9490:	0309f2c2 	.word	0x0309f2c2
    9494:	6812687a 	.word	0x6812687a
    9498:	f04f605a 	.word	0xf04f605a
    949c:	46180300 	.word	0x46180300
    94a0:	070cf107 	.word	0x070cf107
    94a4:	bc8046bd 	.word	0xbc8046bd
    94a8:	bf004770 	.word	0xbf004770

000094ac <CRC_CalcCRC>:
    94ac:	b087b480 	.word	0xb087b480
    94b0:	60f8af00 	.word	0x60f8af00
    94b4:	603b60b9 	.word	0x603b60b9
    94b8:	71fb4613 	.word	0x71fb4613
    94bc:	2b0068fb 	.word	0x2b0068fb
    94c0:	f06fd102 	.word	0xf06fd102
    94c4:	e0410301 	.word	0xe0410301
    94c8:	2b00683b 	.word	0x2b00683b
    94cc:	f06fd102 	.word	0xf06fd102
    94d0:	e03b0301 	.word	0xe03b0301
    94d4:	0300f04f 	.word	0x0300f04f
    94d8:	e02a617b 	.word	0xe02a617b
    94dc:	2b0279fb 	.word	0x2b0279fb
    94e0:	f04fd10b 	.word	0xf04fd10b
    94e4:	f2c20300 	.word	0xf2c20300
    94e8:	697a0309 	.word	0x697a0309
    94ec:	0282ea4f 	.word	0x0282ea4f
    94f0:	188a68f9 	.word	0x188a68f9
    94f4:	609a6812 	.word	0x609a6812
    94f8:	79fbe017 	.word	0x79fbe017
    94fc:	d10b2b01 	.word	0xd10b2b01
    9500:	0300f04f 	.word	0x0300f04f
    9504:	0309f2c2 	.word	0x0309f2c2
    9508:	ea4f697a 	.word	0xea4f697a
    950c:	68f90242 	.word	0x68f90242
    9510:	8812188a 	.word	0x8812188a
    9514:	e008811a 	.word	0xe008811a
    9518:	0300f04f 	.word	0x0300f04f
    951c:	0309f2c2 	.word	0x0309f2c2
    9520:	697a68f9 	.word	0x697a68f9
    9524:	7812188a 	.word	0x7812188a
    9528:	697b721a 	.word	0x697b721a
    952c:	0301f103 	.word	0x0301f103
    9530:	697a617b 	.word	0x697a617b
    9534:	429a68bb 	.word	0x429a68bb
    9538:	f04fd3d0 	.word	0xf04fd3d0
    953c:	f2c20300 	.word	0xf2c20300
    9540:	689a0309 	.word	0x689a0309
    9544:	601a683b 	.word	0x601a683b
    9548:	0300f04f 	.word	0x0300f04f
    954c:	f1074618 	.word	0xf1074618
    9550:	46bd071c 	.word	0x46bd071c
    9554:	4770bc80 	.word	0x4770bc80

00009558 <CRC_Valid>:
    9558:	b086b580 	.word	0xb086b580
    955c:	60f8af00 	.word	0x60f8af00
    9560:	603b60b9 	.word	0x603b60b9
    9564:	71fb4613 	.word	0x71fb4613
    9568:	2b0068fb 	.word	0x2b0068fb
    956c:	f06fd102 	.word	0xf06fd102
    9570:	e0240301 	.word	0xe0240301
    9574:	2b00683b 	.word	0x2b00683b
    9578:	f06fd102 	.word	0xf06fd102
    957c:	e01e0301 	.word	0xe01e0301
    9580:	f7ff6838 	.word	0xf7ff6838
    9584:	6178ff2b 	.word	0x6178ff2b
    9588:	2b00697b 	.word	0x2b00697b
    958c:	f04fd002 	.word	0xf04fd002
    9590:	e01433ff 	.word	0xe01433ff
    9594:	f10779fa 	.word	0xf10779fa
    9598:	68f80310 	.word	0x68f80310
    959c:	f7ff68b9 	.word	0xf7ff68b9
    95a0:	6178ff85 	.word	0x6178ff85
    95a4:	2b00697b 	.word	0x2b00697b
    95a8:	f04fd002 	.word	0xf04fd002
    95ac:	e00633ff 	.word	0xe00633ff
    95b0:	6a3b693a 	.word	0x6a3b693a
    95b4:	bf14429a 	.word	0xbf14429a
    95b8:	23012300 	.word	0x23012300
    95bc:	4618b2db 	.word	0x4618b2db
    95c0:	0718f107 	.word	0x0718f107
    95c4:	bd8046bd 	.word	0xbd8046bd
    95c8:	b083b480 	.word	0xb083b480
    95cc:	4603af00 	.word	0x4603af00
    95d0:	f44f71fb 	.word	0xf44f71fb
    95d4:	f2ce4361 	.word	0xf2ce4361
    95d8:	f9970300 	.word	0xf9970300
    95dc:	ea4f2007 	.word	0xea4f2007
    95e0:	79f91252 	.word	0x79f91252
    95e4:	011ff001 	.word	0x011ff001
    95e8:	0001f04f 	.word	0x0001f04f
    95ec:	f101fa00 	.word	0xf101fa00
    95f0:	1022f843 	.word	0x1022f843
    95f4:	070cf107 	.word	0x070cf107
    95f8:	bc8046bd 	.word	0xbc8046bd
    95fc:	bf004770 	.word	0xbf004770
    9600:	b083b480 	.word	0xb083b480
    9604:	4603af00 	.word	0x4603af00
    9608:	f44f71fb 	.word	0xf44f71fb
    960c:	f2ce4361 	.word	0xf2ce4361
    9610:	f9970300 	.word	0xf9970300
    9614:	ea4f2007 	.word	0xea4f2007
    9618:	79f91252 	.word	0x79f91252
    961c:	011ff001 	.word	0x011ff001
    9620:	0001f04f 	.word	0x0001f04f
    9624:	f101fa00 	.word	0xf101fa00
    9628:	0220f102 	.word	0x0220f102
    962c:	1022f843 	.word	0x1022f843
    9630:	070cf107 	.word	0x070cf107
    9634:	bc8046bd 	.word	0xbc8046bd
    9638:	bf004770 	.word	0xbf004770
    963c:	b083b480 	.word	0xb083b480
    9640:	4603af00 	.word	0x4603af00
    9644:	f44f71fb 	.word	0xf44f71fb
    9648:	f2ce4361 	.word	0xf2ce4361
    964c:	f9970300 	.word	0xf9970300
    9650:	ea4f2007 	.word	0xea4f2007
    9654:	79f91252 	.word	0x79f91252
    9658:	011ff001 	.word	0x011ff001
    965c:	0001f04f 	.word	0x0001f04f
    9660:	f101fa00 	.word	0xf101fa00
    9664:	0260f102 	.word	0x0260f102
    9668:	1022f843 	.word	0x1022f843
    966c:	070cf107 	.word	0x070cf107
    9670:	bc8046bd 	.word	0xbc8046bd
    9674:	bf004770 	.word	0xbf004770
    9678:	b083b480 	.word	0xb083b480
    967c:	4603af00 	.word	0x4603af00
    9680:	f44f71fb 	.word	0xf44f71fb
    9684:	f2ce4361 	.word	0xf2ce4361
    9688:	f9970300 	.word	0xf9970300
    968c:	ea4f2007 	.word	0xea4f2007
    9690:	f8531252 	.word	0xf8531252
    9694:	79fb2022 	.word	0x79fb2022
    9698:	031ff003 	.word	0x031ff003
    969c:	0101f04f 	.word	0x0101f04f
    96a0:	f303fa01 	.word	0xf303fa01
    96a4:	2b004013 	.word	0x2b004013
    96a8:	f04fd002 	.word	0xf04fd002
    96ac:	e0010301 	.word	0xe0010301
    96b0:	0300f04f 	.word	0x0300f04f
    96b4:	f1074618 	.word	0xf1074618
    96b8:	46bd070c 	.word	0x46bd070c
    96bc:	4770bc80 	.word	0x4770bc80

000096c0 <CAN_ReferenceTxQueue>:
    96c0:	b084b580 	.word	0xb084b580
    96c4:	6039af00 	.word	0x6039af00
    96c8:	46024613 	.word	0x46024613
    96cc:	80bb71fa 	.word	0x80bb71fa
    96d0:	0300f04f 	.word	0x0300f04f
    96d4:	79fa73fb 	.word	0x79fa73fb
    96d8:	030ff107 	.word	0x030ff107
    96dc:	46194610 	.word	0x46194610
    96e0:	faf8f001 	.word	0xfaf8f001
    96e4:	2b004603 	.word	0x2b004603
    96e8:	f04fd102 	.word	0xf04fd102
    96ec:	e02a0300 	.word	0xe02a0300
    96f0:	2b00683b 	.word	0x2b00683b
    96f4:	88bbd002 	.word	0x88bbd002
    96f8:	d1022b00 	.word	0xd1022b00
    96fc:	0300f04f 	.word	0x0300f04f
    9700:	7bfbe021 	.word	0x7bfbe021
    9704:	f6404619 	.word	0xf6404619
    9708:	f2c132d0 	.word	0xf2c132d0
    970c:	460b0200 	.word	0x460b0200
    9710:	1303ea4f 	.word	0x1303ea4f
    9714:	ea4f1a5b 	.word	0xea4f1a5b
    9718:	18d30383 	.word	0x18d30383
    971c:	0308f103 	.word	0x0308f103
    9720:	601a683a 	.word	0x601a683a
    9724:	46197bfb 	.word	0x46197bfb
    9728:	32d0f640 	.word	0x32d0f640
    972c:	0200f2c1 	.word	0x0200f2c1
    9730:	ea4f460b 	.word	0xea4f460b
    9734:	1a5b1303 	.word	0x1a5b1303
    9738:	0383ea4f 	.word	0x0383ea4f
    973c:	88ba18d3 	.word	0x88ba18d3
    9740:	f04f801a 	.word	0xf04f801a
    9744:	46180301 	.word	0x46180301
    9748:	0710f107 	.word	0x0710f107
    974c:	bd8046bd 	.word	0xbd8046bd

00009750 <CAN_ReferenceRxQueue>:
    9750:	b084b580 	.word	0xb084b580
    9754:	6039af00 	.word	0x6039af00
    9758:	46024613 	.word	0x46024613
    975c:	80bb71fa 	.word	0x80bb71fa
    9760:	0300f04f 	.word	0x0300f04f
    9764:	79fa73fb 	.word	0x79fa73fb
    9768:	030ff107 	.word	0x030ff107
    976c:	46194610 	.word	0x46194610
    9770:	fab0f001 	.word	0xfab0f001
    9774:	2b004603 	.word	0x2b004603
    9778:	f04fd102 	.word	0xf04fd102
    977c:	e02a0300 	.word	0xe02a0300
    9780:	2b00683b 	.word	0x2b00683b
    9784:	88bbd002 	.word	0x88bbd002
    9788:	d1022b00 	.word	0xd1022b00
    978c:	0300f04f 	.word	0x0300f04f
    9790:	7bfbe021 	.word	0x7bfbe021
    9794:	f6404619 	.word	0xf6404619
    9798:	f2c132d0 	.word	0xf2c132d0
    979c:	460b0200 	.word	0x460b0200
    97a0:	1303ea4f 	.word	0x1303ea4f
    97a4:	ea4f1a5b 	.word	0xea4f1a5b
    97a8:	18d30383 	.word	0x18d30383
    97ac:	0310f103 	.word	0x0310f103
    97b0:	601a683a 	.word	0x601a683a
    97b4:	46197bfb 	.word	0x46197bfb
    97b8:	32d0f640 	.word	0x32d0f640
    97bc:	0200f2c1 	.word	0x0200f2c1
    97c0:	ea4f460b 	.word	0xea4f460b
    97c4:	1a5b1303 	.word	0x1a5b1303
    97c8:	0383ea4f 	.word	0x0383ea4f
    97cc:	88ba18d3 	.word	0x88ba18d3
    97d0:	f04f809a 	.word	0xf04f809a
    97d4:	46180301 	.word	0x46180301
    97d8:	0710f107 	.word	0x0710f107
    97dc:	bd8046bd 	.word	0xbd8046bd

000097e0 <CAN_GetIsrVector>:
    97e0:	b083b480 	.word	0xb083b480
    97e4:	4603af00 	.word	0x4603af00
    97e8:	f64a71fb 	.word	0xf64a71fb
    97ec:	f2c04331 	.word	0xf2c04331
    97f0:	46180300 	.word	0x46180300
    97f4:	070cf107 	.word	0x070cf107
    97f8:	bc8046bd 	.word	0xbc8046bd
    97fc:	bf004770 	.word	0xbf004770

00009800 <CAN_SetUnatomicHandler>:
    9800:	b084b580 	.word	0xb084b580
    9804:	4603af00 	.word	0x4603af00
    9808:	71fb6039 	.word	0x71fb6039
    980c:	0300f04f 	.word	0x0300f04f
    9810:	79fa73fb 	.word	0x79fa73fb
    9814:	030ff107 	.word	0x030ff107
    9818:	46194610 	.word	0x46194610
    981c:	fa5af001 	.word	0xfa5af001
    9820:	2b004603 	.word	0x2b004603
    9824:	f04fd102 	.word	0xf04fd102
    9828:	e0070300 	.word	0xe0070300
    982c:	2b00683b 	.word	0x2b00683b
    9830:	f04fd102 	.word	0xf04fd102
    9834:	e0010300 	.word	0xe0010300
    9838:	0301f04f 	.word	0x0301f04f
    983c:	f1074618 	.word	0xf1074618
    9840:	46bd0710 	.word	0x46bd0710
    9844:	bf00bd80 	.word	0xbf00bd80

00009848 <CAN_SetTimestampHandler>:
    9848:	b084b580 	.word	0xb084b580
    984c:	4603af00 	.word	0x4603af00
    9850:	71fb6039 	.word	0x71fb6039
    9854:	0300f04f 	.word	0x0300f04f
    9858:	79fa73fb 	.word	0x79fa73fb
    985c:	030ff107 	.word	0x030ff107
    9860:	46194610 	.word	0x46194610
    9864:	fa36f001 	.word	0xfa36f001
    9868:	2b004603 	.word	0x2b004603
    986c:	f04fd102 	.word	0xf04fd102
    9870:	e0120300 	.word	0xe0120300
    9874:	46197bfb 	.word	0x46197bfb
    9878:	32d0f640 	.word	0x32d0f640
    987c:	0200f2c1 	.word	0x0200f2c1
    9880:	ea4f460b 	.word	0xea4f460b
    9884:	1a5b1303 	.word	0x1a5b1303
    9888:	0383ea4f 	.word	0x0383ea4f
    988c:	f10318d3 	.word	0xf10318d3
    9890:	683a0334 	.word	0x683a0334
    9894:	f04f601a 	.word	0xf04f601a
    9898:	46180301 	.word	0x46180301
    989c:	0710f107 	.word	0x0710f107
    98a0:	bd8046bd 	.word	0xbd8046bd

000098a4 <CAN_SetErrorLimit>:
    98a4:	b084b580 	.word	0xb084b580
    98a8:	4602af00 	.word	0x4602af00
    98ac:	71fa460b 	.word	0x71fa460b
    98b0:	f04f71bb 	.word	0xf04f71bb
    98b4:	73fb0300 	.word	0x73fb0300
    98b8:	f10779fa 	.word	0xf10779fa
    98bc:	4610030f 	.word	0x4610030f
    98c0:	f0014619 	.word	0xf0014619
    98c4:	4603fa07 	.word	0x4603fa07
    98c8:	d1022b00 	.word	0xd1022b00
    98cc:	0300f04f 	.word	0x0300f04f
    98d0:	7bfbe012 	.word	0x7bfbe012
    98d4:	f6404619 	.word	0xf6404619
    98d8:	f2c132d0 	.word	0xf2c132d0
    98dc:	460b0200 	.word	0x460b0200
    98e0:	1303ea4f 	.word	0x1303ea4f
    98e4:	ea4f1a5b 	.word	0xea4f1a5b
    98e8:	18d30383 	.word	0x18d30383
    98ec:	0338f103 	.word	0x0338f103
    98f0:	701a79ba 	.word	0x701a79ba
    98f4:	0301f04f 	.word	0x0301f04f
    98f8:	f1074618 	.word	0xf1074618
    98fc:	46bd0710 	.word	0x46bd0710
    9900:	bf00bd80 	.word	0xbf00bd80

00009904 <CAN_SetRxCallback>:
    9904:	b084b580 	.word	0xb084b580
    9908:	4603af00 	.word	0x4603af00
    990c:	71fb6039 	.word	0x71fb6039
    9910:	0300f04f 	.word	0x0300f04f
    9914:	79fa73fb 	.word	0x79fa73fb
    9918:	030ff107 	.word	0x030ff107
    991c:	46194610 	.word	0x46194610
    9920:	f9d8f001 	.word	0xf9d8f001
    9924:	2b004603 	.word	0x2b004603
    9928:	f04fd102 	.word	0xf04fd102
    992c:	e0120300 	.word	0xe0120300
    9930:	46197bfb 	.word	0x46197bfb
    9934:	32d0f640 	.word	0x32d0f640
    9938:	0200f2c1 	.word	0x0200f2c1
    993c:	ea4f460b 	.word	0xea4f460b
    9940:	1a5b1303 	.word	0x1a5b1303
    9944:	0383ea4f 	.word	0x0383ea4f
    9948:	f10318d3 	.word	0xf10318d3
    994c:	683a032c 	.word	0x683a032c
    9950:	f04f601a 	.word	0xf04f601a
    9954:	46180301 	.word	0x46180301
    9958:	0710f107 	.word	0x0710f107
    995c:	bd8046bd 	.word	0xbd8046bd

00009960 <CAN_SetChannelInfo>:
    9960:	b084b580 	.word	0xb084b580
    9964:	4603af00 	.word	0x4603af00
    9968:	71fb6039 	.word	0x71fb6039
    996c:	0300f04f 	.word	0x0300f04f
    9970:	79fa73fb 	.word	0x79fa73fb
    9974:	030ff107 	.word	0x030ff107
    9978:	46194610 	.word	0x46194610
    997c:	f9aaf001 	.word	0xf9aaf001
    9980:	2b004603 	.word	0x2b004603
    9984:	f04fd102 	.word	0xf04fd102
    9988:	e0120300 	.word	0xe0120300
    998c:	46197bfb 	.word	0x46197bfb
    9990:	32d0f640 	.word	0x32d0f640
    9994:	0200f2c1 	.word	0x0200f2c1
    9998:	ea4f460b 	.word	0xea4f460b
    999c:	1a5b1303 	.word	0x1a5b1303
    99a0:	0383ea4f 	.word	0x0383ea4f
    99a4:	f10318d3 	.word	0xf10318d3
    99a8:	683a0328 	.word	0x683a0328
    99ac:	f04f601a 	.word	0xf04f601a
    99b0:	46180301 	.word	0x46180301
    99b4:	0710f107 	.word	0x0710f107
    99b8:	bd8046bd 	.word	0xbd8046bd

000099bc <CAN_GetChannelInfo>:
    99bc:	b084b580 	.word	0xb084b580
    99c0:	4603af00 	.word	0x4603af00
    99c4:	f04f71fb 	.word	0xf04f71fb
    99c8:	73fb0300 	.word	0x73fb0300
    99cc:	f10779fa 	.word	0xf10779fa
    99d0:	4610030f 	.word	0x4610030f
    99d4:	f0014619 	.word	0xf0014619
    99d8:	4603f97d 	.word	0x4603f97d
    99dc:	d1022b00 	.word	0xd1022b00
    99e0:	0300f04f 	.word	0x0300f04f
    99e4:	7bfbe00f 	.word	0x7bfbe00f
    99e8:	f6404619 	.word	0xf6404619
    99ec:	f2c132d0 	.word	0xf2c132d0
    99f0:	460b0200 	.word	0x460b0200
    99f4:	1303ea4f 	.word	0x1303ea4f
    99f8:	ea4f1a5b 	.word	0xea4f1a5b
    99fc:	18d30383 	.word	0x18d30383
    9a00:	0328f103 	.word	0x0328f103
    9a04:	4618681b 	.word	0x4618681b
    9a08:	0710f107 	.word	0x0710f107
    9a0c:	bd8046bd 	.word	0xbd8046bd

00009a10 <CAN_SetTxErrorCallback>:
    9a10:	b084b580 	.word	0xb084b580
    9a14:	4603af00 	.word	0x4603af00
    9a18:	71fb6039 	.word	0x71fb6039
    9a1c:	0300f04f 	.word	0x0300f04f
    9a20:	79fa73fb 	.word	0x79fa73fb
    9a24:	030ff107 	.word	0x030ff107
    9a28:	46194610 	.word	0x46194610
    9a2c:	f952f001 	.word	0xf952f001
    9a30:	2b004603 	.word	0x2b004603
    9a34:	f04fd102 	.word	0xf04fd102
    9a38:	e0120300 	.word	0xe0120300
    9a3c:	46197bfb 	.word	0x46197bfb
    9a40:	32d0f640 	.word	0x32d0f640
    9a44:	0200f2c1 	.word	0x0200f2c1
    9a48:	ea4f460b 	.word	0xea4f460b
    9a4c:	1a5b1303 	.word	0x1a5b1303
    9a50:	0383ea4f 	.word	0x0383ea4f
    9a54:	f10318d3 	.word	0xf10318d3
    9a58:	683a0330 	.word	0x683a0330
    9a5c:	f04f601a 	.word	0xf04f601a
    9a60:	46180301 	.word	0x46180301
    9a64:	0710f107 	.word	0x0710f107
    9a68:	bd8046bd 	.word	0xbd8046bd

00009a6c <CAN_SetBusMode>:
    9a6c:	b084b580 	.word	0xb084b580
    9a70:	4602af00 	.word	0x4602af00
    9a74:	71fa460b 	.word	0x71fa460b
    9a78:	f04f71bb 	.word	0xf04f71bb
    9a7c:	72fb0300 	.word	0x72fb0300
    9a80:	f10779fa 	.word	0xf10779fa
    9a84:	4610030b 	.word	0x4610030b
    9a88:	f0014619 	.word	0xf0014619
    9a8c:	4603f923 	.word	0x4603f923
    9a90:	d1022b00 	.word	0xd1022b00
    9a94:	0300f04f 	.word	0x0300f04f
    9a98:	7afbe030 	.word	0x7afbe030
    9a9c:	f640461a 	.word	0xf640461a
    9aa0:	f2c02354 	.word	0xf2c02354
    9aa4:	f8530301 	.word	0xf8530301
    9aa8:	60fb3022 	.word	0x60fb3022
    9aac:	2b0179bb 	.word	0x2b0179bb
    9ab0:	2b02d004 	.word	0x2b02d004
    9ab4:	2b00d014 	.word	0x2b00d014
    9ab8:	e01ad009 	.word	0xe01ad009
    9abc:	f04f68fb 	.word	0xf04f68fb
    9ac0:	601a0201 	.word	0x601a0201
    9ac4:	f04f68fb 	.word	0xf04f68fb
    9ac8:	611a0200 	.word	0x611a0200
    9acc:	68fbe014 	.word	0x68fbe014
    9ad0:	0200f04f 	.word	0x0200f04f
    9ad4:	68fb601a 	.word	0x68fb601a
    9ad8:	0283f04f 	.word	0x0283f04f
    9adc:	e00b611a 	.word	0xe00b611a
    9ae0:	f04f68fb 	.word	0xf04f68fb
    9ae4:	601a0202 	.word	0x601a0202
    9ae8:	f04f68fb 	.word	0xf04f68fb
    9aec:	611a0201 	.word	0x611a0201
    9af0:	f04fe002 	.word	0xf04fe002
    9af4:	e0010302 	.word	0xe0010302
    9af8:	0301f04f 	.word	0x0301f04f
    9afc:	f1074618 	.word	0xf1074618
    9b00:	46bd0710 	.word	0x46bd0710
    9b04:	bf00bd80 	.word	0xbf00bd80

00009b08 <CAN_TxQueueGetNext>:
    9b08:	b086b580 	.word	0xb086b580
    9b0c:	4603af00 	.word	0x4603af00
    9b10:	f04f71fb 	.word	0xf04f71fb
    9b14:	72fb0300 	.word	0x72fb0300
    9b18:	f10779fa 	.word	0xf10779fa
    9b1c:	4610030b 	.word	0x4610030b
    9b20:	f0014619 	.word	0xf0014619
    9b24:	4603f8d7 	.word	0x4603f8d7
    9b28:	d1022b00 	.word	0xd1022b00
    9b2c:	0300f04f 	.word	0x0300f04f
    9b30:	7afbe028 	.word	0x7afbe028
    9b34:	f640461a 	.word	0xf640461a
    9b38:	f2c02354 	.word	0xf2c02354
    9b3c:	f8530301 	.word	0xf8530301
    9b40:	617b3022 	.word	0x617b3022
    9b44:	461a7afb 	.word	0x461a7afb
    9b48:	ea4f4613 	.word	0xea4f4613
    9b4c:	1a9b1303 	.word	0x1a9b1303
    9b50:	0383ea4f 	.word	0x0383ea4f
    9b54:	32d0f640 	.word	0x32d0f640
    9b58:	0200f2c1 	.word	0x0200f2c1
    9b5c:	613b189b 	.word	0x613b189b
    9b60:	885b693b 	.word	0x885b693b
    9b64:	2b00b29b 	.word	0x2b00b29b
    9b68:	697bd005 	.word	0x697bd005
    9b6c:	f003681b 	.word	0xf003681b
    9b70:	2b000301 	.word	0x2b000301
    9b74:	f04fd002 	.word	0xf04fd002
    9b78:	e0030300 	.word	0xe0030300
    9b7c:	699b693b 	.word	0x699b693b
    9b80:	68fb60fb 	.word	0x68fb60fb
    9b84:	f1074618 	.word	0xf1074618
    9b88:	46bd0718 	.word	0x46bd0718
    9b8c:	bf00bd80 	.word	0xbf00bd80

00009b90 <CAN_RxQueueGetNext>:
    9b90:	b086b580 	.word	0xb086b580
    9b94:	4603af00 	.word	0x4603af00
    9b98:	f04f71fb 	.word	0xf04f71fb
    9b9c:	72fb0300 	.word	0x72fb0300
    9ba0:	f10779fa 	.word	0xf10779fa
    9ba4:	4610030b 	.word	0x4610030b
    9ba8:	f0014619 	.word	0xf0014619
    9bac:	4603f893 	.word	0x4603f893
    9bb0:	d1022b00 	.word	0xd1022b00
    9bb4:	0300f04f 	.word	0x0300f04f
    9bb8:	7afbe02a 	.word	0x7afbe02a
    9bbc:	f640461a 	.word	0xf640461a
    9bc0:	f2c02354 	.word	0xf2c02354
    9bc4:	f8530301 	.word	0xf8530301
    9bc8:	617b3022 	.word	0x617b3022
    9bcc:	461a7afb 	.word	0x461a7afb
    9bd0:	ea4f4613 	.word	0xea4f4613
    9bd4:	1a9b1303 	.word	0x1a9b1303
    9bd8:	0383ea4f 	.word	0x0383ea4f
    9bdc:	32d0f640 	.word	0x32d0f640
    9be0:	0200f2c1 	.word	0x0200f2c1
    9be4:	613b189b 	.word	0x613b189b
    9be8:	88db693b 	.word	0x88db693b
    9bec:	693bb29a 	.word	0x693bb29a
    9bf0:	429a889b 	.word	0x429a889b
    9bf4:	697bd005 	.word	0x697bd005
    9bf8:	f003681b 	.word	0xf003681b
    9bfc:	2b000301 	.word	0x2b000301
    9c00:	f04fd002 	.word	0xf04fd002
    9c04:	e0030300 	.word	0xe0030300
    9c08:	6a5b693b 	.word	0x6a5b693b
    9c0c:	68fb60fb 	.word	0x68fb60fb
    9c10:	f1074618 	.word	0xf1074618
    9c14:	46bd0718 	.word	0x46bd0718
    9c18:	bf00bd80 	.word	0xbf00bd80

00009c1c <CAN_TxQueueWriteNext>:
    9c1c:	b088b580 	.word	0xb088b580
    9c20:	4603af00 	.word	0x4603af00
    9c24:	f04f71fb 	.word	0xf04f71fb
    9c28:	77fb0300 	.word	0x77fb0300
    9c2c:	0300f04f 	.word	0x0300f04f
    9c30:	f04f77bb 	.word	0xf04f77bb
    9c34:	73fb0300 	.word	0x73fb0300
    9c38:	f10779fa 	.word	0xf10779fa
    9c3c:	4610030f 	.word	0x4610030f
    9c40:	f0014619 	.word	0xf0014619
    9c44:	4603f847 	.word	0x4603f847
    9c48:	d1022b00 	.word	0xd1022b00
    9c4c:	0300f04f 	.word	0x0300f04f
    9c50:	7bfbe0c1 	.word	0x7bfbe0c1
    9c54:	4613461a 	.word	0x4613461a
    9c58:	1303ea4f 	.word	0x1303ea4f
    9c5c:	ea4f1a9b 	.word	0xea4f1a9b
    9c60:	f6400383 	.word	0xf6400383
    9c64:	f2c132d0 	.word	0xf2c132d0
    9c68:	189b0200 	.word	0x189b0200
    9c6c:	7bfb61bb 	.word	0x7bfb61bb
    9c70:	f640461a 	.word	0xf640461a
    9c74:	f2c02354 	.word	0xf2c02354
    9c78:	f8530301 	.word	0xf8530301
    9c7c:	617b3022 	.word	0x617b3022
    9c80:	0019f04f 	.word	0x0019f04f
    9c84:	fcf8f7ff 	.word	0xfcf8f7ff
    9c88:	2b004603 	.word	0x2b004603
    9c8c:	f04fd006 	.word	0xf04fd006
    9c90:	f7ff0019 	.word	0xf7ff0019
    9c94:	f04ffcb5 	.word	0xf04ffcb5
    9c98:	77fb0301 	.word	0x77fb0301
    9c9c:	0022f04f 	.word	0x0022f04f
    9ca0:	fceaf7ff 	.word	0xfceaf7ff
    9ca4:	2b004603 	.word	0x2b004603
    9ca8:	f04fd006 	.word	0xf04fd006
    9cac:	f7ff0022 	.word	0xf7ff0022
    9cb0:	f04ffca7 	.word	0xf04ffca7
    9cb4:	77bb0301 	.word	0x77bb0301
    9cb8:	885b69bb 	.word	0x885b69bb
    9cbc:	69bbb29a 	.word	0x69bbb29a
    9cc0:	429a881b 	.word	0x429a881b
    9cc4:	697bd15f 	.word	0x697bd15f
    9cc8:	f003689b 	.word	0xf003689b
    9ccc:	2b000304 	.word	0x2b000304
    9cd0:	69bbd059 	.word	0x69bbd059
    9cd4:	613b699b 	.word	0x613b699b
    9cd8:	68da693b 	.word	0x68da693b
    9cdc:	63da697b 	.word	0x63da697b
    9ce0:	689a693b 	.word	0x689a693b
    9ce4:	639a697b 	.word	0x639a697b
    9ce8:	685b693b 	.word	0x685b693b
    9cec:	4260f023 	.word	0x4260f023
    9cf0:	635a697b 	.word	0x635a697b
    9cf4:	789b693b 	.word	0x789b693b
    9cf8:	7283ea4f 	.word	0x7283ea4f
    9cfc:	78db693b 	.word	0x78db693b
    9d00:	4303ea4f 	.word	0x4303ea4f
    9d04:	461a4313 	.word	0x461a4313
    9d08:	0300f04f 	.word	0x0300f04f
    9d0c:	030ff2cc 	.word	0x030ff2cc
    9d10:	697a4013 	.word	0x697a4013
    9d14:	f04f6313 	.word	0xf04f6313
    9d18:	777b0321 	.word	0x777b0321
    9d1c:	789b693b 	.word	0x789b693b
    9d20:	0304f003 	.word	0x0304f003
    9d24:	d0032b00 	.word	0xd0032b00
    9d28:	f0437f7b 	.word	0xf0437f7b
    9d2c:	777b0302 	.word	0x777b0302
    9d30:	697b7f7a 	.word	0x697b7f7a
    9d34:	697b605a 	.word	0x697b605a
    9d38:	f003681b 	.word	0xf003681b
    9d3c:	2b000301 	.word	0x2b000301
    9d40:	7ffbd010 	.word	0x7ffbd010
    9d44:	d0032b00 	.word	0xd0032b00
    9d48:	0019f04f 	.word	0x0019f04f
    9d4c:	fc3cf7ff 	.word	0xfc3cf7ff
    9d50:	2b007fbb 	.word	0x2b007fbb
    9d54:	f04fd003 	.word	0xf04fd003
    9d58:	f7ff0022 	.word	0xf7ff0022
    9d5c:	f04ffc35 	.word	0xf04ffc35
    9d60:	e0380303 	.word	0xe0380303
    9d64:	2b007ffb 	.word	0x2b007ffb
    9d68:	f04fd003 	.word	0xf04fd003
    9d6c:	f7ff0019 	.word	0xf7ff0019
    9d70:	7fbbfc2b 	.word	0x7fbbfc2b
    9d74:	d0032b00 	.word	0xd0032b00
    9d78:	0022f04f 	.word	0x0022f04f
    9d7c:	fc24f7ff 	.word	0xfc24f7ff
    9d80:	0301f04f 	.word	0x0301f04f
    9d84:	69bbe027 	.word	0x69bbe027
    9d88:	b29b885b 	.word	0xb29b885b
    9d8c:	33fff103 	.word	0x33fff103
    9d90:	69bbb29a 	.word	0x69bbb29a
    9d94:	69bb805a 	.word	0x69bb805a
    9d98:	f103699b 	.word	0xf103699b
    9d9c:	69bb0210 	.word	0x69bb0210
    9da0:	69bb619a 	.word	0x69bb619a
    9da4:	69bb699a 	.word	0x69bb699a
    9da8:	429a68db 	.word	0x429a68db
    9dac:	69bbd903 	.word	0x69bbd903
    9db0:	69bb689a 	.word	0x69bb689a
    9db4:	7ffb619a 	.word	0x7ffb619a
    9db8:	d0032b00 	.word	0xd0032b00
    9dbc:	0019f04f 	.word	0x0019f04f
    9dc0:	fc02f7ff 	.word	0xfc02f7ff
    9dc4:	2b007fbb 	.word	0x2b007fbb
    9dc8:	f04fd003 	.word	0xf04fd003
    9dcc:	f7ff0022 	.word	0xf7ff0022
    9dd0:	f04ffbfb 	.word	0xf04ffbfb
    9dd4:	46180302 	.word	0x46180302
    9dd8:	0720f107 	.word	0x0720f107
    9ddc:	bd8046bd 	.word	0xbd8046bd

00009de0 <CAN_RxQueueReadNext>:
    9de0:	b088b580 	.word	0xb088b580
    9de4:	4603af00 	.word	0x4603af00
    9de8:	f04f71fb 	.word	0xf04f71fb
    9dec:	77fb0300 	.word	0x77fb0300
    9df0:	0300f04f 	.word	0x0300f04f
    9df4:	f04f77bb 	.word	0xf04f77bb
    9df8:	73fb0300 	.word	0x73fb0300
    9dfc:	f10779fa 	.word	0xf10779fa
    9e00:	4610030f 	.word	0x4610030f
    9e04:	f0004619 	.word	0xf0004619
    9e08:	4603ff65 	.word	0x4603ff65
    9e0c:	d1022b00 	.word	0xd1022b00
    9e10:	0300f04f 	.word	0x0300f04f
    9e14:	7bfbe064 	.word	0x7bfbe064
    9e18:	4613461a 	.word	0x4613461a
    9e1c:	1303ea4f 	.word	0x1303ea4f
    9e20:	ea4f1a9b 	.word	0xea4f1a9b
    9e24:	f6400383 	.word	0xf6400383
    9e28:	f2c132d0 	.word	0xf2c132d0
    9e2c:	189b0200 	.word	0x189b0200
    9e30:	f04f61bb 	.word	0xf04f61bb
    9e34:	f7ff0019 	.word	0xf7ff0019
    9e38:	4603fc1f 	.word	0x4603fc1f
    9e3c:	d0062b00 	.word	0xd0062b00
    9e40:	0019f04f 	.word	0x0019f04f
    9e44:	fbdcf7ff 	.word	0xfbdcf7ff
    9e48:	0301f04f 	.word	0x0301f04f
    9e4c:	f04f77fb 	.word	0xf04f77fb
    9e50:	f7ff0022 	.word	0xf7ff0022
    9e54:	4603fc11 	.word	0x4603fc11
    9e58:	d0062b00 	.word	0xd0062b00
    9e5c:	0022f04f 	.word	0x0022f04f
    9e60:	fbcef7ff 	.word	0xfbcef7ff
    9e64:	0301f04f 	.word	0x0301f04f
    9e68:	69bb77bb 	.word	0x69bb77bb
    9e6c:	b29b88db 	.word	0xb29b88db
    9e70:	0301f103 	.word	0x0301f103
    9e74:	69bbb29a 	.word	0x69bbb29a
    9e78:	69bb80da 	.word	0x69bb80da
    9e7c:	2b006b5b 	.word	0x2b006b5b
    9e80:	69bbd00a 	.word	0x69bbd00a
    9e84:	617b6a5b 	.word	0x617b6a5b
    9e88:	f103697b 	.word	0xf103697b
    9e8c:	617b0318 	.word	0x617b0318
    9e90:	697a69bb 	.word	0x697a69bb
    9e94:	e009625a 	.word	0xe009625a
    9e98:	6a5b69bb 	.word	0x6a5b69bb
    9e9c:	693b613b 	.word	0x693b613b
    9ea0:	0310f103 	.word	0x0310f103
    9ea4:	69bb613b 	.word	0x69bb613b
    9ea8:	625a693a 	.word	0x625a693a
    9eac:	6a5a69bb 	.word	0x6a5a69bb
    9eb0:	695b69bb 	.word	0x695b69bb
    9eb4:	d903429a 	.word	0xd903429a
    9eb8:	691a69bb 	.word	0x691a69bb
    9ebc:	625a69bb 	.word	0x625a69bb
    9ec0:	2b007ffb 	.word	0x2b007ffb
    9ec4:	f04fd003 	.word	0xf04fd003
    9ec8:	f7ff0019 	.word	0xf7ff0019
    9ecc:	7fbbfb7d 	.word	0x7fbbfb7d
    9ed0:	d0032b00 	.word	0xd0032b00
    9ed4:	0022f04f 	.word	0x0022f04f
    9ed8:	fb76f7ff 	.word	0xfb76f7ff
    9edc:	0301f04f 	.word	0x0301f04f
    9ee0:	f1074618 	.word	0xf1074618
    9ee4:	46bd0720 	.word	0x46bd0720
    9ee8:	bf00bd80 	.word	0xbf00bd80

00009eec <CAN_GetTransceiverType>:
    9eec:	b084b580 	.word	0xb084b580
    9ef0:	4603af00 	.word	0x4603af00
    9ef4:	71fb6039 	.word	0x71fb6039
    9ef8:	0300f04f 	.word	0x0300f04f
    9efc:	f04f72fb 	.word	0xf04f72fb
    9f00:	60fb0301 	.word	0x60fb0301
    9f04:	f10779fa 	.word	0xf10779fa
    9f08:	4610030b 	.word	0x4610030b
    9f0c:	f0004619 	.word	0xf0004619
    9f10:	4603fee1 	.word	0x4603fee1
    9f14:	d0022b00 	.word	0xd0022b00
    9f18:	2b00683b 	.word	0x2b00683b
    9f1c:	f04fd103 	.word	0xf04fd103
    9f20:	60fb0300 	.word	0x60fb0300
    9f24:	683be003 	.word	0x683be003
    9f28:	0205f04f 	.word	0x0205f04f
    9f2c:	68fb701a 	.word	0x68fb701a
    9f30:	f1074618 	.word	0xf1074618
    9f34:	46bd0710 	.word	0x46bd0710
    9f38:	bf00bd80 	.word	0xbf00bd80

00009f3c <CAN_SetTransceiverMode>:
    9f3c:	b084b580 	.word	0xb084b580
    9f40:	4602af00 	.word	0x4602af00
    9f44:	71fa460b 	.word	0x71fa460b
    9f48:	f04f71bb 	.word	0xf04f71bb
    9f4c:	72fb0300 	.word	0x72fb0300
    9f50:	0301f04f 	.word	0x0301f04f
    9f54:	79fa60fb 	.word	0x79fa60fb
    9f58:	030bf107 	.word	0x030bf107
    9f5c:	46194610 	.word	0x46194610
    9f60:	feb8f000 	.word	0xfeb8f000
    9f64:	2b004603 	.word	0x2b004603
    9f68:	f04fd103 	.word	0xf04fd103
    9f6c:	60fb0300 	.word	0x60fb0300
    9f70:	79fbe05e 	.word	0x79fbe05e
    9f74:	d1572b01 	.word	0xd1572b01
    9f78:	2b0079bb 	.word	0x2b0079bb
    9f7c:	f44fd118 	.word	0xf44fd118
    9f80:	f2c24300 	.word	0xf2c24300
    9f84:	f44f0309 	.word	0xf44f0309
    9f88:	f2c24200 	.word	0xf2c24200
    9f8c:	69920209 	.word	0x69920209
    9f90:	7200f042 	.word	0x7200f042
    9f94:	f44f619a 	.word	0xf44f619a
    9f98:	f2c24300 	.word	0xf2c24300
    9f9c:	f44f0309 	.word	0xf44f0309
    9fa0:	f2c24200 	.word	0xf2c24200
    9fa4:	69920209 	.word	0x69920209
    9fa8:	6280f042 	.word	0x6280f042
    9fac:	e03f619a 	.word	0xe03f619a
    9fb0:	2b0579bb 	.word	0x2b0579bb
    9fb4:	f44fd118 	.word	0xf44fd118
    9fb8:	f2c24300 	.word	0xf2c24300
    9fbc:	f44f0309 	.word	0xf44f0309
    9fc0:	f2c24200 	.word	0xf2c24200
    9fc4:	69d20209 	.word	0x69d20209
    9fc8:	7200f042 	.word	0x7200f042
    9fcc:	f44f61da 	.word	0xf44f61da
    9fd0:	f2c24300 	.word	0xf2c24300
    9fd4:	f44f0309 	.word	0xf44f0309
    9fd8:	f2c24200 	.word	0xf2c24200
    9fdc:	69d20209 	.word	0x69d20209
    9fe0:	6280f042 	.word	0x6280f042
    9fe4:	e02361da 	.word	0xe02361da
    9fe8:	2b0279bb 	.word	0x2b0279bb
    9fec:	f44fd118 	.word	0xf44fd118
    9ff0:	f2c24300 	.word	0xf2c24300
    9ff4:	f44f0309 	.word	0xf44f0309
    9ff8:	f2c24200 	.word	0xf2c24200
    9ffc:	69d20209 	.word	0x69d20209
    a000:	7200f042 	.word	0x7200f042
    a004:	f44f61da 	.word	0xf44f61da
    a008:	f2c24300 	.word	0xf2c24300
    a00c:	f44f0309 	.word	0xf44f0309
    a010:	f2c24200 	.word	0xf2c24200
    a014:	69920209 	.word	0x69920209
    a018:	6280f042 	.word	0x6280f042
    a01c:	e007619a 	.word	0xe007619a
    a020:	0300f04f 	.word	0x0300f04f
    a024:	e00360fb 	.word	0xe00360fb
    a028:	0300f04f 	.word	0x0300f04f
    a02c:	bf0060fb 	.word	0xbf0060fb
    a030:	461868fb 	.word	0x461868fb
    a034:	0710f107 	.word	0x0710f107
    a038:	bd8046bd 	.word	0xbd8046bd

0000a03c <CAN_FilterAddId>:
    a03c:	e92db40c 	.word	0xe92db40c
    a040:	b0894ff0 	.word	0xb0894ff0
    a044:	4602af00 	.word	0x4602af00
    a048:	71fa460b 	.word	0x71fa460b
    a04c:	f04f71bb 	.word	0xf04f71bb
    a050:	61fb0300 	.word	0x61fb0300
    a054:	0300f04f 	.word	0x0300f04f
    a058:	79fa74fb 	.word	0x79fa74fb
    a05c:	0313f107 	.word	0x0313f107
    a060:	46194610 	.word	0x46194610
    a064:	fe36f000 	.word	0xfe36f000
    a068:	2b004603 	.word	0x2b004603
    a06c:	f04fd102 	.word	0xf04fd102
    a070:	e2fd0300 	.word	0xe2fd0300
    a074:	4340f44f 	.word	0x4340f44f
    a078:	0303f2c4 	.word	0x0303f2c4
    a07c:	f44f61bb 	.word	0xf44f61bb
    a080:	f2c44300 	.word	0xf2c44300
    a084:	617b0303 	.word	0x617b0303
    a088:	f04f69bb 	.word	0xf04f69bb
    a08c:	601a0201 	.word	0x601a0201
    a090:	430cf640 	.word	0x430cf640
    a094:	0300f2c1 	.word	0x0300f2c1
    a098:	2b00781b 	.word	0x2b00781b
    a09c:	f04fd102 	.word	0xf04fd102
    a0a0:	61fb0301 	.word	0x61fb0301
    a0a4:	2b0379bb 	.word	0x2b0379bb
    a0a8:	82e0f200 	.word	0x82e0f200
    a0ac:	f852a201 	.word	0xf852a201
    a0b0:	bf00f023 	.word	0xbf00f023
    a0b4:	0000a0c5 	.word	0x0000a0c5
    a0b8:	0000a481 	.word	0x0000a481
    a0bc:	0000a359 	.word	0x0000a359
    a0c0:	0000a56d 	.word	0x0000a56d
    a0c4:	f2406cba 	.word	0xf2406cba
    a0c8:	429a73ff 	.word	0x429a73ff
    a0cc:	f04fd902 	.word	0xf04fd902
    a0d0:	e2cd0300 	.word	0xe2cd0300
    a0d4:	a014f8d7 	.word	0xa014f8d7
    a0d8:	69bb697e 	.word	0x69bb697e
    a0dc:	ea4f689b 	.word	0xea4f689b
    a0e0:	b29d0353 	.word	0xb29d0353
    a0e4:	685b69bb 	.word	0x685b69bb
    a0e8:	0353ea4f 	.word	0x0353ea4f
    a0ec:	f883fa1f 	.word	0xf883fa1f
    a0f0:	d1044545 	.word	0xd1044545
    a0f4:	695b69bb 	.word	0x695b69bb
    a0f8:	6f00f5b3 	.word	0x6f00f5b3
    a0fc:	4545d010 	.word	0x4545d010
    a100:	69bbd911 	.word	0x69bbd911
    a104:	f5b3695b 	.word	0xf5b3695b
    a108:	d10c6f00 	.word	0xd10c6f00
    a10c:	f1a3462b 	.word	0xf1a3462b
    a110:	ea4f0302 	.word	0xea4f0302
    a114:	44530343 	.word	0x44530343
    a118:	f5b3881b 	.word	0xf5b3881b
    a11c:	d0024f70 	.word	0xd0024f70
    a120:	0300f04f 	.word	0x0300f04f
    a124:	f04fe2a4 	.word	0xf04fe2a4
    a128:	79fb0900 	.word	0x79fb0900
    a12c:	69fbb29a 	.word	0x69fbb29a
    a130:	18d3b29b 	.word	0x18d3b29b
    a134:	ea4fb29b 	.word	0xea4fb29b
    a138:	b29a3343 	.word	0xb29a3343
    a13c:	b29b6cbb 	.word	0xb29b6cbb
    a140:	fa1f4313 	.word	0xfa1f4313
    a144:	4545f983 	.word	0x4545f983
    a148:	4545d00b 	.word	0x4545d00b
    a14c:	462bd964 	.word	0x462bd964
    a150:	0302f1a3 	.word	0x0302f1a3
    a154:	0343ea4f 	.word	0x0343ea4f
    a158:	881b4453 	.word	0x881b4453
    a15c:	4f70f5b3 	.word	0x4f70f5b3
    a160:	69bbd05a 	.word	0x69bbd05a
    a164:	ea4f695b 	.word	0xea4f695b
    a168:	b29c0393 	.word	0xb29c0393
    a16c:	689b69bb 	.word	0x689b69bb
    a170:	0393ea4f 	.word	0x0393ea4f
    a174:	fb83fa1f 	.word	0xfb83fa1f
    a178:	4623e00e 	.word	0x4623e00e
    a17c:	0383ea4f 	.word	0x0383ea4f
    a180:	462218f3 	.word	0x462218f3
    a184:	32fff102 	.word	0x32fff102
    a188:	0282ea4f 	.word	0x0282ea4f
    a18c:	681218b2 	.word	0x681218b2
    a190:	f104601a 	.word	0xf104601a
    a194:	b29c33ff 	.word	0xb29c33ff
    a198:	d8ee455c 	.word	0xd8ee455c
    a19c:	689b69bb 	.word	0x689b69bb
    a1a0:	0393ea4f 	.word	0x0393ea4f
    a1a4:	4623b29c 	.word	0x4623b29c
    a1a8:	0383ea4f 	.word	0x0383ea4f
    a1ac:	f44f18f3 	.word	0xf44f18f3
    a1b0:	601a4270 	.word	0x601a4270
    a1b4:	689b69bb 	.word	0x689b69bb
    a1b8:	0353ea4f 	.word	0x0353ea4f
    a1bc:	f103b29b 	.word	0xf103b29b
    a1c0:	b29d0301 	.word	0xb29d0301
    a1c4:	689b69bb 	.word	0x689b69bb
    a1c8:	0393ea4f 	.word	0x0393ea4f
    a1cc:	69bbb29c 	.word	0x69bbb29c
    a1d0:	ea4f685b 	.word	0xea4f685b
    a1d4:	fa1f0353 	.word	0xfa1f0353
    a1d8:	69bbf883 	.word	0x69bbf883
    a1dc:	ea4f685b 	.word	0xea4f685b
    a1e0:	fa1f0393 	.word	0xfa1f0393
    a1e4:	69bbfb83 	.word	0x69bbfb83
    a1e8:	f103689b 	.word	0xf103689b
    a1ec:	69bb0204 	.word	0x69bb0204
    a1f0:	69bb609a 	.word	0x69bb609a
    a1f4:	f10368db 	.word	0xf10368db
    a1f8:	69bb0204 	.word	0x69bb0204
    a1fc:	69bb60da 	.word	0x69bb60da
    a200:	f103691b 	.word	0xf103691b
    a204:	69bb0204 	.word	0x69bb0204
    a208:	69bb611a 	.word	0x69bb611a
    a20c:	f103695b 	.word	0xf103695b
    a210:	69bb0204 	.word	0x69bb0204
    a214:	e06d615a 	.word	0xe06d615a
    a218:	689b69bb 	.word	0x689b69bb
    a21c:	0353ea4f 	.word	0x0353ea4f
    a220:	f1a3b29b 	.word	0xf1a3b29b
    a224:	b29d0302 	.word	0xb29d0302
    a228:	689b69bb 	.word	0x689b69bb
    a22c:	0393ea4f 	.word	0x0393ea4f
    a230:	f103b29b 	.word	0xf103b29b
    a234:	b29c33ff 	.word	0xb29c33ff
    a238:	685b69bb 	.word	0x685b69bb
    a23c:	0353ea4f 	.word	0x0353ea4f
    a240:	f883fa1f 	.word	0xf883fa1f
    a244:	f005e056 	.word	0xf005e056
    a248:	b29b0301 	.word	0xb29b0301
    a24c:	d1222b00 	.word	0xd1222b00
    a250:	f103462b 	.word	0xf103462b
    a254:	ea4f0301 	.word	0xea4f0301
    a258:	44530343 	.word	0x44530343
    a25c:	454b881b 	.word	0x454b881b
    a260:	4623d919 	.word	0x4623d919
    a264:	0383ea4f 	.word	0x0383ea4f
    a268:	462318f2 	.word	0x462318f2
    a26c:	0383ea4f 	.word	0x0383ea4f
    a270:	681b18f3 	.word	0x681b18f3
    a274:	4313ea4f 	.word	0x4313ea4f
    a278:	4303ea4f 	.word	0x4303ea4f
    a27c:	ea4f4621 	.word	0xea4f4621
    a280:	18710181 	.word	0x18710181
    a284:	ea4f6809 	.word	0xea4f6809
    a288:	430b4111 	.word	0x430b4111
    a28c:	f1056013 	.word	0xf1056013
    a290:	b29d0301 	.word	0xb29d0301
    a294:	f005e02e 	.word	0xf005e02e
    a298:	b29b0301 	.word	0xb29b0301
    a29c:	d02c2b00 	.word	0xd02c2b00
    a2a0:	d92a2d02 	.word	0xd92a2d02
    a2a4:	f1a3462b 	.word	0xf1a3462b
    a2a8:	ea4f0303 	.word	0xea4f0303
    a2ac:	44530343 	.word	0x44530343
    a2b0:	454b881b 	.word	0x454b881b
    a2b4:	4623d921 	.word	0x4623d921
    a2b8:	0383ea4f 	.word	0x0383ea4f
    a2bc:	462318f2 	.word	0x462318f2
    a2c0:	0383ea4f 	.word	0x0383ea4f
    a2c4:	681b18f3 	.word	0x681b18f3
    a2c8:	4303ea4f 	.word	0x4303ea4f
    a2cc:	4313ea4f 	.word	0x4313ea4f
    a2d0:	f1014621 	.word	0xf1014621
    a2d4:	ea4f31ff 	.word	0xea4f31ff
    a2d8:	18710181 	.word	0x18710181
    a2dc:	ea4f6809 	.word	0xea4f6809
    a2e0:	430b4101 	.word	0x430b4101
    a2e4:	f1a56013 	.word	0xf1a56013
    a2e8:	b29d0303 	.word	0xb29d0303
    a2ec:	33fff104 	.word	0x33fff104
    a2f0:	bf00b29c 	.word	0xbf00b29c
    a2f4:	d2a64545 	.word	0xd2a64545
    a2f8:	bf00e000 	.word	0xbf00e000
    a2fc:	0800f04f 	.word	0x0800f04f
    a300:	0301f005 	.word	0x0301f005
    a304:	2b00b29b 	.word	0x2b00b29b
    a308:	464bd014 	.word	0x464bd014
    a30c:	4303ea4f 	.word	0x4303ea4f
    a310:	46234698 	.word	0x46234698
    a314:	0383ea4f 	.word	0x0383ea4f
    a318:	462318f2 	.word	0x462318f2
    a31c:	0383ea4f 	.word	0x0383ea4f
    a320:	681b18f3 	.word	0x681b18f3
    a324:	4303ea4f 	.word	0x4303ea4f
    a328:	4313ea4f 	.word	0x4313ea4f
    a32c:	0308ea43 	.word	0x0308ea43
    a330:	e19b6013 	.word	0xe19b6013
    a334:	462346c8 	.word	0x462346c8
    a338:	0383ea4f 	.word	0x0383ea4f
    a33c:	462318f2 	.word	0x462318f2
    a340:	0383ea4f 	.word	0x0383ea4f
    a344:	681b18f3 	.word	0x681b18f3
    a348:	4313ea4f 	.word	0x4313ea4f
    a34c:	4303ea4f 	.word	0x4303ea4f
    a350:	0308ea43 	.word	0x0308ea43
    a354:	e1896013 	.word	0xe1896013
    a358:	034cf107 	.word	0x034cf107
    a35c:	68fb60fb 	.word	0x68fb60fb
    a360:	0204f103 	.word	0x0204f103
    a364:	681c60fa 	.word	0x681c60fa
    a368:	f2406cba 	.word	0xf2406cba
    a36c:	429a73ff 	.word	0x429a73ff
    a370:	f240d806 	.word	0xf240d806
    a374:	429c73ff 	.word	0x429c73ff
    a378:	6cbbd802 	.word	0x6cbbd802
    a37c:	d30242a3 	.word	0xd30242a3
    a380:	0300f04f 	.word	0x0300f04f
    a384:	69bbe174 	.word	0x69bbe174
    a388:	f5b3695b 	.word	0xf5b3695b
    a38c:	d1026f00 	.word	0xd1026f00
    a390:	0300f04f 	.word	0x0300f04f
    a394:	f44fe16c 	.word	0xf44fe16c
    a398:	f2c44500 	.word	0xf2c44500
    a39c:	f04f0503 	.word	0xf04f0503
    a3a0:	79fa0600 	.word	0x79fa0600
    a3a4:	18d369fb 	.word	0x18d369fb
    a3a8:	7243ea4f 	.word	0x7243ea4f
    a3ac:	ea4f6cbb 	.word	0xea4f6cbb
    a3b0:	431a4303 	.word	0x431a4303
    a3b4:	69fb79f9 	.word	0x69fb79f9
    a3b8:	ea4f18cb 	.word	0xea4f18cb
    a3bc:	43133343 	.word	0x43133343
    a3c0:	0604ea43 	.word	0x0604ea43
    a3c4:	695b69bb 	.word	0x695b69bb
    a3c8:	0393ea4f 	.word	0x0393ea4f
    a3cc:	69bbb29c 	.word	0x69bbb29c
    a3d0:	ea4f68db 	.word	0xea4f68db
    a3d4:	fa1f0393 	.word	0xfa1f0393
    a3d8:	e00ef883 	.word	0xe00ef883
    a3dc:	ea4f4623 	.word	0xea4f4623
    a3e0:	18eb0383 	.word	0x18eb0383
    a3e4:	f1024622 	.word	0xf1024622
    a3e8:	ea4f32ff 	.word	0xea4f32ff
    a3ec:	18aa0282 	.word	0x18aa0282
    a3f0:	601a6812 	.word	0x601a6812
    a3f4:	33fff104 	.word	0x33fff104
    a3f8:	4544b29c 	.word	0x4544b29c
    a3fc:	69bbd8ee 	.word	0x69bbd8ee
    a400:	ea4f68db 	.word	0xea4f68db
    a404:	b29c0393 	.word	0xb29c0393
    a408:	689b69bb 	.word	0x689b69bb
    a40c:	0393ea4f 	.word	0x0393ea4f
    a410:	f883fa1f 	.word	0xf883fa1f
    a414:	4623e018 	.word	0x4623e018
    a418:	33fff103 	.word	0x33fff103
    a41c:	0383ea4f 	.word	0x0383ea4f
    a420:	681b18eb 	.word	0x681b18eb
    a424:	d91242b3 	.word	0xd91242b3
    a428:	ea4f4623 	.word	0xea4f4623
    a42c:	18eb0383 	.word	0x18eb0383
    a430:	f1024622 	.word	0xf1024622
    a434:	ea4f32ff 	.word	0xea4f32ff
    a438:	18aa0282 	.word	0x18aa0282
    a43c:	601a6812 	.word	0x601a6812
    a440:	33fff104 	.word	0x33fff104
    a444:	bf00b29c 	.word	0xbf00b29c
    a448:	d8e44544 	.word	0xd8e44544
    a44c:	bf00e000 	.word	0xbf00e000
    a450:	ea4f4623 	.word	0xea4f4623
    a454:	18eb0383 	.word	0x18eb0383
    a458:	69bb601e 	.word	0x69bb601e
    a45c:	f10368db 	.word	0xf10368db
    a460:	69bb0204 	.word	0x69bb0204
    a464:	69bb60da 	.word	0x69bb60da
    a468:	f103691b 	.word	0xf103691b
    a46c:	69bb0204 	.word	0x69bb0204
    a470:	69bb611a 	.word	0x69bb611a
    a474:	f103695b 	.word	0xf103695b
    a478:	69bb0204 	.word	0x69bb0204
    a47c:	e0f5615a 	.word	0xe0f5615a
    a480:	f06f6cba 	.word	0xf06f6cba
    a484:	429a4360 	.word	0x429a4360
    a488:	f04fd902 	.word	0xf04fd902
    a48c:	e0ef0300 	.word	0xe0ef0300
    a490:	695b69bb 	.word	0x695b69bb
    a494:	6f00f5b3 	.word	0x6f00f5b3
    a498:	f04fd102 	.word	0xf04fd102
    a49c:	e0e70300 	.word	0xe0e70300
    a4a0:	4500f44f 	.word	0x4500f44f
    a4a4:	0503f2c4 	.word	0x0503f2c4
    a4a8:	0600f04f 	.word	0x0600f04f
    a4ac:	69fb79fa 	.word	0x69fb79fa
    a4b0:	ea4f18d3 	.word	0xea4f18d3
    a4b4:	6cbb7243 	.word	0x6cbb7243
    a4b8:	0603ea42 	.word	0x0603ea42
    a4bc:	695b69bb 	.word	0x695b69bb
    a4c0:	0393ea4f 	.word	0x0393ea4f
    a4c4:	69bbb29c 	.word	0x69bbb29c
    a4c8:	ea4f691b 	.word	0xea4f691b
    a4cc:	fa1f0393 	.word	0xfa1f0393
    a4d0:	e00ef883 	.word	0xe00ef883
    a4d4:	ea4f4623 	.word	0xea4f4623
    a4d8:	18eb0383 	.word	0x18eb0383
    a4dc:	f1024622 	.word	0xf1024622
    a4e0:	ea4f32ff 	.word	0xea4f32ff
    a4e4:	18aa0282 	.word	0x18aa0282
    a4e8:	601a6812 	.word	0x601a6812
    a4ec:	33fff104 	.word	0x33fff104
    a4f0:	4544b29c 	.word	0x4544b29c
    a4f4:	69bbd8ee 	.word	0x69bbd8ee
    a4f8:	ea4f691b 	.word	0xea4f691b
    a4fc:	b29c0393 	.word	0xb29c0393
    a500:	68db69bb 	.word	0x68db69bb
    a504:	0393ea4f 	.word	0x0393ea4f
    a508:	f883fa1f 	.word	0xf883fa1f
    a50c:	4623e018 	.word	0x4623e018
    a510:	33fff103 	.word	0x33fff103
    a514:	0383ea4f 	.word	0x0383ea4f
    a518:	681b18eb 	.word	0x681b18eb
    a51c:	d91242b3 	.word	0xd91242b3
    a520:	ea4f4623 	.word	0xea4f4623
    a524:	18eb0383 	.word	0x18eb0383
    a528:	f1024622 	.word	0xf1024622
    a52c:	ea4f32ff 	.word	0xea4f32ff
    a530:	18aa0282 	.word	0x18aa0282
    a534:	601a6812 	.word	0x601a6812
    a538:	33fff104 	.word	0x33fff104
    a53c:	bf00b29c 	.word	0xbf00b29c
    a540:	d8e44544 	.word	0xd8e44544
    a544:	bf00e000 	.word	0xbf00e000
    a548:	ea4f4623 	.word	0xea4f4623
    a54c:	18eb0383 	.word	0x18eb0383
    a550:	69bb601e 	.word	0x69bb601e
    a554:	f103691b 	.word	0xf103691b
    a558:	69bb0204 	.word	0x69bb0204
    a55c:	69bb611a 	.word	0x69bb611a
    a560:	f103695b 	.word	0xf103695b
    a564:	69bb0204 	.word	0x69bb0204
    a568:	e07f615a 	.word	0xe07f615a
    a56c:	034cf107 	.word	0x034cf107
    a570:	68bb60bb 	.word	0x68bb60bb
    a574:	0204f103 	.word	0x0204f103
    a578:	f8d360ba 	.word	0xf8d360ba
    a57c:	6cba8000 	.word	0x6cba8000
    a580:	4360f06f 	.word	0x4360f06f
    a584:	d806429a 	.word	0xd806429a
    a588:	4360f06f 	.word	0x4360f06f
    a58c:	d8024598 	.word	0xd8024598
    a590:	45436cbb 	.word	0x45436cbb
    a594:	f04fd902 	.word	0xf04fd902
    a598:	e0690300 	.word	0xe0690300
    a59c:	695b69bb 	.word	0x695b69bb
    a5a0:	6ffff5b3 	.word	0x6ffff5b3
    a5a4:	f04fd902 	.word	0xf04fd902
    a5a8:	e0610300 	.word	0xe0610300
    a5ac:	4400f44f 	.word	0x4400f44f
    a5b0:	0403f2c4 	.word	0x0403f2c4
    a5b4:	0600f04f 	.word	0x0600f04f
    a5b8:	69fb79fa 	.word	0x69fb79fa
    a5bc:	ea4f18d3 	.word	0xea4f18d3
    a5c0:	6cbb7243 	.word	0x6cbb7243
    a5c4:	0603ea42 	.word	0x0603ea42
    a5c8:	695b69bb 	.word	0x695b69bb
    a5cc:	0393ea4f 	.word	0x0393ea4f
    a5d0:	69bbb29d 	.word	0x69bbb29d
    a5d4:	ea4f691b 	.word	0xea4f691b
    a5d8:	fa1f0393 	.word	0xfa1f0393
    a5dc:	e026f983 	.word	0xe026f983
    a5e0:	f1a3462b 	.word	0xf1a3462b
    a5e4:	ea4f0302 	.word	0xea4f0302
    a5e8:	18e30383 	.word	0x18e30383
    a5ec:	42b3681b 	.word	0x42b3681b
    a5f0:	462bd920 	.word	0x462bd920
    a5f4:	0383ea4f 	.word	0x0383ea4f
    a5f8:	462a18e3 	.word	0x462a18e3
    a5fc:	0202f1a2 	.word	0x0202f1a2
    a600:	0282ea4f 	.word	0x0282ea4f
    a604:	681218a2 	.word	0x681218a2
    a608:	462b601a 	.word	0x462b601a
    a60c:	0301f103 	.word	0x0301f103
    a610:	0383ea4f 	.word	0x0383ea4f
    a614:	462a18e3 	.word	0x462a18e3
    a618:	32fff102 	.word	0x32fff102
    a61c:	0282ea4f 	.word	0x0282ea4f
    a620:	681218a2 	.word	0x681218a2
    a624:	f1a5601a 	.word	0xf1a5601a
    a628:	b29d0302 	.word	0xb29d0302
    a62c:	454dbf00 	.word	0x454dbf00
    a630:	e000d8d6 	.word	0xe000d8d6
    a634:	462bbf00 	.word	0x462bbf00
    a638:	0383ea4f 	.word	0x0383ea4f
    a63c:	601e18e3 	.word	0x601e18e3
    a640:	0600f04f 	.word	0x0600f04f
    a644:	69fb79fa 	.word	0x69fb79fa
    a648:	ea4f18d3 	.word	0xea4f18d3
    a64c:	ea437343 	.word	0xea437343
    a650:	462b0608 	.word	0x462b0608
    a654:	0301f103 	.word	0x0301f103
    a658:	0383ea4f 	.word	0x0383ea4f
    a65c:	601e18e3 	.word	0x601e18e3
    a660:	695b69bb 	.word	0x695b69bb
    a664:	0208f103 	.word	0x0208f103
    a668:	615a69bb 	.word	0x615a69bb
    a66c:	0301f04f 	.word	0x0301f04f
    a670:	f1074618 	.word	0xf1074618
    a674:	46bd0724 	.word	0x46bd0724
    a678:	4ff0e8bd 	.word	0x4ff0e8bd
    a67c:	4770b002 	.word	0x4770b002

0000a680 <CAN_SetFilterMode>:
    a680:	b085b480 	.word	0xb085b480
    a684:	4603af00 	.word	0x4603af00
    a688:	f44f71fb 	.word	0xf44f71fb
    a68c:	f2c44340 	.word	0xf2c44340
    a690:	60fb0303 	.word	0x60fb0303
    a694:	68fb79fa 	.word	0x68fb79fa
    a698:	68fb601a 	.word	0x68fb601a
    a69c:	79fb681a 	.word	0x79fb681a
    a6a0:	d1f7429a 	.word	0xd1f7429a
    a6a4:	0301f04f 	.word	0x0301f04f
    a6a8:	f1074618 	.word	0xf1074618
    a6ac:	46bd0714 	.word	0x46bd0714
    a6b0:	4770bc80 	.word	0x4770bc80

0000a6b4 <CAN_InitFilters>:
    a6b4:	b084b580 	.word	0xb084b580
    a6b8:	f44faf00 	.word	0xf44faf00
    a6bc:	f2c44300 	.word	0xf2c44300
    a6c0:	60bb0303 	.word	0x60bb0303
    a6c4:	4340f44f 	.word	0x4340f44f
    a6c8:	0303f2c4 	.word	0x0303f2c4
    a6cc:	f000607b 	.word	0xf000607b
    a6d0:	687bfb69 	.word	0x687bfb69
    a6d4:	0201f04f 	.word	0x0201f04f
    a6d8:	f04f601a 	.word	0xf04f601a
    a6dc:	60fb0300 	.word	0x60fb0300
    a6e0:	68bbe009 	.word	0x68bbe009
    a6e4:	f04f68fa 	.word	0xf04f68fa
    a6e8:	f8430100 	.word	0xf8430100
    a6ec:	68fb1022 	.word	0x68fb1022
    a6f0:	0301f103 	.word	0x0301f103
    a6f4:	68fa60fb 	.word	0x68fa60fb
    a6f8:	13fff240 	.word	0x13fff240
    a6fc:	d9f0429a 	.word	0xd9f0429a
    a700:	f04f687b 	.word	0xf04f687b
    a704:	605a0200 	.word	0x605a0200
    a708:	f04f687b 	.word	0xf04f687b
    a70c:	609a0200 	.word	0x609a0200
    a710:	f04f687b 	.word	0xf04f687b
    a714:	60da0200 	.word	0x60da0200
    a718:	f04f687b 	.word	0xf04f687b
    a71c:	611a0200 	.word	0x611a0200
    a720:	f04f687b 	.word	0xf04f687b
    a724:	615a0200 	.word	0x615a0200
    a728:	0301f04f 	.word	0x0301f04f
    a72c:	f1074618 	.word	0xf1074618
    a730:	46bd0710 	.word	0x46bd0710
    a734:	bf00bd80 	.word	0xbf00bd80

0000a738 <CAN_InitChannel>:
    a738:	b086b580 	.word	0xb086b580
    a73c:	4603af00 	.word	0x4603af00
    a740:	71fb6039 	.word	0x71fb6039
    a744:	0300f04f 	.word	0x0300f04f
    a748:	79fa73fb 	.word	0x79fa73fb
    a74c:	030ff107 	.word	0x030ff107
    a750:	46194610 	.word	0x46194610
    a754:	fabef000 	.word	0xfabef000
    a758:	2b004603 	.word	0x2b004603
    a75c:	f04fd102 	.word	0xf04fd102
    a760:	e0b60300 	.word	0xe0b60300
    a764:	4324f640 	.word	0x4324f640
    a768:	0300f2c1 	.word	0x0300f2c1
    a76c:	2b00781b 	.word	0x2b00781b
    a770:	f640d11c 	.word	0xf640d11c
    a774:	f2c1430c 	.word	0xf2c1430c
    a778:	781b0300 	.word	0x781b0300
    a77c:	d1152b00 	.word	0xd1152b00
    a780:	0300f04f 	.word	0x0300f04f
    a784:	e00360bb 	.word	0xe00360bb
    a788:	f10368bb 	.word	0xf10368bb
    a78c:	60bb0301 	.word	0x60bb0301
    a790:	f64568ba 	.word	0xf64568ba
    a794:	f2c043bf 	.word	0xf2c043bf
    a798:	429a0315 	.word	0x429a0315
    a79c:	f640d9f4 	.word	0xf640d9f4
    a7a0:	f2c14324 	.word	0xf2c14324
    a7a4:	f04f0300 	.word	0xf04f0300
    a7a8:	701a0201 	.word	0x701a0201
    a7ac:	fb2ef001 	.word	0xfb2ef001
    a7b0:	2b004603 	.word	0x2b004603
    a7b4:	f04fd10c 	.word	0xf04fd10c
    a7b8:	f04f0001 	.word	0xf04f0001
    a7bc:	f7fd0101 	.word	0xf7fd0101
    a7c0:	f04ffdf9 	.word	0xf04ffdf9
    a7c4:	f04f0002 	.word	0xf04f0002
    a7c8:	f7fd0103 	.word	0xf7fd0103
    a7cc:	e7fefdf3 	.word	0xe7fefdf3
    a7d0:	461a7bfb 	.word	0x461a7bfb
    a7d4:	ea4f4613 	.word	0xea4f4613
    a7d8:	1a9b1303 	.word	0x1a9b1303
    a7dc:	0383ea4f 	.word	0x0383ea4f
    a7e0:	32d0f640 	.word	0x32d0f640
    a7e4:	0200f2c1 	.word	0x0200f2c1
    a7e8:	617b189b 	.word	0x617b189b
    a7ec:	461a7bfb 	.word	0x461a7bfb
    a7f0:	2354f640 	.word	0x2354f640
    a7f4:	0301f2c0 	.word	0x0301f2c0
    a7f8:	3022f853 	.word	0x3022f853
    a7fc:	697b613b 	.word	0x697b613b
    a800:	697b689a 	.word	0x697b689a
    a804:	697b619a 	.word	0x697b619a
    a808:	697b689a 	.word	0x697b689a
    a80c:	697b61da 	.word	0x697b61da
    a810:	697b689a 	.word	0x697b689a
    a814:	f103881b 	.word	0xf103881b
    a818:	ea4f33ff 	.word	0xea4f33ff
    a81c:	18d21303 	.word	0x18d21303
    a820:	60da697b 	.word	0x60da697b
    a824:	881a697b 	.word	0x881a697b
    a828:	805a697b 	.word	0x805a697b
    a82c:	6b5b697b 	.word	0x6b5b697b
    a830:	d01b2b00 	.word	0xd01b2b00
    a834:	691a697b 	.word	0x691a697b
    a838:	621a697b 	.word	0x621a697b
    a83c:	691a697b 	.word	0x691a697b
    a840:	625a697b 	.word	0x625a697b
    a844:	6919697b 	.word	0x6919697b
    a848:	889b697b 	.word	0x889b697b
    a84c:	32fff103 	.word	0x32fff103
    a850:	ea4f4613 	.word	0xea4f4613
    a854:	189b0343 	.word	0x189b0343
    a858:	03c3ea4f 	.word	0x03c3ea4f
    a85c:	697b18ca 	.word	0x697b18ca
    a860:	697b615a 	.word	0x697b615a
    a864:	697b889a 	.word	0x697b889a
    a868:	e01680da 	.word	0xe01680da
    a86c:	691a697b 	.word	0x691a697b
    a870:	621a697b 	.word	0x621a697b
    a874:	691a697b 	.word	0x691a697b
    a878:	625a697b 	.word	0x625a697b
    a87c:	691a697b 	.word	0x691a697b
    a880:	889b697b 	.word	0x889b697b
    a884:	33fff103 	.word	0x33fff103
    a888:	1303ea4f 	.word	0x1303ea4f
    a88c:	697b18d2 	.word	0x697b18d2
    a890:	697b615a 	.word	0x697b615a
    a894:	697b889a 	.word	0x697b889a
    a898:	693b80da 	.word	0x693b80da
    a89c:	f003681b 	.word	0xf003681b
    a8a0:	2b000301 	.word	0x2b000301
    a8a4:	79fbd105 	.word	0x79fbd105
    a8a8:	f04f4618 	.word	0xf04f4618
    a8ac:	f7ff0101 	.word	0xf7ff0101
    a8b0:	693bf8dd 	.word	0x693bf8dd
    a8b4:	615a683a 	.word	0x615a683a
    a8b8:	695a693b 	.word	0x695a693b
    a8bc:	429a683b 	.word	0x429a683b
    a8c0:	697bd1f7 	.word	0x697bd1f7
    a8c4:	3038f893 	.word	0x3038f893
    a8c8:	693b461a 	.word	0x693b461a
    a8cc:	f04f619a 	.word	0xf04f619a
    a8d0:	46180301 	.word	0x46180301
    a8d4:	0718f107 	.word	0x0718f107
    a8d8:	bd8046bd 	.word	0xbd8046bd

0000a8dc <CAN_ReInitChannel>:
    a8dc:	b086b580 	.word	0xb086b580
    a8e0:	4603af00 	.word	0x4603af00
    a8e4:	f04f71fb 	.word	0xf04f71fb
    a8e8:	73fb0300 	.word	0x73fb0300
    a8ec:	f10779fa 	.word	0xf10779fa
    a8f0:	4610030f 	.word	0x4610030f
    a8f4:	f0004619 	.word	0xf0004619
    a8f8:	4603f9ed 	.word	0x4603f9ed
    a8fc:	d1022b00 	.word	0xd1022b00
    a900:	0300f04f 	.word	0x0300f04f
    a904:	7bfbe045 	.word	0x7bfbe045
    a908:	4613461a 	.word	0x4613461a
    a90c:	1303ea4f 	.word	0x1303ea4f
    a910:	ea4f1a9b 	.word	0xea4f1a9b
    a914:	f6400383 	.word	0xf6400383
    a918:	f2c132d0 	.word	0xf2c132d0
    a91c:	189b0200 	.word	0x189b0200
    a920:	7bfb617b 	.word	0x7bfb617b
    a924:	f640461a 	.word	0xf640461a
    a928:	f2c02354 	.word	0xf2c02354
    a92c:	f8530301 	.word	0xf8530301
    a930:	613b3022 	.word	0x613b3022
    a934:	68da697b 	.word	0x68da697b
    a938:	689b697b 	.word	0x689b697b
    a93c:	d108429a 	.word	0xd108429a
    a940:	695a697b 	.word	0x695a697b
    a944:	691b697b 	.word	0x691b697b
    a948:	d102429a 	.word	0xd102429a
    a94c:	0300f04f 	.word	0x0300f04f
    a950:	697be01f 	.word	0x697be01f
    a954:	697b689a 	.word	0x697b689a
    a958:	697b619a 	.word	0x697b619a
    a95c:	697b689a 	.word	0x697b689a
    a960:	697b61da 	.word	0x697b61da
    a964:	697b881a 	.word	0x697b881a
    a968:	697b805a 	.word	0x697b805a
    a96c:	697b691a 	.word	0x697b691a
    a970:	697b621a 	.word	0x697b621a
    a974:	697b691a 	.word	0x697b691a
    a978:	697b625a 	.word	0x697b625a
    a97c:	697b889a 	.word	0x697b889a
    a980:	697b80da 	.word	0x697b80da
    a984:	3038f893 	.word	0x3038f893
    a988:	693b461a 	.word	0x693b461a
    a98c:	f04f619a 	.word	0xf04f619a
    a990:	46180301 	.word	0x46180301
    a994:	0718f107 	.word	0x0718f107
    a998:	bd8046bd 	.word	0xbd8046bd
    a99c:	b087b480 	.word	0xb087b480
    a9a0:	4603af00 	.word	0x4603af00
    a9a4:	79fa71fb 	.word	0x79fa71fb
    a9a8:	ea4f4613 	.word	0xea4f4613
    a9ac:	1a9b1303 	.word	0x1a9b1303
    a9b0:	0383ea4f 	.word	0x0383ea4f
    a9b4:	32d0f640 	.word	0x32d0f640
    a9b8:	0200f2c1 	.word	0x0200f2c1
    a9bc:	613b189b 	.word	0x613b189b
    a9c0:	885b693b 	.word	0x885b693b
    a9c4:	693bb29a 	.word	0x693bb29a
    a9c8:	429a881b 	.word	0x429a881b
    a9cc:	79fad058 	.word	0x79fad058
    a9d0:	2354f640 	.word	0x2354f640
    a9d4:	0301f2c0 	.word	0x0301f2c0
    a9d8:	3022f853 	.word	0x3022f853
    a9dc:	68fb60fb 	.word	0x68fb60fb
    a9e0:	f003689b 	.word	0xf003689b
    a9e4:	2b000304 	.word	0x2b000304
    a9e8:	693bd04b 	.word	0x693bd04b
    a9ec:	60bb69db 	.word	0x60bb69db
    a9f0:	68da68bb 	.word	0x68da68bb
    a9f4:	63da68fb 	.word	0x63da68fb
    a9f8:	689a68bb 	.word	0x689a68bb
    a9fc:	639a68fb 	.word	0x639a68fb
    aa00:	685b68bb 	.word	0x685b68bb
    aa04:	4260f023 	.word	0x4260f023
    aa08:	635a68fb 	.word	0x635a68fb
    aa0c:	789b68bb 	.word	0x789b68bb
    aa10:	7283ea4f 	.word	0x7283ea4f
    aa14:	78db68bb 	.word	0x78db68bb
    aa18:	4303ea4f 	.word	0x4303ea4f
    aa1c:	461a4313 	.word	0x461a4313
    aa20:	0300f04f 	.word	0x0300f04f
    aa24:	030ff2cc 	.word	0x030ff2cc
    aa28:	68fa4013 	.word	0x68fa4013
    aa2c:	f04f6313 	.word	0xf04f6313
    aa30:	75fb0321 	.word	0x75fb0321
    aa34:	789b68bb 	.word	0x789b68bb
    aa38:	0304f003 	.word	0x0304f003
    aa3c:	d0032b00 	.word	0xd0032b00
    aa40:	f0437dfb 	.word	0xf0437dfb
    aa44:	75fb0302 	.word	0x75fb0302
    aa48:	68fb7dfa 	.word	0x68fb7dfa
    aa4c:	693b605a 	.word	0x693b605a
    aa50:	b29b885b 	.word	0xb29b885b
    aa54:	0301f103 	.word	0x0301f103
    aa58:	693bb29a 	.word	0x693bb29a
    aa5c:	693b805a 	.word	0x693b805a
    aa60:	f10369db 	.word	0xf10369db
    aa64:	693b0210 	.word	0x693b0210
    aa68:	693b61da 	.word	0x693b61da
    aa6c:	693b69da 	.word	0x693b69da
    aa70:	429a68db 	.word	0x429a68db
    aa74:	693bd905 	.word	0x693bd905
    aa78:	693b689a 	.word	0x693b689a
    aa7c:	e00061da 	.word	0xe00061da
    aa80:	f107bf00 	.word	0xf107bf00
    aa84:	46bd071c 	.word	0x46bd071c
    aa88:	4770bc80 	.word	0x4770bc80
    aa8c:	b088b580 	.word	0xb088b580
    aa90:	4603af00 	.word	0x4603af00
    aa94:	79fa71fb 	.word	0x79fa71fb
    aa98:	ea4f4613 	.word	0xea4f4613
    aa9c:	1a9b1303 	.word	0x1a9b1303
    aaa0:	0383ea4f 	.word	0x0383ea4f
    aaa4:	32d0f640 	.word	0x32d0f640
    aaa8:	0200f2c1 	.word	0x0200f2c1
    aaac:	61fb189b 	.word	0x61fb189b
    aab0:	f64079fa 	.word	0xf64079fa
    aab4:	f2c02354 	.word	0xf2c02354
    aab8:	f8530301 	.word	0xf8530301
    aabc:	61bb3022 	.word	0x61bb3022
    aac0:	69fbe07b 	.word	0x69fbe07b
    aac4:	b29b88db 	.word	0xb29b88db
    aac8:	d1042b00 	.word	0xd1042b00
    aacc:	f04f69bb 	.word	0xf04f69bb
    aad0:	605a0204 	.word	0x605a0204
    aad4:	69fbe071 	.word	0x69fbe071
    aad8:	617b6a1b 	.word	0x617b6a1b
    aadc:	6b5b69fb 	.word	0x6b5b69fb
    aae0:	d0032b00 	.word	0xd0032b00
    aae4:	6b5b69fb 	.word	0x6b5b69fb
    aae8:	47986978 	.word	0x47986978
    aaec:	6ada69bb 	.word	0x6ada69bb
    aaf0:	60da697b 	.word	0x60da697b
    aaf4:	6a9a69bb 	.word	0x6a9a69bb
    aaf8:	609a697b 	.word	0x609a697b
    aafc:	6a5b69bb 	.word	0x6a5b69bb
    ab00:	4260f023 	.word	0x4260f023
    ab04:	605a697b 	.word	0x605a697b
    ab08:	f24079fa 	.word	0xf24079fa
    ab0c:	f2c10310 	.word	0xf2c10310
    ab10:	5c9a0300 	.word	0x5c9a0300
    ab14:	705a697b 	.word	0x705a697b
    ab18:	6a1b69bb 	.word	0x6a1b69bb
    ab1c:	4313ea4f 	.word	0x4313ea4f
    ab20:	f003b2db 	.word	0xf003b2db
    ab24:	b2da030f 	.word	0xb2da030f
    ab28:	70da697b 	.word	0x70da697b
    ab2c:	6a1b69bb 	.word	0x6a1b69bb
    ab30:	7393ea4f 	.word	0x7393ea4f
    ab34:	697bb2da 	.word	0x697bb2da
    ab38:	69bb709a 	.word	0x69bb709a
    ab3c:	0204f04f 	.word	0x0204f04f
    ab40:	69fb605a 	.word	0x69fb605a
    ab44:	2b006adb 	.word	0x2b006adb
    ab48:	69fbd00a 	.word	0x69fbd00a
    ab4c:	69786adb 	.word	0x69786adb
    ab50:	46034798 	.word	0x46034798
    ab54:	d0022b00 	.word	0xd0022b00
    ab58:	d02d2b01 	.word	0xd02d2b01
    ab5c:	bf00e000 	.word	0xbf00e000
    ab60:	88db69fb 	.word	0x88db69fb
    ab64:	f103b29b 	.word	0xf103b29b
    ab68:	b29a33ff 	.word	0xb29a33ff
    ab6c:	80da69fb 	.word	0x80da69fb
    ab70:	6b5b69fb 	.word	0x6b5b69fb
    ab74:	d00a2b00 	.word	0xd00a2b00
    ab78:	6a1b69fb 	.word	0x6a1b69fb
    ab7c:	693b613b 	.word	0x693b613b
    ab80:	0318f103 	.word	0x0318f103
    ab84:	69fb613b 	.word	0x69fb613b
    ab88:	621a693a 	.word	0x621a693a
    ab8c:	69fbe009 	.word	0x69fbe009
    ab90:	60fb6a1b 	.word	0x60fb6a1b
    ab94:	f10368fb 	.word	0xf10368fb
    ab98:	60fb0310 	.word	0x60fb0310
    ab9c:	68fa69fb 	.word	0x68fa69fb
    aba0:	69fb621a 	.word	0x69fb621a
    aba4:	69fb6a1a 	.word	0x69fb6a1a
    aba8:	429a695b 	.word	0x429a695b
    abac:	69fbd905 	.word	0x69fbd905
    abb0:	69fb691a 	.word	0x69fb691a
    abb4:	e000621a 	.word	0xe000621a
    abb8:	69bbbf00 	.word	0x69bbbf00
    abbc:	f003689b 	.word	0xf003689b
    abc0:	2b000301 	.word	0x2b000301
    abc4:	af7df47f 	.word	0xaf7df47f
    abc8:	0720f107 	.word	0x0720f107
    abcc:	bd8046bd 	.word	0xbd8046bd
    abd0:	b084b580 	.word	0xb084b580
    abd4:	4603af00 	.word	0x4603af00
    abd8:	79fa71fb 	.word	0x79fa71fb
    abdc:	ea4f4613 	.word	0xea4f4613
    abe0:	1a9b1303 	.word	0x1a9b1303
    abe4:	0383ea4f 	.word	0x0383ea4f
    abe8:	32d0f640 	.word	0x32d0f640
    abec:	0200f2c1 	.word	0x0200f2c1
    abf0:	60fb189b 	.word	0x60fb189b
    abf4:	6b1b68fb 	.word	0x6b1b68fb
    abf8:	d0032b00 	.word	0xd0032b00
    abfc:	6b1b68fb 	.word	0x6b1b68fb
    ac00:	e0104798 	.word	0xe0104798
    ac04:	f24079fa 	.word	0xf24079fa
    ac08:	f2c10310 	.word	0xf2c10310
    ac0c:	5c9b0300 	.word	0x5c9b0300
    ac10:	7afb72fb 	.word	0x7afb72fb
    ac14:	f7ff4618 	.word	0xf7ff4618
    ac18:	7afbfe61 	.word	0x7afbfe61
    ac1c:	f04f4618 	.word	0xf04f4618
    ac20:	f7fe0100 	.word	0xf7fe0100
    ac24:	f107ff23 	.word	0xf107ff23
    ac28:	46bd0710 	.word	0x46bd0710
    ac2c:	bf00bd80 	.word	0xbf00bd80

0000ac30 <CAN_IRQHandler>:
    ac30:	b084b580 	.word	0xb084b580
    ac34:	f04faf00 	.word	0xf04faf00
    ac38:	73fb0300 	.word	0x73fb0300
    ac3c:	7bfae037 	.word	0x7bfae037
    ac40:	2354f640 	.word	0x2354f640
    ac44:	0301f2c0 	.word	0x0301f2c0
    ac48:	3022f853 	.word	0x3022f853
    ac4c:	68bb60bb 	.word	0x68bb60bb
    ac50:	f00368db 	.word	0xf00368db
    ac54:	607b038b 	.word	0x607b038b
    ac58:	f003687b 	.word	0xf003687b
    ac5c:	2b000302 	.word	0x2b000302
    ac60:	7bfbd003 	.word	0x7bfbd003
    ac64:	f7ff4618 	.word	0xf7ff4618
    ac68:	687bfe99 	.word	0x687bfe99
    ac6c:	0301f003 	.word	0x0301f003
    ac70:	d0032b00 	.word	0xd0032b00
    ac74:	46187bfb 	.word	0x46187bfb
    ac78:	ff08f7ff 	.word	0xff08f7ff
    ac7c:	f003687b 	.word	0xf003687b
    ac80:	2b000380 	.word	0x2b000380
    ac84:	7bfbd003 	.word	0x7bfbd003
    ac88:	f7ff4618 	.word	0xf7ff4618
    ac8c:	687bffa1 	.word	0x687bffa1
    ac90:	0308f003 	.word	0x0308f003
    ac94:	d0032b00 	.word	0xd0032b00
    ac98:	f04f68bb 	.word	0xf04f68bb
    ac9c:	605a0208 	.word	0x605a0208
    aca0:	2b00687b 	.word	0x2b00687b
    aca4:	7bfbd1d3 	.word	0x7bfbd1d3
    aca8:	0301f103 	.word	0x0301f103
    acac:	7bfb73fb 	.word	0x7bfb73fb
    acb0:	d0c42b00 	.word	0xd0c42b00
    acb4:	0019f04f 	.word	0x0019f04f
    acb8:	fcc0f7fe 	.word	0xfcc0f7fe
    acbc:	0710f107 	.word	0x0710f107
    acc0:	bd8046bd 	.word	0xbd8046bd
    acc4:	af00b580 	.word	0xaf00b580
    acc8:	0022f04f 	.word	0x0022f04f
    accc:	fcb6f7fe 	.word	0xfcb6f7fe
    acd0:	bf00bd80 	.word	0xbf00bd80
    acd4:	b083b480 	.word	0xb083b480
    acd8:	4603af00 	.word	0x4603af00
    acdc:	71fb6039 	.word	0x71fb6039
    ace0:	2b00683b 	.word	0x2b00683b
    ace4:	f04fd102 	.word	0xf04fd102
    ace8:	e01a0300 	.word	0xe01a0300
    acec:	2b0179fb 	.word	0x2b0179fb
    acf0:	f04fd902 	.word	0xf04fd902
    acf4:	e0140300 	.word	0xe0140300
    acf8:	f24079fa 	.word	0xf24079fa
    acfc:	f2c1030c 	.word	0xf2c1030c
    ad00:	5c9b0300 	.word	0x5c9b0300
    ad04:	d0022b00 	.word	0xd0022b00
    ad08:	0300f04f 	.word	0x0300f04f
    ad0c:	79fae009 	.word	0x79fae009
    ad10:	030cf240 	.word	0x030cf240
    ad14:	0300f2c1 	.word	0x0300f2c1
    ad18:	683b5c9a 	.word	0x683b5c9a
    ad1c:	f04f701a 	.word	0xf04f701a
    ad20:	46180301 	.word	0x46180301
    ad24:	070cf107 	.word	0x070cf107
    ad28:	bc8046bd 	.word	0xbc8046bd
    ad2c:	bf004770 	.word	0xbf004770
    ad30:	b085b480 	.word	0xb085b480
    ad34:	4603af00 	.word	0x4603af00
    ad38:	71fb6039 	.word	0x71fb6039
    ad3c:	2b00683b 	.word	0x2b00683b
    ad40:	f04fd102 	.word	0xf04fd102
    ad44:	e0270300 	.word	0xe0270300
    ad48:	2b0079fb 	.word	0x2b0079fb
    ad4c:	f04fd002 	.word	0xf04fd002
    ad50:	e0210300 	.word	0xe0210300
    ad54:	0300f04f 	.word	0x0300f04f
    ad58:	e01873fb 	.word	0xe01873fb
    ad5c:	f2407bfa 	.word	0xf2407bfa
    ad60:	f2c1030c 	.word	0xf2c1030c
    ad64:	5c9b0300 	.word	0x5c9b0300
    ad68:	429a79fa 	.word	0x429a79fa
    ad6c:	7bfbd004 	.word	0x7bfbd004
    ad70:	0301f103 	.word	0x0301f103
    ad74:	e00a73fb 	.word	0xe00a73fb
    ad78:	f2407bfa 	.word	0xf2407bfa
    ad7c:	f2c10310 	.word	0xf2c10310
    ad80:	5c9a0300 	.word	0x5c9a0300
    ad84:	701a683b 	.word	0x701a683b
    ad88:	0301f04f 	.word	0x0301f04f
    ad8c:	7bfbe004 	.word	0x7bfbe004
    ad90:	d9e32b01 	.word	0xd9e32b01
    ad94:	0300f04f 	.word	0x0300f04f
    ad98:	f1074618 	.word	0xf1074618
    ad9c:	46bd0714 	.word	0x46bd0714
    ada0:	4770bc80 	.word	0x4770bc80
    ada4:	af00b480 	.word	0xaf00b480
    ada8:	430cf640 	.word	0x430cf640
    adac:	0300f2c1 	.word	0x0300f2c1
    adb0:	0201f04f 	.word	0x0201f04f
    adb4:	f04f701a 	.word	0xf04f701a
    adb8:	46180300 	.word	0x46180300
    adbc:	bc8046bd 	.word	0xbc8046bd
    adc0:	bf004770 	.word	0xbf004770
    adc4:	b085b480 	.word	0xb085b480
    adc8:	4602af00 	.word	0x4602af00
    adcc:	80fa460b 	.word	0x80fa460b
    add0:	88fb717b 	.word	0x88fb717b
    add4:	4320f403 	.word	0x4320f403
    add8:	d0032b00 	.word	0xd0032b00
    addc:	0301f04f 	.word	0x0301f04f
    ade0:	e00273fb 	.word	0xe00273fb
    ade4:	0300f04f 	.word	0x0300f04f
    ade8:	88fb73fb 	.word	0x88fb73fb
    adec:	0343ea4f 	.word	0x0343ea4f
    adf0:	7bfa80fb 	.word	0x7bfa80fb
    adf4:	4053797b 	.word	0x4053797b
    adf8:	461ab2db 	.word	0x461ab2db
    adfc:	431388fb 	.word	0x431388fb
    ae00:	88fb80fb 	.word	0x88fb80fb
    ae04:	f1074618 	.word	0xf1074618
    ae08:	46bd0714 	.word	0x46bd0714
    ae0c:	4770bc80 	.word	0x4770bc80
    ae10:	b084b580 	.word	0xb084b580
    ae14:	4603af00 	.word	0x4603af00
    ae18:	f24980fb 	.word	0xf24980fb
    ae1c:	817b33e5 	.word	0x817b33e5
    ae20:	0300f04f 	.word	0x0300f04f
    ae24:	e01360fb 	.word	0xe01360fb
    ae28:	b2db88fb 	.word	0xb2db88fb
    ae2c:	0301f003 	.word	0x0301f003
    ae30:	897ab2db 	.word	0x897ab2db
    ae34:	46194610 	.word	0x46194610
    ae38:	ffc4f7ff 	.word	0xffc4f7ff
    ae3c:	817b4603 	.word	0x817b4603
    ae40:	ea4f88fb 	.word	0xea4f88fb
    ae44:	80fb0353 	.word	0x80fb0353
    ae48:	f10368fb 	.word	0xf10368fb
    ae4c:	60fb0301 	.word	0x60fb0301
    ae50:	2b0f68fb 	.word	0x2b0f68fb
    ae54:	897bd9e8 	.word	0x897bd9e8
    ae58:	f1074618 	.word	0xf1074618
    ae5c:	46bd0710 	.word	0x46bd0710
    ae60:	bf00bd80 	.word	0xbf00bd80

0000ae64 <Ahxoh1ai>:
    ae64:	b084b580 	.word	0xb084b580
    ae68:	4603af00 	.word	0x4603af00
    ae6c:	71fb6039 	.word	0x71fb6039
    ae70:	0300f04f 	.word	0x0300f04f
    ae74:	f00172fb 	.word	0xf00172fb
    ae78:	f640f953 	.word	0xf640f953
    ae7c:	f2c14310 	.word	0xf2c14310
    ae80:	f04f0300 	.word	0xf04f0300
    ae84:	601a0200 	.word	0x601a0200
    ae88:	f640e00b 	.word	0xf640e00b
    ae8c:	f2c14310 	.word	0xf2c14310
    ae90:	681b0300 	.word	0x681b0300
    ae94:	0201f103 	.word	0x0201f103
    ae98:	4310f640 	.word	0x4310f640
    ae9c:	0300f2c1 	.word	0x0300f2c1
    aea0:	f640601a 	.word	0xf640601a
    aea4:	f2c14310 	.word	0xf2c14310
    aea8:	681a0300 	.word	0x681a0300
    aeac:	33e7f240 	.word	0x33e7f240
    aeb0:	d9ea429a 	.word	0xd9ea429a
    aeb4:	03e6f04f 	.word	0x03e6f04f
    aeb8:	7abb72bb 	.word	0x7abb72bb
    aebc:	f0014618 	.word	0xf0014618
    aec0:	4603f961 	.word	0x4603f961
    aec4:	d0032b00 	.word	0xd0032b00
    aec8:	0301f04f 	.word	0x0301f04f
    aecc:	e0a972fb 	.word	0xe0a972fb
    aed0:	4310f640 	.word	0x4310f640
    aed4:	0300f2c1 	.word	0x0300f2c1
    aed8:	0200f04f 	.word	0x0200f04f
    aedc:	e00b601a 	.word	0xe00b601a
    aee0:	4310f640 	.word	0x4310f640
    aee4:	0300f2c1 	.word	0x0300f2c1
    aee8:	f103681b 	.word	0xf103681b
    aeec:	f6400201 	.word	0xf6400201
    aef0:	f2c14310 	.word	0xf2c14310
    aef4:	601a0300 	.word	0x601a0300
    aef8:	4310f640 	.word	0x4310f640
    aefc:	0300f2c1 	.word	0x0300f2c1
    af00:	f240681a 	.word	0xf240681a
    af04:	429a33e7 	.word	0x429a33e7
    af08:	f04fd9ea 	.word	0xf04fd9ea
    af0c:	72bb0301 	.word	0x72bb0301
    af10:	46187abb 	.word	0x46187abb
    af14:	f936f001 	.word	0xf936f001
    af18:	2b004603 	.word	0x2b004603
    af1c:	f04fd003 	.word	0xf04fd003
    af20:	72fb0301 	.word	0x72fb0301
    af24:	f640e07e 	.word	0xf640e07e
    af28:	f2c14310 	.word	0xf2c14310
    af2c:	f04f0300 	.word	0xf04f0300
    af30:	601a0200 	.word	0x601a0200
    af34:	f640e00b 	.word	0xf640e00b
    af38:	f2c14310 	.word	0xf2c14310
    af3c:	681b0300 	.word	0x681b0300
    af40:	0201f103 	.word	0x0201f103
    af44:	4310f640 	.word	0x4310f640
    af48:	0300f2c1 	.word	0x0300f2c1
    af4c:	f640601a 	.word	0xf640601a
    af50:	f2c14310 	.word	0xf2c14310
    af54:	681a0300 	.word	0x681a0300
    af58:	33e7f240 	.word	0x33e7f240
    af5c:	d9ea429a 	.word	0xd9ea429a
    af60:	f00379fb 	.word	0xf00379fb
    af64:	72bb0303 	.word	0x72bb0303
    af68:	46187abb 	.word	0x46187abb
    af6c:	f90af001 	.word	0xf90af001
    af70:	2b004603 	.word	0x2b004603
    af74:	f04fd003 	.word	0xf04fd003
    af78:	72fb0301 	.word	0x72fb0301
    af7c:	f640e052 	.word	0xf640e052
    af80:	f2c14310 	.word	0xf2c14310
    af84:	f04f0300 	.word	0xf04f0300
    af88:	601a0200 	.word	0x601a0200
    af8c:	f640e00b 	.word	0xf640e00b
    af90:	f2c14310 	.word	0xf2c14310
    af94:	681b0300 	.word	0x681b0300
    af98:	0201f103 	.word	0x0201f103
    af9c:	4310f640 	.word	0x4310f640
    afa0:	0300f2c1 	.word	0x0300f2c1
    afa4:	f640601a 	.word	0xf640601a
    afa8:	f2c14310 	.word	0xf2c14310
    afac:	681a0300 	.word	0x681a0300
    afb0:	33e7f240 	.word	0x33e7f240
    afb4:	d9ea429a 	.word	0xd9ea429a
    afb8:	0300f04f 	.word	0x0300f04f
    afbc:	e02e60fb 	.word	0xe02e60fb
    afc0:	68fb683a 	.word	0x68fb683a
    afc4:	781b18d3 	.word	0x781b18d3
    afc8:	f0014618 	.word	0xf0014618
    afcc:	4603f8db 	.word	0x4603f8db
    afd0:	d0032b00 	.word	0xd0032b00
    afd4:	0301f04f 	.word	0x0301f04f
    afd8:	e02372fb 	.word	0xe02372fb
    afdc:	4310f640 	.word	0x4310f640
    afe0:	0300f2c1 	.word	0x0300f2c1
    afe4:	0200f04f 	.word	0x0200f04f
    afe8:	e00b601a 	.word	0xe00b601a
    afec:	4310f640 	.word	0x4310f640
    aff0:	0300f2c1 	.word	0x0300f2c1
    aff4:	f103681b 	.word	0xf103681b
    aff8:	f6400201 	.word	0xf6400201
    affc:	f2c14310 	.word	0xf2c14310
    b000:	601a0300 	.word	0x601a0300
    b004:	4310f640 	.word	0x4310f640
    b008:	0300f2c1 	.word	0x0300f2c1
    b00c:	f240681a 	.word	0xf240681a
    b010:	429a33e7 	.word	0x429a33e7
    b014:	68fbd9ea 	.word	0x68fbd9ea
    b018:	0301f103 	.word	0x0301f103
    b01c:	68fb60fb 	.word	0x68fb60fb
    b020:	d9cd2b0f 	.word	0xd9cd2b0f
    b024:	4310f640 	.word	0x4310f640
    b028:	0300f2c1 	.word	0x0300f2c1
    b02c:	0200f04f 	.word	0x0200f04f
    b030:	e00b601a 	.word	0xe00b601a
    b034:	4310f640 	.word	0x4310f640
    b038:	0300f2c1 	.word	0x0300f2c1
    b03c:	f103681b 	.word	0xf103681b
    b040:	f6400201 	.word	0xf6400201
    b044:	f2c14310 	.word	0xf2c14310
    b048:	601a0300 	.word	0x601a0300
    b04c:	4310f640 	.word	0x4310f640
    b050:	0300f2c1 	.word	0x0300f2c1
    b054:	f240681a 	.word	0xf240681a
    b058:	429a33e7 	.word	0x429a33e7
    b05c:	f001d9ea 	.word	0xf001d9ea
    b060:	7afbf96b 	.word	0x7afbf96b
    b064:	f1074618 	.word	0xf1074618
    b068:	46bd0710 	.word	0x46bd0710
    b06c:	bf00bd80 	.word	0xbf00bd80

0000b070 <fohSh5th>:
    b070:	b088b580 	.word	0xb088b580
    b074:	6078af00 	.word	0x6078af00
    b078:	70fb460b 	.word	0x70fb460b
    b07c:	0300f04f 	.word	0x0300f04f
    b080:	f10776fb 	.word	0xf10776fb
    b084:	f04f0308 	.word	0xf04f0308
    b088:	601a0200 	.word	0x601a0200
    b08c:	0304f103 	.word	0x0304f103
    b090:	0200f04f 	.word	0x0200f04f
    b094:	f103601a 	.word	0xf103601a
    b098:	f04f0304 	.word	0xf04f0304
    b09c:	601a0200 	.word	0x601a0200
    b0a0:	0304f103 	.word	0x0304f103
    b0a4:	0200f04f 	.word	0x0200f04f
    b0a8:	f103601a 	.word	0xf103601a
    b0ac:	78fb0304 	.word	0x78fb0304
    b0b0:	d8022b0f 	.word	0xd8022b0f
    b0b4:	0301f04f 	.word	0x0301f04f
    b0b8:	f001e138 	.word	0xf001e138
    b0bc:	f640f831 	.word	0xf640f831
    b0c0:	f2c14310 	.word	0xf2c14310
    b0c4:	f04f0300 	.word	0xf04f0300
    b0c8:	601a0200 	.word	0x601a0200
    b0cc:	f640e00b 	.word	0xf640e00b
    b0d0:	f2c14310 	.word	0xf2c14310
    b0d4:	681b0300 	.word	0x681b0300
    b0d8:	0201f103 	.word	0x0201f103
    b0dc:	4310f640 	.word	0x4310f640
    b0e0:	0300f2c1 	.word	0x0300f2c1
    b0e4:	f640601a 	.word	0xf640601a
    b0e8:	f2c14310 	.word	0xf2c14310
    b0ec:	681a0300 	.word	0x681a0300
    b0f0:	33e7f240 	.word	0x33e7f240
    b0f4:	d9ea429a 	.word	0xd9ea429a
    b0f8:	03e6f04f 	.word	0x03e6f04f
    b0fc:	7ebb76bb 	.word	0x7ebb76bb
    b100:	f0014618 	.word	0xf0014618
    b104:	4603f83f 	.word	0x4603f83f
    b108:	d0032b00 	.word	0xd0032b00
    b10c:	0301f04f 	.word	0x0301f04f
    b110:	e0eb76fb 	.word	0xe0eb76fb
    b114:	4310f640 	.word	0x4310f640
    b118:	0300f2c1 	.word	0x0300f2c1
    b11c:	0200f04f 	.word	0x0200f04f
    b120:	e00b601a 	.word	0xe00b601a
    b124:	4310f640 	.word	0x4310f640
    b128:	0300f2c1 	.word	0x0300f2c1
    b12c:	f103681b 	.word	0xf103681b
    b130:	f6400201 	.word	0xf6400201
    b134:	f2c14310 	.word	0xf2c14310
    b138:	601a0300 	.word	0x601a0300
    b13c:	4310f640 	.word	0x4310f640
    b140:	0300f2c1 	.word	0x0300f2c1
    b144:	f240681a 	.word	0xf240681a
    b148:	429a33e7 	.word	0x429a33e7
    b14c:	f04fd9ea 	.word	0xf04fd9ea
    b150:	76bb0302 	.word	0x76bb0302
    b154:	46187ebb 	.word	0x46187ebb
    b158:	f814f001 	.word	0xf814f001
    b15c:	2b004603 	.word	0x2b004603
    b160:	f04fd003 	.word	0xf04fd003
    b164:	76fb0301 	.word	0x76fb0301
    b168:	f640e0c0 	.word	0xf640e0c0
    b16c:	f2c14310 	.word	0xf2c14310
    b170:	f04f0300 	.word	0xf04f0300
    b174:	601a0200 	.word	0x601a0200
    b178:	f640e00b 	.word	0xf640e00b
    b17c:	f2c14310 	.word	0xf2c14310
    b180:	681b0300 	.word	0x681b0300
    b184:	0201f103 	.word	0x0201f103
    b188:	4310f640 	.word	0x4310f640
    b18c:	0300f2c1 	.word	0x0300f2c1
    b190:	f640601a 	.word	0xf640601a
    b194:	f2c14310 	.word	0xf2c14310
    b198:	681a0300 	.word	0x681a0300
    b19c:	33e7f240 	.word	0x33e7f240
    b1a0:	d9ea429a 	.word	0xd9ea429a
    b1a4:	ffbcf000 	.word	0xffbcf000
    b1a8:	4310f640 	.word	0x4310f640
    b1ac:	0300f2c1 	.word	0x0300f2c1
    b1b0:	0200f04f 	.word	0x0200f04f
    b1b4:	e00b601a 	.word	0xe00b601a
    b1b8:	4310f640 	.word	0x4310f640
    b1bc:	0300f2c1 	.word	0x0300f2c1
    b1c0:	f103681b 	.word	0xf103681b
    b1c4:	f6400201 	.word	0xf6400201
    b1c8:	f2c14310 	.word	0xf2c14310
    b1cc:	601a0300 	.word	0x601a0300
    b1d0:	4310f640 	.word	0x4310f640
    b1d4:	0300f2c1 	.word	0x0300f2c1
    b1d8:	f240681a 	.word	0xf240681a
    b1dc:	429a33e7 	.word	0x429a33e7
    b1e0:	f04fd9ea 	.word	0xf04fd9ea
    b1e4:	76bb03e7 	.word	0x76bb03e7
    b1e8:	46187ebb 	.word	0x46187ebb
    b1ec:	ffcaf000 	.word	0xffcaf000
    b1f0:	2b004603 	.word	0x2b004603
    b1f4:	f04fd003 	.word	0xf04fd003
    b1f8:	76fb0301 	.word	0x76fb0301
    b1fc:	f640e076 	.word	0xf640e076
    b200:	f2c14310 	.word	0xf2c14310
    b204:	f04f0300 	.word	0xf04f0300
    b208:	601a0200 	.word	0x601a0200
    b20c:	f640e00b 	.word	0xf640e00b
    b210:	f2c14310 	.word	0xf2c14310
    b214:	681b0300 	.word	0x681b0300
    b218:	0201f103 	.word	0x0201f103
    b21c:	4310f640 	.word	0x4310f640
    b220:	0300f2c1 	.word	0x0300f2c1
    b224:	f640601a 	.word	0xf640601a
    b228:	f2c14310 	.word	0xf2c14310
    b22c:	681a0300 	.word	0x681a0300
    b230:	33e7f240 	.word	0x33e7f240
    b234:	d9ea429a 	.word	0xd9ea429a
    b238:	0300f04f 	.word	0x0300f04f
    b23c:	e03961fb 	.word	0xe03961fb
    b240:	0208f107 	.word	0x0208f107
    b244:	18d369fb 	.word	0x18d369fb
    b248:	0000f04f 	.word	0x0000f04f
    b24c:	f0014619 	.word	0xf0014619
    b250:	4603f845 	.word	0x4603f845
    b254:	d0032b00 	.word	0xd0032b00
    b258:	0301f04f 	.word	0x0301f04f
    b25c:	e04576fb 	.word	0xe04576fb
    b260:	69fb687a 	.word	0x69fb687a
    b264:	f10718d3 	.word	0xf10718d3
    b268:	69fa0108 	.word	0x69fa0108
    b26c:	7812188a 	.word	0x7812188a
    b270:	f640701a 	.word	0xf640701a
    b274:	f2c14310 	.word	0xf2c14310
    b278:	f04f0300 	.word	0xf04f0300
    b27c:	601a0200 	.word	0x601a0200
    b280:	f640e00b 	.word	0xf640e00b
    b284:	f2c14310 	.word	0xf2c14310
    b288:	681b0300 	.word	0x681b0300
    b28c:	0201f103 	.word	0x0201f103
    b290:	4310f640 	.word	0x4310f640
    b294:	0300f2c1 	.word	0x0300f2c1
    b298:	f640601a 	.word	0xf640601a
    b29c:	f2c14310 	.word	0xf2c14310
    b2a0:	681a0300 	.word	0x681a0300
    b2a4:	33e7f240 	.word	0x33e7f240
    b2a8:	d9ea429a 	.word	0xd9ea429a
    b2ac:	f10369fb 	.word	0xf10369fb
    b2b0:	61fb0301 	.word	0x61fb0301
    b2b4:	2b0e69fb 	.word	0x2b0e69fb
    b2b8:	f107d9c2 	.word	0xf107d9c2
    b2bc:	69fb0208 	.word	0x69fb0208
    b2c0:	f04f18d3 	.word	0xf04f18d3
    b2c4:	46190001 	.word	0x46190001
    b2c8:	f808f001 	.word	0xf808f001
    b2cc:	2b004603 	.word	0x2b004603
    b2d0:	f04fd003 	.word	0xf04fd003
    b2d4:	76fb0301 	.word	0x76fb0301
    b2d8:	687ae008 	.word	0x687ae008
    b2dc:	18d369fb 	.word	0x18d369fb
    b2e0:	0108f107 	.word	0x0108f107
    b2e4:	188a69fa 	.word	0x188a69fa
    b2e8:	701a7812 	.word	0x701a7812
    b2ec:	4310f640 	.word	0x4310f640
    b2f0:	0300f2c1 	.word	0x0300f2c1
    b2f4:	0200f04f 	.word	0x0200f04f
    b2f8:	e00b601a 	.word	0xe00b601a
    b2fc:	4310f640 	.word	0x4310f640
    b300:	0300f2c1 	.word	0x0300f2c1
    b304:	f103681b 	.word	0xf103681b
    b308:	f6400201 	.word	0xf6400201
    b30c:	f2c14310 	.word	0xf2c14310
    b310:	601a0300 	.word	0x601a0300
    b314:	4310f640 	.word	0x4310f640
    b318:	0300f2c1 	.word	0x0300f2c1
    b31c:	f240681a 	.word	0xf240681a
    b320:	429a33e7 	.word	0x429a33e7
    b324:	f001d9ea 	.word	0xf001d9ea
    b328:	7efbf807 	.word	0x7efbf807
    b32c:	f1074618 	.word	0xf1074618
    b330:	46bd0720 	.word	0x46bd0720
    b334:	bf00bd80 	.word	0xbf00bd80

0000b338 <ahRaTahk6k>:
    b338:	b094b580 	.word	0xb094b580
    b33c:	60f8af00 	.word	0x60f8af00
    b340:	607a60b9 	.word	0x607a60b9
    b344:	0301f04f 	.word	0x0301f04f
    b348:	304df887 	.word	0x304df887
    b34c:	64bb68fb 	.word	0x64bb68fb
    b350:	647b68bb 	.word	0x647b68bb
    b354:	0330f107 	.word	0x0330f107
    b358:	68794618 	.word	0x68794618
    b35c:	0210f04f 	.word	0x0210f04f
    b360:	fc0af001 	.word	0xfc0af001
    b364:	0300f04f 	.word	0x0300f04f
    b368:	304ff887 	.word	0x304ff887
    b36c:	f897e01d 	.word	0xf897e01d
    b370:	f897104f 	.word	0xf897104f
    b374:	6cbb204f 	.word	0x6cbb204f
    b378:	2022f853 	.word	0x2022f853
    b37c:	304ff897 	.word	0x304ff897
    b380:	0383ea4f 	.word	0x0383ea4f
    b384:	0050f107 	.word	0x0050f107
    b388:	f85318c3 	.word	0xf85318c3
    b38c:	405a3c20 	.word	0x405a3c20
    b390:	0381ea4f 	.word	0x0381ea4f
    b394:	0150f107 	.word	0x0150f107
    b398:	f84318cb 	.word	0xf84318cb
    b39c:	f8972c30 	.word	0xf8972c30
    b3a0:	f103304f 	.word	0xf103304f
    b3a4:	f8870301 	.word	0xf8870301
    b3a8:	f897304f 	.word	0xf897304f
    b3ac:	2b03304f 	.word	0x2b03304f
    b3b0:	f04fd9dd 	.word	0xf04fd9dd
    b3b4:	f8870300 	.word	0xf8870300
    b3b8:	e375304f 	.word	0xe375304f
    b3bc:	3020f897 	.word	0x3020f897
    b3c0:	f640461a 	.word	0xf640461a
    b3c4:	f2c03370 	.word	0xf2c03370
    b3c8:	5c9a0301 	.word	0x5c9a0301
    b3cc:	3025f897 	.word	0x3025f897
    b3d0:	f6404619 	.word	0xf6404619
    b3d4:	f2c04370 	.word	0xf2c04370
    b3d8:	5c5b0301 	.word	0x5c5b0301
    b3dc:	b2da4053 	.word	0xb2da4053
    b3e0:	302af897 	.word	0x302af897
    b3e4:	f6404619 	.word	0xf6404619
    b3e8:	f2c02370 	.word	0xf2c02370
    b3ec:	5c5b0301 	.word	0x5c5b0301
    b3f0:	b2da4053 	.word	0xb2da4053
    b3f4:	302ff897 	.word	0x302ff897
    b3f8:	f6404619 	.word	0xf6404619
    b3fc:	f2c02370 	.word	0xf2c02370
    b400:	5c5b0301 	.word	0x5c5b0301
    b404:	b2db4053 	.word	0xb2db4053
    b408:	f897743b 	.word	0xf897743b
    b40c:	461a3020 	.word	0x461a3020
    b410:	2370f640 	.word	0x2370f640
    b414:	0301f2c0 	.word	0x0301f2c0
    b418:	f8975c9a 	.word	0xf8975c9a
    b41c:	46193025 	.word	0x46193025
    b420:	3370f640 	.word	0x3370f640
    b424:	0301f2c0 	.word	0x0301f2c0
    b428:	40535c5b 	.word	0x40535c5b
    b42c:	f897b2da 	.word	0xf897b2da
    b430:	4619302a 	.word	0x4619302a
    b434:	4370f640 	.word	0x4370f640
    b438:	0301f2c0 	.word	0x0301f2c0
    b43c:	40535c5b 	.word	0x40535c5b
    b440:	f897b2da 	.word	0xf897b2da
    b444:	4619302f 	.word	0x4619302f
    b448:	2370f640 	.word	0x2370f640
    b44c:	0301f2c0 	.word	0x0301f2c0
    b450:	40535c5b 	.word	0x40535c5b
    b454:	747bb2db 	.word	0x747bb2db
    b458:	3020f897 	.word	0x3020f897
    b45c:	f640461a 	.word	0xf640461a
    b460:	f2c02370 	.word	0xf2c02370
    b464:	5c9a0301 	.word	0x5c9a0301
    b468:	3025f897 	.word	0x3025f897
    b46c:	f6404619 	.word	0xf6404619
    b470:	f2c02370 	.word	0xf2c02370
    b474:	5c5b0301 	.word	0x5c5b0301
    b478:	b2da4053 	.word	0xb2da4053
    b47c:	302af897 	.word	0x302af897
    b480:	f6404619 	.word	0xf6404619
    b484:	f2c03370 	.word	0xf2c03370
    b488:	5c5b0301 	.word	0x5c5b0301
    b48c:	b2da4053 	.word	0xb2da4053
    b490:	302ff897 	.word	0x302ff897
    b494:	f6404619 	.word	0xf6404619
    b498:	f2c04370 	.word	0xf2c04370
    b49c:	5c5b0301 	.word	0x5c5b0301
    b4a0:	b2db4053 	.word	0xb2db4053
    b4a4:	f89774bb 	.word	0xf89774bb
    b4a8:	461a3020 	.word	0x461a3020
    b4ac:	4370f640 	.word	0x4370f640
    b4b0:	0301f2c0 	.word	0x0301f2c0
    b4b4:	f8975c9a 	.word	0xf8975c9a
    b4b8:	46193025 	.word	0x46193025
    b4bc:	2370f640 	.word	0x2370f640
    b4c0:	0301f2c0 	.word	0x0301f2c0
    b4c4:	40535c5b 	.word	0x40535c5b
    b4c8:	f897b2da 	.word	0xf897b2da
    b4cc:	4619302a 	.word	0x4619302a
    b4d0:	2370f640 	.word	0x2370f640
    b4d4:	0301f2c0 	.word	0x0301f2c0
    b4d8:	40535c5b 	.word	0x40535c5b
    b4dc:	f897b2da 	.word	0xf897b2da
    b4e0:	4619302f 	.word	0x4619302f
    b4e4:	3370f640 	.word	0x3370f640
    b4e8:	0301f2c0 	.word	0x0301f2c0
    b4ec:	40535c5b 	.word	0x40535c5b
    b4f0:	74fbb2db 	.word	0x74fbb2db
    b4f4:	3024f897 	.word	0x3024f897
    b4f8:	f640461a 	.word	0xf640461a
    b4fc:	f2c03370 	.word	0xf2c03370
    b500:	5c9a0301 	.word	0x5c9a0301
    b504:	3029f897 	.word	0x3029f897
    b508:	f6404619 	.word	0xf6404619
    b50c:	f2c04370 	.word	0xf2c04370
    b510:	5c5b0301 	.word	0x5c5b0301
    b514:	b2da4053 	.word	0xb2da4053
    b518:	302ef897 	.word	0x302ef897
    b51c:	f6404619 	.word	0xf6404619
    b520:	f2c02370 	.word	0xf2c02370
    b524:	5c5b0301 	.word	0x5c5b0301
    b528:	b2da4053 	.word	0xb2da4053
    b52c:	3023f897 	.word	0x3023f897
    b530:	f6404619 	.word	0xf6404619
    b534:	f2c02370 	.word	0xf2c02370
    b538:	5c5b0301 	.word	0x5c5b0301
    b53c:	b2db4053 	.word	0xb2db4053
    b540:	f897753b 	.word	0xf897753b
    b544:	461a3024 	.word	0x461a3024
    b548:	2370f640 	.word	0x2370f640
    b54c:	0301f2c0 	.word	0x0301f2c0
    b550:	f8975c9a 	.word	0xf8975c9a
    b554:	46193029 	.word	0x46193029
    b558:	3370f640 	.word	0x3370f640
    b55c:	0301f2c0 	.word	0x0301f2c0
    b560:	40535c5b 	.word	0x40535c5b
    b564:	f897b2da 	.word	0xf897b2da
    b568:	4619302e 	.word	0x4619302e
    b56c:	4370f640 	.word	0x4370f640
    b570:	0301f2c0 	.word	0x0301f2c0
    b574:	40535c5b 	.word	0x40535c5b
    b578:	f897b2da 	.word	0xf897b2da
    b57c:	46193023 	.word	0x46193023
    b580:	2370f640 	.word	0x2370f640
    b584:	0301f2c0 	.word	0x0301f2c0
    b588:	40535c5b 	.word	0x40535c5b
    b58c:	757bb2db 	.word	0x757bb2db
    b590:	3024f897 	.word	0x3024f897
    b594:	f640461a 	.word	0xf640461a
    b598:	f2c02370 	.word	0xf2c02370
    b59c:	5c9a0301 	.word	0x5c9a0301
    b5a0:	3029f897 	.word	0x3029f897
    b5a4:	f6404619 	.word	0xf6404619
    b5a8:	f2c02370 	.word	0xf2c02370
    b5ac:	5c5b0301 	.word	0x5c5b0301
    b5b0:	b2da4053 	.word	0xb2da4053
    b5b4:	302ef897 	.word	0x302ef897
    b5b8:	f6404619 	.word	0xf6404619
    b5bc:	f2c03370 	.word	0xf2c03370
    b5c0:	5c5b0301 	.word	0x5c5b0301
    b5c4:	b2da4053 	.word	0xb2da4053
    b5c8:	3023f897 	.word	0x3023f897
    b5cc:	f6404619 	.word	0xf6404619
    b5d0:	f2c04370 	.word	0xf2c04370
    b5d4:	5c5b0301 	.word	0x5c5b0301
    b5d8:	b2db4053 	.word	0xb2db4053
    b5dc:	f89775bb 	.word	0xf89775bb
    b5e0:	461a3024 	.word	0x461a3024
    b5e4:	4370f640 	.word	0x4370f640
    b5e8:	0301f2c0 	.word	0x0301f2c0
    b5ec:	f8975c9a 	.word	0xf8975c9a
    b5f0:	46193029 	.word	0x46193029
    b5f4:	2370f640 	.word	0x2370f640
    b5f8:	0301f2c0 	.word	0x0301f2c0
    b5fc:	40535c5b 	.word	0x40535c5b
    b600:	f897b2da 	.word	0xf897b2da
    b604:	4619302e 	.word	0x4619302e
    b608:	2370f640 	.word	0x2370f640
    b60c:	0301f2c0 	.word	0x0301f2c0
    b610:	40535c5b 	.word	0x40535c5b
    b614:	f897b2da 	.word	0xf897b2da
    b618:	46193023 	.word	0x46193023
    b61c:	3370f640 	.word	0x3370f640
    b620:	0301f2c0 	.word	0x0301f2c0
    b624:	40535c5b 	.word	0x40535c5b
    b628:	75fbb2db 	.word	0x75fbb2db
    b62c:	3028f897 	.word	0x3028f897
    b630:	f640461a 	.word	0xf640461a
    b634:	f2c03370 	.word	0xf2c03370
    b638:	5c9a0301 	.word	0x5c9a0301
    b63c:	302df897 	.word	0x302df897
    b640:	f6404619 	.word	0xf6404619
    b644:	f2c04370 	.word	0xf2c04370
    b648:	5c5b0301 	.word	0x5c5b0301
    b64c:	b2da4053 	.word	0xb2da4053
    b650:	3022f897 	.word	0x3022f897
    b654:	f6404619 	.word	0xf6404619
    b658:	f2c02370 	.word	0xf2c02370
    b65c:	5c5b0301 	.word	0x5c5b0301
    b660:	b2da4053 	.word	0xb2da4053
    b664:	3027f897 	.word	0x3027f897
    b668:	f6404619 	.word	0xf6404619
    b66c:	f2c02370 	.word	0xf2c02370
    b670:	5c5b0301 	.word	0x5c5b0301
    b674:	b2db4053 	.word	0xb2db4053
    b678:	f897763b 	.word	0xf897763b
    b67c:	461a3028 	.word	0x461a3028
    b680:	2370f640 	.word	0x2370f640
    b684:	0301f2c0 	.word	0x0301f2c0
    b688:	f8975c9a 	.word	0xf8975c9a
    b68c:	4619302d 	.word	0x4619302d
    b690:	3370f640 	.word	0x3370f640
    b694:	0301f2c0 	.word	0x0301f2c0
    b698:	40535c5b 	.word	0x40535c5b
    b69c:	f897b2da 	.word	0xf897b2da
    b6a0:	46193022 	.word	0x46193022
    b6a4:	4370f640 	.word	0x4370f640
    b6a8:	0301f2c0 	.word	0x0301f2c0
    b6ac:	40535c5b 	.word	0x40535c5b
    b6b0:	f897b2da 	.word	0xf897b2da
    b6b4:	46193027 	.word	0x46193027
    b6b8:	2370f640 	.word	0x2370f640
    b6bc:	0301f2c0 	.word	0x0301f2c0
    b6c0:	40535c5b 	.word	0x40535c5b
    b6c4:	767bb2db 	.word	0x767bb2db
    b6c8:	3028f897 	.word	0x3028f897
    b6cc:	f640461a 	.word	0xf640461a
    b6d0:	f2c02370 	.word	0xf2c02370
    b6d4:	5c9a0301 	.word	0x5c9a0301
    b6d8:	302df897 	.word	0x302df897
    b6dc:	f6404619 	.word	0xf6404619
    b6e0:	f2c02370 	.word	0xf2c02370
    b6e4:	5c5b0301 	.word	0x5c5b0301
    b6e8:	b2da4053 	.word	0xb2da4053
    b6ec:	3022f897 	.word	0x3022f897
    b6f0:	f6404619 	.word	0xf6404619
    b6f4:	f2c03370 	.word	0xf2c03370
    b6f8:	5c5b0301 	.word	0x5c5b0301
    b6fc:	b2da4053 	.word	0xb2da4053
    b700:	3027f897 	.word	0x3027f897
    b704:	f6404619 	.word	0xf6404619
    b708:	f2c04370 	.word	0xf2c04370
    b70c:	5c5b0301 	.word	0x5c5b0301
    b710:	b2db4053 	.word	0xb2db4053
    b714:	f89776bb 	.word	0xf89776bb
    b718:	461a3028 	.word	0x461a3028
    b71c:	4370f640 	.word	0x4370f640
    b720:	0301f2c0 	.word	0x0301f2c0
    b724:	f8975c9a 	.word	0xf8975c9a
    b728:	4619302d 	.word	0x4619302d
    b72c:	2370f640 	.word	0x2370f640
    b730:	0301f2c0 	.word	0x0301f2c0
    b734:	40535c5b 	.word	0x40535c5b
    b738:	f897b2da 	.word	0xf897b2da
    b73c:	46193022 	.word	0x46193022
    b740:	2370f640 	.word	0x2370f640
    b744:	0301f2c0 	.word	0x0301f2c0
    b748:	40535c5b 	.word	0x40535c5b
    b74c:	f897b2da 	.word	0xf897b2da
    b750:	46193027 	.word	0x46193027
    b754:	3370f640 	.word	0x3370f640
    b758:	0301f2c0 	.word	0x0301f2c0
    b75c:	40535c5b 	.word	0x40535c5b
    b760:	76fbb2db 	.word	0x76fbb2db
    b764:	302cf897 	.word	0x302cf897
    b768:	f640461a 	.word	0xf640461a
    b76c:	f2c03370 	.word	0xf2c03370
    b770:	5c9a0301 	.word	0x5c9a0301
    b774:	3021f897 	.word	0x3021f897
    b778:	f6404619 	.word	0xf6404619
    b77c:	f2c04370 	.word	0xf2c04370
    b780:	5c5b0301 	.word	0x5c5b0301
    b784:	b2da4053 	.word	0xb2da4053
    b788:	3026f897 	.word	0x3026f897
    b78c:	f6404619 	.word	0xf6404619
    b790:	f2c02370 	.word	0xf2c02370
    b794:	5c5b0301 	.word	0x5c5b0301
    b798:	b2da4053 	.word	0xb2da4053
    b79c:	302bf897 	.word	0x302bf897
    b7a0:	f6404619 	.word	0xf6404619
    b7a4:	f2c02370 	.word	0xf2c02370
    b7a8:	5c5b0301 	.word	0x5c5b0301
    b7ac:	b2db4053 	.word	0xb2db4053
    b7b0:	f897773b 	.word	0xf897773b
    b7b4:	461a302c 	.word	0x461a302c
    b7b8:	2370f640 	.word	0x2370f640
    b7bc:	0301f2c0 	.word	0x0301f2c0
    b7c0:	f8975c9a 	.word	0xf8975c9a
    b7c4:	46193021 	.word	0x46193021
    b7c8:	3370f640 	.word	0x3370f640
    b7cc:	0301f2c0 	.word	0x0301f2c0
    b7d0:	40535c5b 	.word	0x40535c5b
    b7d4:	f897b2da 	.word	0xf897b2da
    b7d8:	46193026 	.word	0x46193026
    b7dc:	4370f640 	.word	0x4370f640
    b7e0:	0301f2c0 	.word	0x0301f2c0
    b7e4:	40535c5b 	.word	0x40535c5b
    b7e8:	f897b2da 	.word	0xf897b2da
    b7ec:	4619302b 	.word	0x4619302b
    b7f0:	2370f640 	.word	0x2370f640
    b7f4:	0301f2c0 	.word	0x0301f2c0
    b7f8:	40535c5b 	.word	0x40535c5b
    b7fc:	777bb2db 	.word	0x777bb2db
    b800:	302cf897 	.word	0x302cf897
    b804:	f640461a 	.word	0xf640461a
    b808:	f2c02370 	.word	0xf2c02370
    b80c:	5c9a0301 	.word	0x5c9a0301
    b810:	3021f897 	.word	0x3021f897
    b814:	f6404619 	.word	0xf6404619
    b818:	f2c02370 	.word	0xf2c02370
    b81c:	5c5b0301 	.word	0x5c5b0301
    b820:	b2da4053 	.word	0xb2da4053
    b824:	3026f897 	.word	0x3026f897
    b828:	f6404619 	.word	0xf6404619
    b82c:	f2c03370 	.word	0xf2c03370
    b830:	5c5b0301 	.word	0x5c5b0301
    b834:	b2da4053 	.word	0xb2da4053
    b838:	302bf897 	.word	0x302bf897
    b83c:	f6404619 	.word	0xf6404619
    b840:	f2c04370 	.word	0xf2c04370
    b844:	5c5b0301 	.word	0x5c5b0301
    b848:	b2db4053 	.word	0xb2db4053
    b84c:	f89777bb 	.word	0xf89777bb
    b850:	461a302c 	.word	0x461a302c
    b854:	4370f640 	.word	0x4370f640
    b858:	0301f2c0 	.word	0x0301f2c0
    b85c:	f8975c9a 	.word	0xf8975c9a
    b860:	46193021 	.word	0x46193021
    b864:	2370f640 	.word	0x2370f640
    b868:	0301f2c0 	.word	0x0301f2c0
    b86c:	40535c5b 	.word	0x40535c5b
    b870:	f897b2da 	.word	0xf897b2da
    b874:	46193026 	.word	0x46193026
    b878:	2370f640 	.word	0x2370f640
    b87c:	0301f2c0 	.word	0x0301f2c0
    b880:	40535c5b 	.word	0x40535c5b
    b884:	f897b2da 	.word	0xf897b2da
    b888:	4619302b 	.word	0x4619302b
    b88c:	3370f640 	.word	0x3370f640
    b890:	0301f2c0 	.word	0x0301f2c0
    b894:	40535c5b 	.word	0x40535c5b
    b898:	77fbb2db 	.word	0x77fbb2db
    b89c:	2030f897 	.word	0x2030f897
    b8a0:	303df897 	.word	0x303df897
    b8a4:	f6404619 	.word	0xf6404619
    b8a8:	f2c02370 	.word	0xf2c02370
    b8ac:	5c590301 	.word	0x5c590301
    b8b0:	304df897 	.word	0x304df897
    b8b4:	b2db404b 	.word	0xb2db404b
    b8b8:	b2db4053 	.word	0xb2db4053
    b8bc:	3030f887 	.word	0x3030f887
    b8c0:	2031f897 	.word	0x2031f897
    b8c4:	303ef897 	.word	0x303ef897
    b8c8:	f6404619 	.word	0xf6404619
    b8cc:	f2c02370 	.word	0xf2c02370
    b8d0:	5c5b0301 	.word	0x5c5b0301
    b8d4:	b2db4053 	.word	0xb2db4053
    b8d8:	3031f887 	.word	0x3031f887
    b8dc:	2032f897 	.word	0x2032f897
    b8e0:	303ff897 	.word	0x303ff897
    b8e4:	f6404619 	.word	0xf6404619
    b8e8:	f2c02370 	.word	0xf2c02370
    b8ec:	5c5b0301 	.word	0x5c5b0301
    b8f0:	b2db4053 	.word	0xb2db4053
    b8f4:	3032f887 	.word	0x3032f887
    b8f8:	2033f897 	.word	0x2033f897
    b8fc:	303cf897 	.word	0x303cf897
    b900:	f6404619 	.word	0xf6404619
    b904:	f2c02370 	.word	0xf2c02370
    b908:	5c5b0301 	.word	0x5c5b0301
    b90c:	b2db4053 	.word	0xb2db4053
    b910:	3033f887 	.word	0x3033f887
    b914:	304df897 	.word	0x304df897
    b918:	0343ea4f 	.word	0x0343ea4f
    b91c:	f897b2da 	.word	0xf897b2da
    b920:	ea4f304d 	.word	0xea4f304d
    b924:	b2db13d3 	.word	0xb2db13d3
    b928:	ea4f4619 	.word	0xea4f4619
    b92c:	18cb0141 	.word	0x18cb0141
    b930:	ea4f4619 	.word	0xea4f4619
    b934:	461900c1 	.word	0x461900c1
    b938:	18cb4603 	.word	0x18cb4603
    b93c:	b2dbb2db 	.word	0xb2dbb2db
    b940:	b2db4053 	.word	0xb2db4053
    b944:	304df887 	.word	0x304df887
    b948:	0304f04f 	.word	0x0304f04f
    b94c:	304ef887 	.word	0x304ef887
    b950:	f897e075 	.word	0xf897e075
    b954:	f897304e 	.word	0xf897304e
    b958:	f107204e 	.word	0xf107204e
    b95c:	18820050 	.word	0x18820050
    b960:	1c20f812 	.word	0x1c20f812
    b964:	204ef897 	.word	0x204ef897
    b968:	0204f1a2 	.word	0x0204f1a2
    b96c:	0050f107 	.word	0x0050f107
    b970:	f8121882 	.word	0xf8121882
    b974:	404a2c20 	.word	0x404a2c20
    b978:	f107b2d2 	.word	0xf107b2d2
    b97c:	18cb0150 	.word	0x18cb0150
    b980:	2c20f803 	.word	0x2c20f803
    b984:	304ef897 	.word	0x304ef897
    b988:	0301f103 	.word	0x0301f103
    b98c:	204ef897 	.word	0x204ef897
    b990:	0201f102 	.word	0x0201f102
    b994:	0050f107 	.word	0x0050f107
    b998:	f8121882 	.word	0xf8121882
    b99c:	f8971c20 	.word	0xf8971c20
    b9a0:	f1a2204e 	.word	0xf1a2204e
    b9a4:	f1070203 	.word	0xf1070203
    b9a8:	18820050 	.word	0x18820050
    b9ac:	2c20f812 	.word	0x2c20f812
    b9b0:	b2d2404a 	.word	0xb2d2404a
    b9b4:	0150f107 	.word	0x0150f107
    b9b8:	f80318cb 	.word	0xf80318cb
    b9bc:	f8972c20 	.word	0xf8972c20
    b9c0:	f103304e 	.word	0xf103304e
    b9c4:	f8970302 	.word	0xf8970302
    b9c8:	f102204e 	.word	0xf102204e
    b9cc:	f1070202 	.word	0xf1070202
    b9d0:	18820050 	.word	0x18820050
    b9d4:	1c20f812 	.word	0x1c20f812
    b9d8:	204ef897 	.word	0x204ef897
    b9dc:	0202f1a2 	.word	0x0202f1a2
    b9e0:	0050f107 	.word	0x0050f107
    b9e4:	f8121882 	.word	0xf8121882
    b9e8:	404a2c20 	.word	0x404a2c20
    b9ec:	f107b2d2 	.word	0xf107b2d2
    b9f0:	18cb0150 	.word	0x18cb0150
    b9f4:	2c20f803 	.word	0x2c20f803
    b9f8:	304ef897 	.word	0x304ef897
    b9fc:	0303f103 	.word	0x0303f103
    ba00:	204ef897 	.word	0x204ef897
    ba04:	0203f102 	.word	0x0203f102
    ba08:	0050f107 	.word	0x0050f107
    ba0c:	f8121882 	.word	0xf8121882
    ba10:	f8971c20 	.word	0xf8971c20
    ba14:	f102204e 	.word	0xf102204e
    ba18:	f10732ff 	.word	0xf10732ff
    ba1c:	18820050 	.word	0x18820050
    ba20:	2c20f812 	.word	0x2c20f812
    ba24:	b2d2404a 	.word	0xb2d2404a
    ba28:	0150f107 	.word	0x0150f107
    ba2c:	f80318cb 	.word	0xf80318cb
    ba30:	f8972c20 	.word	0xf8972c20
    ba34:	f103304e 	.word	0xf103304e
    ba38:	f8870304 	.word	0xf8870304
    ba3c:	f897304e 	.word	0xf897304e
    ba40:	2b0f304e 	.word	0x2b0f304e
    ba44:	f04fd985 	.word	0xf04fd985
    ba48:	f8870300 	.word	0xf8870300
    ba4c:	e021304e 	.word	0xe021304e
    ba50:	104ef897 	.word	0x104ef897
    ba54:	304ef897 	.word	0x304ef897
    ba58:	0383ea4f 	.word	0x0383ea4f
    ba5c:	0250f107 	.word	0x0250f107
    ba60:	f85318d3 	.word	0xf85318d3
    ba64:	f8972c40 	.word	0xf8972c40
    ba68:	ea4f304e 	.word	0xea4f304e
    ba6c:	f1070383 	.word	0xf1070383
    ba70:	18c30050 	.word	0x18c30050
    ba74:	3c20f853 	.word	0x3c20f853
    ba78:	ea4f405a 	.word	0xea4f405a
    ba7c:	f1070381 	.word	0xf1070381
    ba80:	18cb0150 	.word	0x18cb0150
    ba84:	2c30f843 	.word	0x2c30f843
    ba88:	304ef897 	.word	0x304ef897
    ba8c:	0301f103 	.word	0x0301f103
    ba90:	304ef887 	.word	0x304ef887
    ba94:	304ef897 	.word	0x304ef897
    ba98:	d9d92b03 	.word	0xd9d92b03
    ba9c:	304ff897 	.word	0x304ff897
    baa0:	0301f103 	.word	0x0301f103
    baa4:	304ff887 	.word	0x304ff887
    baa8:	304ff897 	.word	0x304ff897
    baac:	f67f2b08 	.word	0xf67f2b08
    bab0:	f897ac85 	.word	0xf897ac85
    bab4:	461a3020 	.word	0x461a3020
    bab8:	2370f640 	.word	0x2370f640
    babc:	0301f2c0 	.word	0x0301f2c0
    bac0:	f8875c9b 	.word	0xf8875c9b
    bac4:	f8973020 	.word	0xf8973020
    bac8:	461a3024 	.word	0x461a3024
    bacc:	2370f640 	.word	0x2370f640
    bad0:	0301f2c0 	.word	0x0301f2c0
    bad4:	f8875c9b 	.word	0xf8875c9b
    bad8:	f8973024 	.word	0xf8973024
    badc:	461a3028 	.word	0x461a3028
    bae0:	2370f640 	.word	0x2370f640
    bae4:	0301f2c0 	.word	0x0301f2c0
    bae8:	f8875c9b 	.word	0xf8875c9b
    baec:	f8973028 	.word	0xf8973028
    baf0:	461a302c 	.word	0x461a302c
    baf4:	2370f640 	.word	0x2370f640
    baf8:	0301f2c0 	.word	0x0301f2c0
    bafc:	f8875c9b 	.word	0xf8875c9b
    bb00:	f897302c 	.word	0xf897302c
    bb04:	f8873021 	.word	0xf8873021
    bb08:	f897304c 	.word	0xf897304c
    bb0c:	461a3025 	.word	0x461a3025
    bb10:	2370f640 	.word	0x2370f640
    bb14:	0301f2c0 	.word	0x0301f2c0
    bb18:	f8875c9b 	.word	0xf8875c9b
    bb1c:	f8973021 	.word	0xf8973021
    bb20:	461a3029 	.word	0x461a3029
    bb24:	2370f640 	.word	0x2370f640
    bb28:	0301f2c0 	.word	0x0301f2c0
    bb2c:	f8875c9b 	.word	0xf8875c9b
    bb30:	f8973025 	.word	0xf8973025
    bb34:	461a302d 	.word	0x461a302d
    bb38:	2370f640 	.word	0x2370f640
    bb3c:	0301f2c0 	.word	0x0301f2c0
    bb40:	f8875c9b 	.word	0xf8875c9b
    bb44:	f8973029 	.word	0xf8973029
    bb48:	f640204c 	.word	0xf640204c
    bb4c:	f2c02370 	.word	0xf2c02370
    bb50:	5c9b0301 	.word	0x5c9b0301
    bb54:	302df887 	.word	0x302df887
    bb58:	3022f897 	.word	0x3022f897
    bb5c:	304cf887 	.word	0x304cf887
    bb60:	302af897 	.word	0x302af897
    bb64:	f640461a 	.word	0xf640461a
    bb68:	f2c02370 	.word	0xf2c02370
    bb6c:	5c9b0301 	.word	0x5c9b0301
    bb70:	3022f887 	.word	0x3022f887
    bb74:	204cf897 	.word	0x204cf897
    bb78:	2370f640 	.word	0x2370f640
    bb7c:	0301f2c0 	.word	0x0301f2c0
    bb80:	f8875c9b 	.word	0xf8875c9b
    bb84:	f897302a 	.word	0xf897302a
    bb88:	f8873026 	.word	0xf8873026
    bb8c:	f897304c 	.word	0xf897304c
    bb90:	461a302e 	.word	0x461a302e
    bb94:	2370f640 	.word	0x2370f640
    bb98:	0301f2c0 	.word	0x0301f2c0
    bb9c:	f8875c9b 	.word	0xf8875c9b
    bba0:	f8973026 	.word	0xf8973026
    bba4:	f640204c 	.word	0xf640204c
    bba8:	f2c02370 	.word	0xf2c02370
    bbac:	5c9b0301 	.word	0x5c9b0301
    bbb0:	302ef887 	.word	0x302ef887
    bbb4:	302ff897 	.word	0x302ff897
    bbb8:	304cf887 	.word	0x304cf887
    bbbc:	302bf897 	.word	0x302bf897
    bbc0:	f640461a 	.word	0xf640461a
    bbc4:	f2c02370 	.word	0xf2c02370
    bbc8:	5c9b0301 	.word	0x5c9b0301
    bbcc:	302ff887 	.word	0x302ff887
    bbd0:	3027f897 	.word	0x3027f897
    bbd4:	f640461a 	.word	0xf640461a
    bbd8:	f2c02370 	.word	0xf2c02370
    bbdc:	5c9b0301 	.word	0x5c9b0301
    bbe0:	302bf887 	.word	0x302bf887
    bbe4:	3023f897 	.word	0x3023f897
    bbe8:	f640461a 	.word	0xf640461a
    bbec:	f2c02370 	.word	0xf2c02370
    bbf0:	5c9b0301 	.word	0x5c9b0301
    bbf4:	3027f887 	.word	0x3027f887
    bbf8:	204cf897 	.word	0x204cf897
    bbfc:	2370f640 	.word	0x2370f640
    bc00:	0301f2c0 	.word	0x0301f2c0
    bc04:	f8875c9b 	.word	0xf8875c9b
    bc08:	f8973023 	.word	0xf8973023
    bc0c:	f8972030 	.word	0xf8972030
    bc10:	4619303d 	.word	0x4619303d
    bc14:	2370f640 	.word	0x2370f640
    bc18:	0301f2c0 	.word	0x0301f2c0
    bc1c:	f8975c59 	.word	0xf8975c59
    bc20:	404b304d 	.word	0x404b304d
    bc24:	4053b2db 	.word	0x4053b2db
    bc28:	f887b2db 	.word	0xf887b2db
    bc2c:	f8973030 	.word	0xf8973030
    bc30:	f8972031 	.word	0xf8972031
    bc34:	4619303e 	.word	0x4619303e
    bc38:	2370f640 	.word	0x2370f640
    bc3c:	0301f2c0 	.word	0x0301f2c0
    bc40:	40535c5b 	.word	0x40535c5b
    bc44:	f887b2db 	.word	0xf887b2db
    bc48:	f8973031 	.word	0xf8973031
    bc4c:	f8972032 	.word	0xf8972032
    bc50:	4619303f 	.word	0x4619303f
    bc54:	2370f640 	.word	0x2370f640
    bc58:	0301f2c0 	.word	0x0301f2c0
    bc5c:	40535c5b 	.word	0x40535c5b
    bc60:	f887b2db 	.word	0xf887b2db
    bc64:	f8973032 	.word	0xf8973032
    bc68:	f8972033 	.word	0xf8972033
    bc6c:	4619303c 	.word	0x4619303c
    bc70:	2370f640 	.word	0x2370f640
    bc74:	0301f2c0 	.word	0x0301f2c0
    bc78:	40535c5b 	.word	0x40535c5b
    bc7c:	f887b2db 	.word	0xf887b2db
    bc80:	f8973033 	.word	0xf8973033
    bc84:	ea4f304d 	.word	0xea4f304d
    bc88:	b2da0343 	.word	0xb2da0343
    bc8c:	304df897 	.word	0x304df897
    bc90:	13d3ea4f 	.word	0x13d3ea4f
    bc94:	4619b2db 	.word	0x4619b2db
    bc98:	0141ea4f 	.word	0x0141ea4f
    bc9c:	461918cb 	.word	0x461918cb
    bca0:	00c1ea4f 	.word	0x00c1ea4f
    bca4:	46034619 	.word	0x46034619
    bca8:	b2db18cb 	.word	0xb2db18cb
    bcac:	4053b2db 	.word	0x4053b2db
    bcb0:	f887b2db 	.word	0xf887b2db
    bcb4:	f04f304d 	.word	0xf04f304d
    bcb8:	f8870304 	.word	0xf8870304
    bcbc:	e075304c 	.word	0xe075304c
    bcc0:	304cf897 	.word	0x304cf897
    bcc4:	204cf897 	.word	0x204cf897
    bcc8:	0050f107 	.word	0x0050f107
    bccc:	f8121882 	.word	0xf8121882
    bcd0:	f8971c20 	.word	0xf8971c20
    bcd4:	f1a2204c 	.word	0xf1a2204c
    bcd8:	f1070204 	.word	0xf1070204
    bcdc:	18820050 	.word	0x18820050
    bce0:	2c20f812 	.word	0x2c20f812
    bce4:	b2d2404a 	.word	0xb2d2404a
    bce8:	0150f107 	.word	0x0150f107
    bcec:	f80318cb 	.word	0xf80318cb
    bcf0:	f8972c20 	.word	0xf8972c20
    bcf4:	f103304c 	.word	0xf103304c
    bcf8:	f8970301 	.word	0xf8970301
    bcfc:	f102204c 	.word	0xf102204c
    bd00:	f1070201 	.word	0xf1070201
    bd04:	18820050 	.word	0x18820050
    bd08:	1c20f812 	.word	0x1c20f812
    bd0c:	204cf897 	.word	0x204cf897
    bd10:	0203f1a2 	.word	0x0203f1a2
    bd14:	0050f107 	.word	0x0050f107
    bd18:	f8121882 	.word	0xf8121882
    bd1c:	404a2c20 	.word	0x404a2c20
    bd20:	f107b2d2 	.word	0xf107b2d2
    bd24:	18cb0150 	.word	0x18cb0150
    bd28:	2c20f803 	.word	0x2c20f803
    bd2c:	304cf897 	.word	0x304cf897
    bd30:	0302f103 	.word	0x0302f103
    bd34:	204cf897 	.word	0x204cf897
    bd38:	0202f102 	.word	0x0202f102
    bd3c:	0050f107 	.word	0x0050f107
    bd40:	f8121882 	.word	0xf8121882
    bd44:	f8971c20 	.word	0xf8971c20
    bd48:	f1a2204c 	.word	0xf1a2204c
    bd4c:	f1070202 	.word	0xf1070202
    bd50:	18820050 	.word	0x18820050
    bd54:	2c20f812 	.word	0x2c20f812
    bd58:	b2d2404a 	.word	0xb2d2404a
    bd5c:	0150f107 	.word	0x0150f107
    bd60:	f80318cb 	.word	0xf80318cb
    bd64:	f8972c20 	.word	0xf8972c20
    bd68:	f103304c 	.word	0xf103304c
    bd6c:	f8970303 	.word	0xf8970303
    bd70:	f102204c 	.word	0xf102204c
    bd74:	f1070203 	.word	0xf1070203
    bd78:	18820050 	.word	0x18820050
    bd7c:	1c20f812 	.word	0x1c20f812
    bd80:	204cf897 	.word	0x204cf897
    bd84:	32fff102 	.word	0x32fff102
    bd88:	0050f107 	.word	0x0050f107
    bd8c:	f8121882 	.word	0xf8121882
    bd90:	404a2c20 	.word	0x404a2c20
    bd94:	f107b2d2 	.word	0xf107b2d2
    bd98:	18cb0150 	.word	0x18cb0150
    bd9c:	2c20f803 	.word	0x2c20f803
    bda0:	304cf897 	.word	0x304cf897
    bda4:	0304f103 	.word	0x0304f103
    bda8:	304cf887 	.word	0x304cf887
    bdac:	304cf897 	.word	0x304cf897
    bdb0:	d9852b0f 	.word	0xd9852b0f
    bdb4:	0300f04f 	.word	0x0300f04f
    bdb8:	304ff887 	.word	0x304ff887
    bdbc:	f897e01d 	.word	0xf897e01d
    bdc0:	f897204f 	.word	0xf897204f
    bdc4:	ea4f304f 	.word	0xea4f304f
    bdc8:	f1070383 	.word	0xf1070383
    bdcc:	18c30050 	.word	0x18c30050
    bdd0:	1c30f853 	.word	0x1c30f853
    bdd4:	304ff897 	.word	0x304ff897
    bdd8:	0383ea4f 	.word	0x0383ea4f
    bddc:	0050f107 	.word	0x0050f107
    bde0:	f85318c3 	.word	0xf85318c3
    bde4:	40593c20 	.word	0x40593c20
    bde8:	f8436c7b 	.word	0xf8436c7b
    bdec:	f8971022 	.word	0xf8971022
    bdf0:	f103304f 	.word	0xf103304f
    bdf4:	f8870301 	.word	0xf8870301
    bdf8:	f897304f 	.word	0xf897304f
    bdfc:	2b03304f 	.word	0x2b03304f
    be00:	f107d9dd 	.word	0xf107d9dd
    be04:	46bd0750 	.word	0x46bd0750
    be08:	bf00bd80 	.word	0xbf00bd80
    be0c:	b08ab580 	.word	0xb08ab580
    be10:	f04faf00 	.word	0xf04faf00
    be14:	627b5300 	.word	0x627b5300
    be18:	f800f7fc 	.word	0xf800f7fc
    be1c:	0340f248 	.word	0x0340f248
    be20:	0309f2c2 	.word	0x0309f2c2
    be24:	f003681b 	.word	0xf003681b
    be28:	2b000308 	.word	0x2b000308
    be2c:	f248d112 	.word	0xf248d112
    be30:	f2c20340 	.word	0xf2c20340
    be34:	f2480309 	.word	0xf2480309
    be38:	f2c20240 	.word	0xf2c20240
    be3c:	68120209 	.word	0x68120209
    be40:	0208f042 	.word	0x0208f042
    be44:	f640601a 	.word	0xf640601a
    be48:	f2c133cc 	.word	0xf2c133cc
    be4c:	f04f0300 	.word	0xf04f0300
    be50:	701a0201 	.word	0x701a0201
    be54:	0340f248 	.word	0x0340f248
    be58:	0309f2c2 	.word	0x0309f2c2
    be5c:	f003695b 	.word	0xf003695b
    be60:	2b000308 	.word	0x2b000308
    be64:	f640d00d 	.word	0xf640d00d
    be68:	f2c133cc 	.word	0xf2c133cc
    be6c:	f04f0300 	.word	0xf04f0300
    be70:	701a0201 	.word	0x701a0201
    be74:	0340f248 	.word	0x0340f248
    be78:	0309f2c2 	.word	0x0309f2c2
    be7c:	0208f04f 	.word	0x0208f04f
    be80:	f64061da 	.word	0xf64061da
    be84:	f2c133cc 	.word	0xf2c133cc
    be88:	781b0300 	.word	0x781b0300
    be8c:	d00e2b00 	.word	0xd00e2b00
    be90:	0300f04f 	.word	0x0300f04f
    be94:	e003603b 	.word	0xe003603b
    be98:	f103683b 	.word	0xf103683b
    be9c:	603b0301 	.word	0x603b0301
    bea0:	f64c683a 	.word	0xf64c683a
    bea4:	f2c05349 	.word	0xf2c05349
    bea8:	429a0311 	.word	0x429a0311
    beac:	f04fd9f4 	.word	0xf04fd9f4
    beb0:	603b0300 	.word	0x603b0300
    beb4:	6839e025 	.word	0x6839e025
    beb8:	0389f648 	.word	0x0389f648
    bebc:	0388f6c8 	.word	0x0388f6c8
    bec0:	2301fba3 	.word	0x2301fba3
    bec4:	03d3ea4f 	.word	0x03d3ea4f
    bec8:	ea4f461a 	.word	0xea4f461a
    becc:	1ad21202 	.word	0x1ad21202
    bed0:	f6401a8b 	.word	0xf6401a8b
    bed4:	f2c132bc 	.word	0xf2c132bc
    bed8:	5cd10200 	.word	0x5cd10200
    bedc:	f5c2683a 	.word	0xf5c2683a
    bee0:	f10252ff 	.word	0xf10252ff
    bee4:	6a78021f 	.word	0x6a78021f
    bee8:	78121882 	.word	0x78121882
    beec:	b2d1404a 	.word	0xb2d1404a
    bef0:	32bcf640 	.word	0x32bcf640
    bef4:	0200f2c1 	.word	0x0200f2c1
    bef8:	683b54d1 	.word	0x683b54d1
    befc:	0301f103 	.word	0x0301f103
    bf00:	683a603b 	.word	0x683a603b
    bf04:	73fff240 	.word	0x73fff240
    bf08:	d9d4429a 	.word	0xd9d4429a
    bf0c:	33bcf640 	.word	0x33bcf640
    bf10:	0300f2c1 	.word	0x0300f2c1
    bf14:	f003789b 	.word	0xf003789b
    bf18:	b2db0303 	.word	0xb2db0303
    bf1c:	f6404618 	.word	0xf6404618
    bf20:	f2c131bc 	.word	0xf2c131bc
    bf24:	f7fe0100 	.word	0xf7fe0100
    bf28:	f640ff9d 	.word	0xf640ff9d
    bf2c:	f2c133bc 	.word	0xf2c133bc
    bf30:	789b0300 	.word	0x789b0300
    bf34:	0303f003 	.word	0x0303f003
    bf38:	1203ea4f 	.word	0x1203ea4f
    bf3c:	2314f640 	.word	0x2314f640
    bf40:	0301f2c0 	.word	0x0301f2c0
    bf44:	f10718d3 	.word	0xf10718d3
    bf48:	f6400214 	.word	0xf6400214
    bf4c:	f2c130bc 	.word	0xf2c130bc
    bf50:	46110000 	.word	0x46110000
    bf54:	f7ff461a 	.word	0xf7ff461a
    bf58:	f04ff9ef 	.word	0xf04ff9ef
    bf5c:	603b0300 	.word	0x603b0300
    bf60:	683be003 	.word	0x683be003
    bf64:	0301f103 	.word	0x0301f103
    bf68:	683a603b 	.word	0x683a603b
    bf6c:	73dff246 	.word	0x73dff246
    bf70:	0335f2c0 	.word	0x0335f2c0
    bf74:	d9f4429a 	.word	0xd9f4429a
    bf78:	0304f107 	.word	0x0304f107
    bf7c:	f04f4618 	.word	0xf04f4618
    bf80:	f7ff0110 	.word	0xf7ff0110
    bf84:	f107f875 	.word	0xf107f875
    bf88:	f1070214 	.word	0xf1070214
    bf8c:	46100304 	.word	0x46100304
    bf90:	f04f4619 	.word	0xf04f4619
    bf94:	f0000210 	.word	0xf0000210
    bf98:	4603fdbd 	.word	0x4603fdbd
    bf9c:	d0022b00 	.word	0xd0022b00
    bfa0:	0300f04f 	.word	0x0300f04f
    bfa4:	f04fe001 	.word	0xf04fe001
    bfa8:	46180301 	.word	0x46180301
    bfac:	0728f107 	.word	0x0728f107
    bfb0:	bd8046bd 	.word	0xbd8046bd
    bfb4:	b085b480 	.word	0xb085b480
    bfb8:	6078af00 	.word	0x6078af00
    bfbc:	f003687b 	.word	0xf003687b
    bfc0:	60fb0307 	.word	0x60fb0307
    bfc4:	436df44f 	.word	0x436df44f
    bfc8:	0300f2ce 	.word	0x0300f2ce
    bfcc:	60bb68db 	.word	0x60bb68db
    bfd0:	f64f68ba 	.word	0xf64f68ba
    bfd4:	401303ff 	.word	0x401303ff
    bfd8:	68fb60bb 	.word	0x68fb60bb
    bfdc:	2203ea4f 	.word	0x2203ea4f
    bfe0:	431368bb 	.word	0x431368bb
    bfe4:	63bff043 	.word	0x63bff043
    bfe8:	3300f443 	.word	0x3300f443
    bfec:	f44f60bb 	.word	0xf44f60bb
    bff0:	f2ce436d 	.word	0xf2ce436d
    bff4:	68ba0300 	.word	0x68ba0300
    bff8:	f10760da 	.word	0xf10760da
    bffc:	46bd0714 	.word	0x46bd0714
    c000:	4770bc80 	.word	0x4770bc80
    c004:	b083b480 	.word	0xb083b480
    c008:	4603af00 	.word	0x4603af00
    c00c:	f44f71fb 	.word	0xf44f71fb
    c010:	f2ce4361 	.word	0xf2ce4361
    c014:	f9970300 	.word	0xf9970300
    c018:	ea4f2007 	.word	0xea4f2007
    c01c:	79f91252 	.word	0x79f91252
    c020:	011ff001 	.word	0x011ff001
    c024:	0001f04f 	.word	0x0001f04f
    c028:	f101fa00 	.word	0xf101fa00
    c02c:	1022f843 	.word	0x1022f843
    c030:	070cf107 	.word	0x070cf107
    c034:	bc8046bd 	.word	0xbc8046bd
    c038:	bf004770 	.word	0xbf004770
    c03c:	b083b480 	.word	0xb083b480
    c040:	4603af00 	.word	0x4603af00
    c044:	71fb6039 	.word	0x71fb6039
    c048:	3007f997 	.word	0x3007f997
    c04c:	da102b00 	.word	0xda102b00
    c050:	436df44f 	.word	0x436df44f
    c054:	0300f2ce 	.word	0x0300f2ce
    c058:	f00279fa 	.word	0xf00279fa
    c05c:	f1a2020f 	.word	0xf1a2020f
    c060:	683a0104 	.word	0x683a0104
    c064:	ea4fb2d2 	.word	0xea4fb2d2
    c068:	b2d202c2 	.word	0xb2d202c2
    c06c:	761a185b 	.word	0x761a185b
    c070:	f44fe00d 	.word	0xf44fe00d
    c074:	f2ce4361 	.word	0xf2ce4361
    c078:	f9970300 	.word	0xf9970300
    c07c:	683a1007 	.word	0x683a1007
    c080:	ea4fb2d2 	.word	0xea4fb2d2
    c084:	b2d202c2 	.word	0xb2d202c2
    c088:	f883185b 	.word	0xf883185b
    c08c:	f1072300 	.word	0xf1072300
    c090:	46bd070c 	.word	0x46bd070c
    c094:	4770bc80 	.word	0x4770bc80

0000c098 <Init_Interrupts>:
    c098:	af00b580 	.word	0xaf00b580
    c09c:	436df44f 	.word	0x436df44f
    c0a0:	0300f2ce 	.word	0x0300f2ce
    c0a4:	5200f44f 	.word	0x5200f44f
    c0a8:	f04f609a 	.word	0xf04f609a
    c0ac:	f7ff0007 	.word	0xf7ff0007
    c0b0:	f04fff81 	.word	0xf04fff81
    c0b4:	f04f0001 	.word	0xf04f0001
    c0b8:	f7ff0100 	.word	0xf7ff0100
    c0bc:	f04fffbf 	.word	0xf04fffbf
    c0c0:	f04f0007 	.word	0xf04f0007
    c0c4:	f7ff0100 	.word	0xf7ff0100
    c0c8:	f04fffb9 	.word	0xf04fffb9
    c0cc:	f04f000e 	.word	0xf04f000e
    c0d0:	f7ff0100 	.word	0xf7ff0100
    c0d4:	f04fffb3 	.word	0xf04fffb3
    c0d8:	f04f000f 	.word	0xf04f000f
    c0dc:	f7ff0100 	.word	0xf7ff0100
    c0e0:	f04fffad 	.word	0xf04fffad
    c0e4:	f04f0024 	.word	0xf04f0024
    c0e8:	f7ff0100 	.word	0xf7ff0100
    c0ec:	f04fffa7 	.word	0xf04fffa7
    c0f0:	f7ff0001 	.word	0xf7ff0001
    c0f4:	f04fff87 	.word	0xf04fff87
    c0f8:	f7ff0007 	.word	0xf7ff0007
    c0fc:	f04fff83 	.word	0xf04fff83
    c100:	f7ff000e 	.word	0xf7ff000e
    c104:	f04fff7f 	.word	0xf04fff7f
    c108:	f7ff000f 	.word	0xf7ff000f
    c10c:	f04fff7b 	.word	0xf04fff7b
    c110:	f7ff0024 	.word	0xf7ff0024
    c114:	f04fff77 	.word	0xf04fff77
    c118:	f7ff0017 	.word	0xf7ff0017
    c11c:	bd80ff73 	.word	0xbd80ff73

0000c120 <I2C_Start>:
    c120:	b083b480 	.word	0xb083b480
    c124:	f44faf00 	.word	0xf44faf00
    c128:	f2c44340 	.word	0xf2c44340
    c12c:	607b0305 	.word	0x607b0305
    c130:	f04f687b 	.word	0xf04f687b
    c134:	601a0220 	.word	0x601a0220
    c138:	4328f640 	.word	0x4328f640
    c13c:	0300f2c1 	.word	0x0300f2c1
    c140:	2b00781b 	.word	0x2b00781b
    c144:	687bd003 	.word	0x687bd003
    c148:	0208f04f 	.word	0x0208f04f
    c14c:	bf00619a 	.word	0xbf00619a
    c150:	681b687b 	.word	0x681b687b
    c154:	0308f003 	.word	0x0308f003
    c158:	d0f92b00 	.word	0xd0f92b00
    c15c:	f04f687b 	.word	0xf04f687b
    c160:	619a0220 	.word	0x619a0220
    c164:	4328f640 	.word	0x4328f640
    c168:	0300f2c1 	.word	0x0300f2c1
    c16c:	0201f04f 	.word	0x0201f04f
    c170:	f04f701a 	.word	0xf04f701a
    c174:	46180300 	.word	0x46180300
    c178:	070cf107 	.word	0x070cf107
    c17c:	bc8046bd 	.word	0xbc8046bd
    c180:	bf004770 	.word	0xbf004770

0000c184 <I2C_Write>:
    c184:	b087b480 	.word	0xb087b480
    c188:	4603af00 	.word	0x4603af00
    c18c:	f44f71fb 	.word	0xf44f71fb
    c190:	f2c44340 	.word	0xf2c44340
    c194:	613b0305 	.word	0x613b0305
    c198:	0300f04f 	.word	0x0300f04f
    c19c:	79fa617b 	.word	0x79fa617b
    c1a0:	609a693b 	.word	0x609a693b
    c1a4:	f04f693b 	.word	0xf04f693b
    c1a8:	619a0208 	.word	0x619a0208
    c1ac:	693bbf00 	.word	0x693bbf00
    c1b0:	f003681b 	.word	0xf003681b
    c1b4:	2b000308 	.word	0x2b000308
    c1b8:	693bd0f9 	.word	0x693bd0f9
    c1bc:	73fb685b 	.word	0x73fb685b
    c1c0:	f1a37bfb 	.word	0xf1a37bfb
    c1c4:	2b300318 	.word	0x2b300318
    c1c8:	a201d87c 	.word	0xa201d87c
    c1cc:	f023f852 	.word	0xf023f852
    c1d0:	0000c295 	.word	0x0000c295
    c1d4:	0000c2c5 	.word	0x0000c2c5
    c1d8:	0000c2c5 	.word	0x0000c2c5
    c1dc:	0000c2c5 	.word	0x0000c2c5
    c1e0:	0000c2c5 	.word	0x0000c2c5
    c1e4:	0000c2c5 	.word	0x0000c2c5
    c1e8:	0000c2c5 	.word	0x0000c2c5
    c1ec:	0000c2c5 	.word	0x0000c2c5
    c1f0:	0000c29d 	.word	0x0000c29d
    c1f4:	0000c2c5 	.word	0x0000c2c5
    c1f8:	0000c2c5 	.word	0x0000c2c5
    c1fc:	0000c2c5 	.word	0x0000c2c5
    c200:	0000c2c5 	.word	0x0000c2c5
    c204:	0000c2c5 	.word	0x0000c2c5
    c208:	0000c2c5 	.word	0x0000c2c5
    c20c:	0000c2c5 	.word	0x0000c2c5
    c210:	0000c2a5 	.word	0x0000c2a5
    c214:	0000c2c5 	.word	0x0000c2c5
    c218:	0000c2c5 	.word	0x0000c2c5
    c21c:	0000c2c5 	.word	0x0000c2c5
    c220:	0000c2c5 	.word	0x0000c2c5
    c224:	0000c2c5 	.word	0x0000c2c5
    c228:	0000c2c5 	.word	0x0000c2c5
    c22c:	0000c2c5 	.word	0x0000c2c5
    c230:	0000c2ad 	.word	0x0000c2ad
    c234:	0000c2c5 	.word	0x0000c2c5
    c238:	0000c2c5 	.word	0x0000c2c5
    c23c:	0000c2c5 	.word	0x0000c2c5
    c240:	0000c2c5 	.word	0x0000c2c5
    c244:	0000c2c5 	.word	0x0000c2c5
    c248:	0000c2c5 	.word	0x0000c2c5
    c24c:	0000c2c5 	.word	0x0000c2c5
    c250:	0000c2c5 	.word	0x0000c2c5
    c254:	0000c2c5 	.word	0x0000c2c5
    c258:	0000c2c5 	.word	0x0000c2c5
    c25c:	0000c2c5 	.word	0x0000c2c5
    c260:	0000c2c5 	.word	0x0000c2c5
    c264:	0000c2c5 	.word	0x0000c2c5
    c268:	0000c2c5 	.word	0x0000c2c5
    c26c:	0000c2c5 	.word	0x0000c2c5
    c270:	0000c2b5 	.word	0x0000c2b5
    c274:	0000c2c5 	.word	0x0000c2c5
    c278:	0000c2c5 	.word	0x0000c2c5
    c27c:	0000c2c5 	.word	0x0000c2c5
    c280:	0000c2c5 	.word	0x0000c2c5
    c284:	0000c2c5 	.word	0x0000c2c5
    c288:	0000c2c5 	.word	0x0000c2c5
    c28c:	0000c2c5 	.word	0x0000c2c5
    c290:	0000c2bd 	.word	0x0000c2bd
    c294:	0300f04f 	.word	0x0300f04f
    c298:	e017617b 	.word	0xe017617b
    c29c:	0301f04f 	.word	0x0301f04f
    c2a0:	e013617b 	.word	0xe013617b
    c2a4:	0300f04f 	.word	0x0300f04f
    c2a8:	e00f617b 	.word	0xe00f617b
    c2ac:	0301f04f 	.word	0x0301f04f
    c2b0:	e00b617b 	.word	0xe00b617b
    c2b4:	0300f04f 	.word	0x0300f04f
    c2b8:	e007617b 	.word	0xe007617b
    c2bc:	0301f04f 	.word	0x0301f04f
    c2c0:	e003617b 	.word	0xe003617b
    c2c4:	0301f04f 	.word	0x0301f04f
    c2c8:	bf00617b 	.word	0xbf00617b
    c2cc:	4618697b 	.word	0x4618697b
    c2d0:	071cf107 	.word	0x071cf107
    c2d4:	bc8046bd 	.word	0xbc8046bd
    c2d8:	bf004770 	.word	0xbf004770

0000c2dc <I2C_Read>:
    c2dc:	b085b480 	.word	0xb085b480
    c2e0:	6078af00 	.word	0x6078af00
    c2e4:	f44f6039 	.word	0xf44f6039
    c2e8:	f2c44340 	.word	0xf2c44340
    c2ec:	60fb0305 	.word	0x60fb0305
    c2f0:	2b00687b 	.word	0x2b00687b
    c2f4:	68fbd004 	.word	0x68fbd004
    c2f8:	0204f04f 	.word	0x0204f04f
    c2fc:	e003619a 	.word	0xe003619a
    c300:	f04f68fb 	.word	0xf04f68fb
    c304:	601a0204 	.word	0x601a0204
    c308:	f04f68fb 	.word	0xf04f68fb
    c30c:	619a0208 	.word	0x619a0208
    c310:	68fbbf00 	.word	0x68fbbf00
    c314:	f003681b 	.word	0xf003681b
    c318:	2b000308 	.word	0x2b000308
    c31c:	68fbd0f9 	.word	0x68fbd0f9
    c320:	b2da689b 	.word	0xb2da689b
    c324:	701a683b 	.word	0x701a683b
    c328:	0300f04f 	.word	0x0300f04f
    c32c:	f1074618 	.word	0xf1074618
    c330:	46bd0714 	.word	0x46bd0714
    c334:	4770bc80 	.word	0x4770bc80

0000c338 <I2C_Stop>:
    c338:	b083b480 	.word	0xb083b480
    c33c:	f44faf00 	.word	0xf44faf00
    c340:	f2c44340 	.word	0xf2c44340
    c344:	607b0305 	.word	0x607b0305
    c348:	f04f687b 	.word	0xf04f687b
    c34c:	619a0220 	.word	0x619a0220
    c350:	f04f687b 	.word	0xf04f687b
    c354:	601a0210 	.word	0x601a0210
    c358:	f04f687b 	.word	0xf04f687b
    c35c:	619a0208 	.word	0x619a0208
    c360:	687bbf00 	.word	0x687bbf00
    c364:	f003681b 	.word	0xf003681b
    c368:	2b000310 	.word	0x2b000310
    c36c:	f640d1f9 	.word	0xf640d1f9
    c370:	f2c14328 	.word	0xf2c14328
    c374:	f04f0300 	.word	0xf04f0300
    c378:	701a0200 	.word	0x701a0200
    c37c:	0300f04f 	.word	0x0300f04f
    c380:	f1074618 	.word	0xf1074618
    c384:	46bd070c 	.word	0x46bd070c
    c388:	4770bc80 	.word	0x4770bc80

0000c38c <SystemCoreClockUpdate>:
    c38c:	b085b480 	.word	0xb085b480
    c390:	f44faf00 	.word	0xf44faf00
    c394:	f2c44340 	.word	0xf2c44340
    c398:	f8d3030f 	.word	0xf8d3030f
    c39c:	f4033104 	.word	0xf4033104
    c3a0:	2b007380 	.word	0x2b007380
    c3a4:	80d8f040 	.word	0x80d8f040
    c3a8:	4340f44f 	.word	0x4340f44f
    c3ac:	030ff2c4 	.word	0x030ff2c4
    c3b0:	310cf8d3 	.word	0x310cf8d3
    c3b4:	0301f003 	.word	0x0301f003
    c3b8:	d1562b00 	.word	0xd1562b00
    c3bc:	4340f44f 	.word	0x4340f44f
    c3c0:	030ff2c4 	.word	0x030ff2c4
    c3c4:	3104f8d3 	.word	0x3104f8d3
    c3c8:	031ff003 	.word	0x031ff003
    c3cc:	d00e2b00 	.word	0xd00e2b00
    c3d0:	4340f44f 	.word	0x4340f44f
    c3d4:	030ff2c4 	.word	0x030ff2c4
    c3d8:	3104f8d3 	.word	0x3104f8d3
    c3dc:	021ff003 	.word	0x021ff003
    c3e0:	53d8f44f 	.word	0x53d8f44f
    c3e4:	03b7f2c0 	.word	0x03b7f2c0
    c3e8:	f2f2fbb3 	.word	0xf2f2fbb3
    c3ec:	f04fe001 	.word	0xf04fe001
    c3f0:	f2400200 	.word	0xf2400200
    c3f4:	f2c10314 	.word	0xf2c10314
    c3f8:	601a0300 	.word	0x601a0300
    c3fc:	4340f44f 	.word	0x4340f44f
    c400:	030ff2c4 	.word	0x030ff2c4
    c404:	31a8f8d3 	.word	0x31a8f8d3
    c408:	031ff003 	.word	0x031ff003
    c40c:	d00e2b00 	.word	0xd00e2b00
    c410:	4340f44f 	.word	0x4340f44f
    c414:	030ff2c4 	.word	0x030ff2c4
    c418:	31a8f8d3 	.word	0x31a8f8d3
    c41c:	021ff003 	.word	0x021ff003
    c420:	53d8f44f 	.word	0x53d8f44f
    c424:	03b7f2c0 	.word	0x03b7f2c0
    c428:	f2f2fbb3 	.word	0xf2f2fbb3
    c42c:	f04fe001 	.word	0xf04fe001
    c430:	f2400200 	.word	0xf2400200
    c434:	f2c10318 	.word	0xf2c10318
    c438:	601a0300 	.word	0x601a0300
    c43c:	0314f240 	.word	0x0314f240
    c440:	0300f2c1 	.word	0x0300f2c1
    c444:	f44f681a 	.word	0xf44f681a
    c448:	f2c44340 	.word	0xf2c44340
    c44c:	f8d3030f 	.word	0xf8d3030f
    c450:	f0033100 	.word	0xf0033100
    c454:	f1030301 	.word	0xf1030301
    c458:	fbb20301 	.word	0xfbb20301
    c45c:	f240f2f3 	.word	0xf240f2f3
    c460:	f2c1031c 	.word	0xf2c1031c
    c464:	601a0300 	.word	0x601a0300
    c468:	f44fe18b 	.word	0xf44fe18b
    c46c:	f2c44340 	.word	0xf2c44340
    c470:	f8d3030f 	.word	0xf8d3030f
    c474:	f00331a0 	.word	0xf00331a0
    c478:	2b000340 	.word	0x2b000340
    c47c:	f240d115 	.word	0xf240d115
    c480:	f2c10314 	.word	0xf2c10314
    c484:	f04f0300 	.word	0xf04f0300
    c488:	601a0200 	.word	0x601a0200
    c48c:	0318f240 	.word	0x0318f240
    c490:	0300f2c1 	.word	0x0300f2c1
    c494:	0200f04f 	.word	0x0200f04f
    c498:	f240601a 	.word	0xf240601a
    c49c:	f2c1031c 	.word	0xf2c1031c
    c4a0:	f04f0300 	.word	0xf04f0300
    c4a4:	601a0200 	.word	0x601a0200
    c4a8:	f44fe16b 	.word	0xf44fe16b
    c4ac:	f2c44340 	.word	0xf2c44340
    c4b0:	f8d3030f 	.word	0xf8d3030f
    c4b4:	f0033104 	.word	0xf0033104
    c4b8:	2b00031f 	.word	0x2b00031f
    c4bc:	f44fd00e 	.word	0xf44fd00e
    c4c0:	f2c44340 	.word	0xf2c44340
    c4c4:	f8d3030f 	.word	0xf8d3030f
    c4c8:	f0033104 	.word	0xf0033104
    c4cc:	f44f021f 	.word	0xf44f021f
    c4d0:	f2c053d8 	.word	0xf2c053d8
    c4d4:	fbb303b7 	.word	0xfbb303b7
    c4d8:	e001f2f2 	.word	0xe001f2f2
    c4dc:	0200f04f 	.word	0x0200f04f
    c4e0:	0314f240 	.word	0x0314f240
    c4e4:	0300f2c1 	.word	0x0300f2c1
    c4e8:	f44f601a 	.word	0xf44f601a
    c4ec:	f2c44340 	.word	0xf2c44340
    c4f0:	f8d3030f 	.word	0xf8d3030f
    c4f4:	f00331a8 	.word	0xf00331a8
    c4f8:	2b00031f 	.word	0x2b00031f
    c4fc:	f44fd00e 	.word	0xf44fd00e
    c500:	f2c44340 	.word	0xf2c44340
    c504:	f8d3030f 	.word	0xf8d3030f
    c508:	f00331a8 	.word	0xf00331a8
    c50c:	f44f021f 	.word	0xf44f021f
    c510:	f2c053d8 	.word	0xf2c053d8
    c514:	fbb303b7 	.word	0xfbb303b7
    c518:	e001f2f2 	.word	0xe001f2f2
    c51c:	0200f04f 	.word	0x0200f04f
    c520:	0318f240 	.word	0x0318f240
    c524:	0300f2c1 	.word	0x0300f2c1
    c528:	f240601a 	.word	0xf240601a
    c52c:	f2c10314 	.word	0xf2c10314
    c530:	681a0300 	.word	0x681a0300
    c534:	4340f44f 	.word	0x4340f44f
    c538:	030ff2c4 	.word	0x030ff2c4
    c53c:	3100f8d3 	.word	0x3100f8d3
    c540:	0301f003 	.word	0x0301f003
    c544:	0301f103 	.word	0x0301f103
    c548:	f2f3fbb2 	.word	0xf2f3fbb2
    c54c:	031cf240 	.word	0x031cf240
    c550:	0300f2c1 	.word	0x0300f2c1
    c554:	e114601a 	.word	0xe114601a
    c558:	4340f44f 	.word	0x4340f44f
    c55c:	030ff2c4 	.word	0x030ff2c4
    c560:	3088f8d3 	.word	0x3088f8d3
    c564:	7380f403 	.word	0x7380f403
    c568:	d1152b00 	.word	0xd1152b00
    c56c:	0314f240 	.word	0x0314f240
    c570:	0300f2c1 	.word	0x0300f2c1
    c574:	0200f04f 	.word	0x0200f04f
    c578:	f240601a 	.word	0xf240601a
    c57c:	f2c10318 	.word	0xf2c10318
    c580:	f04f0300 	.word	0xf04f0300
    c584:	601a0200 	.word	0x601a0200
    c588:	031cf240 	.word	0x031cf240
    c58c:	0300f2c1 	.word	0x0300f2c1
    c590:	0200f04f 	.word	0x0200f04f
    c594:	e0f4601a 	.word	0xe0f4601a
    c598:	4340f44f 	.word	0x4340f44f
    c59c:	030ff2c4 	.word	0x030ff2c4
    c5a0:	310cf8d3 	.word	0x310cf8d3
    c5a4:	0301f003 	.word	0x0301f003
    c5a8:	d1652b00 	.word	0xd1652b00
    c5ac:	4340f44f 	.word	0x4340f44f
    c5b0:	030ff2c4 	.word	0x030ff2c4
    c5b4:	3088f8d3 	.word	0x3088f8d3
    c5b8:	f003b2db 	.word	0xf003b2db
    c5bc:	b2db031f 	.word	0xb2db031f
    c5c0:	0301f103 	.word	0x0301f103
    c5c4:	f44f73fb 	.word	0xf44f73fb
    c5c8:	f2c44340 	.word	0xf2c44340
    c5cc:	f8d3030f 	.word	0xf8d3030f
    c5d0:	b2db3104 	.word	0xb2db3104
    c5d4:	031ff003 	.word	0x031ff003
    c5d8:	f44f73bb 	.word	0xf44f73bb
    c5dc:	f2c44340 	.word	0xf2c44340
    c5e0:	f8d3030f 	.word	0xf8d3030f
    c5e4:	b2db31a8 	.word	0xb2db31a8
    c5e8:	031ff003 	.word	0x031ff003
    c5ec:	f44f737b 	.word	0xf44f737b
    c5f0:	f2c44340 	.word	0xf2c44340
    c5f4:	f8d3030f 	.word	0xf8d3030f
    c5f8:	b2db3100 	.word	0xb2db3100
    c5fc:	0301f003 	.word	0x0301f003
    c600:	f103b2db 	.word	0xf103b2db
    c604:	733b0301 	.word	0x733b0301
    c608:	2b007bbb 	.word	0x2b007bbb
    c60c:	7bfad00a 	.word	0x7bfad00a
    c610:	53d8f44f 	.word	0x53d8f44f
    c614:	03b7f2c0 	.word	0x03b7f2c0
    c618:	f202fb03 	.word	0xf202fb03
    c61c:	fbb27bbb 	.word	0xfbb27bbb
    c620:	e001f2f3 	.word	0xe001f2f3
    c624:	0200f04f 	.word	0x0200f04f
    c628:	0314f240 	.word	0x0314f240
    c62c:	0300f2c1 	.word	0x0300f2c1
    c630:	7b7b601a 	.word	0x7b7b601a
    c634:	d00a2b00 	.word	0xd00a2b00
    c638:	f44f7bfa 	.word	0xf44f7bfa
    c63c:	f2c053d8 	.word	0xf2c053d8
    c640:	fb0303b7 	.word	0xfb0303b7
    c644:	7b7bf202 	.word	0x7b7bf202
    c648:	f2f3fbb2 	.word	0xf2f3fbb2
    c64c:	f04fe001 	.word	0xf04fe001
    c650:	f2400200 	.word	0xf2400200
    c654:	f2c10318 	.word	0xf2c10318
    c658:	601a0300 	.word	0x601a0300
    c65c:	0314f240 	.word	0x0314f240
    c660:	0300f2c1 	.word	0x0300f2c1
    c664:	7b3b681a 	.word	0x7b3b681a
    c668:	f2f3fbb2 	.word	0xf2f3fbb2
    c66c:	031cf240 	.word	0x031cf240
    c670:	0300f2c1 	.word	0x0300f2c1
    c674:	e084601a 	.word	0xe084601a
    c678:	4340f44f 	.word	0x4340f44f
    c67c:	030ff2c4 	.word	0x030ff2c4
    c680:	31a0f8d3 	.word	0x31a0f8d3
    c684:	0340f003 	.word	0x0340f003
    c688:	d1152b00 	.word	0xd1152b00
    c68c:	0314f240 	.word	0x0314f240
    c690:	0300f2c1 	.word	0x0300f2c1
    c694:	0200f04f 	.word	0x0200f04f
    c698:	f240601a 	.word	0xf240601a
    c69c:	f2c10318 	.word	0xf2c10318
    c6a0:	f04f0300 	.word	0xf04f0300
    c6a4:	601a0200 	.word	0x601a0200
    c6a8:	031cf240 	.word	0x031cf240
    c6ac:	0300f2c1 	.word	0x0300f2c1
    c6b0:	0200f04f 	.word	0x0200f04f
    c6b4:	e064601a 	.word	0xe064601a
    c6b8:	4340f44f 	.word	0x4340f44f
    c6bc:	030ff2c4 	.word	0x030ff2c4
    c6c0:	3088f8d3 	.word	0x3088f8d3
    c6c4:	f003b2db 	.word	0xf003b2db
    c6c8:	b2db031f 	.word	0xb2db031f
    c6cc:	0301f103 	.word	0x0301f103
    c6d0:	f44f72fb 	.word	0xf44f72fb
    c6d4:	f2c44340 	.word	0xf2c44340
    c6d8:	f8d3030f 	.word	0xf8d3030f
    c6dc:	b2db3104 	.word	0xb2db3104
    c6e0:	031ff003 	.word	0x031ff003
    c6e4:	f44f72bb 	.word	0xf44f72bb
    c6e8:	f2c44340 	.word	0xf2c44340
    c6ec:	f8d3030f 	.word	0xf8d3030f
    c6f0:	b2db31a8 	.word	0xb2db31a8
    c6f4:	031ff003 	.word	0x031ff003
    c6f8:	f44f727b 	.word	0xf44f727b
    c6fc:	f2c44340 	.word	0xf2c44340
    c700:	f8d3030f 	.word	0xf8d3030f
    c704:	b2db3100 	.word	0xb2db3100
    c708:	0301f003 	.word	0x0301f003
    c70c:	f103b2db 	.word	0xf103b2db
    c710:	723b0301 	.word	0x723b0301
    c714:	2b007abb 	.word	0x2b007abb
    c718:	7afad00a 	.word	0x7afad00a
    c71c:	53d8f44f 	.word	0x53d8f44f
    c720:	03b7f2c0 	.word	0x03b7f2c0
    c724:	f202fb03 	.word	0xf202fb03
    c728:	fbb27abb 	.word	0xfbb27abb
    c72c:	e001f2f3 	.word	0xe001f2f3
    c730:	0200f04f 	.word	0x0200f04f
    c734:	0314f240 	.word	0x0314f240
    c738:	0300f2c1 	.word	0x0300f2c1
    c73c:	7a7b601a 	.word	0x7a7b601a
    c740:	d00a2b00 	.word	0xd00a2b00
    c744:	f44f7afa 	.word	0xf44f7afa
    c748:	f2c053d8 	.word	0xf2c053d8
    c74c:	fb0303b7 	.word	0xfb0303b7
    c750:	7a7bf202 	.word	0x7a7bf202
    c754:	f2f3fbb2 	.word	0xf2f3fbb2
    c758:	f04fe001 	.word	0xf04fe001
    c75c:	f2400200 	.word	0xf2400200
    c760:	f2c10318 	.word	0xf2c10318
    c764:	601a0300 	.word	0x601a0300
    c768:	0314f240 	.word	0x0314f240
    c76c:	0300f2c1 	.word	0x0300f2c1
    c770:	7a3b681a 	.word	0x7a3b681a
    c774:	f2f3fbb2 	.word	0xf2f3fbb2
    c778:	031cf240 	.word	0x031cf240
    c77c:	0300f2c1 	.word	0x0300f2c1
    c780:	f44f601a 	.word	0xf44f601a
    c784:	f2c44340 	.word	0xf2c44340
    c788:	f8d3030f 	.word	0xf8d3030f
    c78c:	f4033108 	.word	0xf4033108
    c790:	2b007380 	.word	0x2b007380
    c794:	f44fd05f 	.word	0xf44fd05f
    c798:	f2c44340 	.word	0xf2c44340
    c79c:	f8d3030f 	.word	0xf8d3030f
    c7a0:	f0033108 	.word	0xf0033108
    c7a4:	2b04031f 	.word	0x2b04031f
    c7a8:	2b06d00b 	.word	0x2b06d00b
    c7ac:	2b00d009 	.word	0x2b00d009
    c7b0:	f240d149 	.word	0xf240d149
    c7b4:	f2c10320 	.word	0xf2c10320
    c7b8:	f04f0300 	.word	0xf04f0300
    c7bc:	601a0200 	.word	0x601a0200
    c7c0:	f44fe090 	.word	0xf44fe090
    c7c4:	f2c44340 	.word	0xf2c44340
    c7c8:	f8d3030f 	.word	0xf8d3030f
    c7cc:	b2db3088 	.word	0xb2db3088
    c7d0:	031ff003 	.word	0x031ff003
    c7d4:	f103b2db 	.word	0xf103b2db
    c7d8:	71fb0301 	.word	0x71fb0301
    c7dc:	4340f44f 	.word	0x4340f44f
    c7e0:	030ff2c4 	.word	0x030ff2c4
    c7e4:	3108f8d3 	.word	0x3108f8d3
    c7e8:	f003b2db 	.word	0xf003b2db
    c7ec:	71bb031f 	.word	0x71bb031f
    c7f0:	4340f44f 	.word	0x4340f44f
    c7f4:	030ff2c4 	.word	0x030ff2c4
    c7f8:	310cf8d3 	.word	0x310cf8d3
    c7fc:	0301f003 	.word	0x0301f003
    c800:	d00f2b00 	.word	0xd00f2b00
    c804:	f44f79fa 	.word	0xf44f79fa
    c808:	f2c053d8 	.word	0xf2c053d8
    c80c:	fb0303b7 	.word	0xfb0303b7
    c810:	79bbf202 	.word	0x79bbf202
    c814:	f2f3fbb2 	.word	0xf2f3fbb2
    c818:	0320f240 	.word	0x0320f240
    c81c:	0300f2c1 	.word	0x0300f2c1
    c820:	e05f601a 	.word	0xe05f601a
    c824:	f44f79fa 	.word	0xf44f79fa
    c828:	f2c053d8 	.word	0xf2c053d8
    c82c:	fb0303b7 	.word	0xfb0303b7
    c830:	79bbf202 	.word	0x79bbf202
    c834:	f2f3fbb2 	.word	0xf2f3fbb2
    c838:	0320f240 	.word	0x0320f240
    c83c:	0300f2c1 	.word	0x0300f2c1
    c840:	bf00601a 	.word	0xbf00601a
    c844:	f240e04e 	.word	0xf240e04e
    c848:	f2c10320 	.word	0xf2c10320
    c84c:	f04f0300 	.word	0xf04f0300
    c850:	601a0200 	.word	0x601a0200
    c854:	f44fe046 	.word	0xf44fe046
    c858:	f2c44340 	.word	0xf2c44340
    c85c:	f8d3030f 	.word	0xf8d3030f
    c860:	f4033108 	.word	0xf4033108
    c864:	2b007300 	.word	0x2b007300
    c868:	f44fd035 	.word	0xf44fd035
    c86c:	f2c44340 	.word	0xf2c44340
    c870:	f8d3030f 	.word	0xf8d3030f
    c874:	f003310c 	.word	0xf003310c
    c878:	2b000301 	.word	0x2b000301
    c87c:	f44fd015 	.word	0xf44fd015
    c880:	f2c44340 	.word	0xf2c44340
    c884:	f8d3030f 	.word	0xf8d3030f
    c888:	f00330a8 	.word	0xf00330a8
    c88c:	f103031f 	.word	0xf103031f
    c890:	f44f0201 	.word	0xf44f0201
    c894:	f2c053d8 	.word	0xf2c053d8
    c898:	fb0303b7 	.word	0xfb0303b7
    c89c:	f240f202 	.word	0xf240f202
    c8a0:	f2c10320 	.word	0xf2c10320
    c8a4:	601a0300 	.word	0x601a0300
    c8a8:	f44fe01c 	.word	0xf44fe01c
    c8ac:	f2c44340 	.word	0xf2c44340
    c8b0:	f8d3030f 	.word	0xf8d3030f
    c8b4:	f0033088 	.word	0xf0033088
    c8b8:	f103031f 	.word	0xf103031f
    c8bc:	f44f0201 	.word	0xf44f0201
    c8c0:	f2c053d8 	.word	0xf2c053d8
    c8c4:	fb0303b7 	.word	0xfb0303b7
    c8c8:	f240f202 	.word	0xf240f202
    c8cc:	f2c10320 	.word	0xf2c10320
    c8d0:	601a0300 	.word	0x601a0300
    c8d4:	f240e006 	.word	0xf240e006
    c8d8:	f2c10320 	.word	0xf2c10320
    c8dc:	f04f0300 	.word	0xf04f0300
    c8e0:	601a0200 	.word	0x601a0200
    c8e4:	0714f107 	.word	0x0714f107
    c8e8:	bc8046bd 	.word	0xbc8046bd
    c8ec:	bf004770 	.word	0xbf004770

0000c8f0 <fpu_init>:
    c8f0:	b089b480 	.word	0xb089b480
    c8f4:	f64eaf00 	.word	0xf64eaf00
    c8f8:	f2ce5388 	.word	0xf2ce5388
    c8fc:	61fb0300 	.word	0x61fb0300
    c900:	7340f64e 	.word	0x7340f64e
    c904:	0300f2ce 	.word	0x0300f2ce
    c908:	f64e61bb 	.word	0xf64e61bb
    c90c:	f2ce7344 	.word	0xf2ce7344
    c910:	617b0300 	.word	0x617b0300
    c914:	0300f04f 	.word	0x0300f04f
    c918:	69bb74fb 	.word	0x69bb74fb
    c91c:	60bb681b 	.word	0x60bb681b
    c920:	681b697b 	.word	0x681b697b
    c924:	68ba607b 	.word	0x68ba607b
    c928:	0321f04f 	.word	0x0321f04f
    c92c:	0311f2c1 	.word	0x0311f2c1
    c930:	d109429a 	.word	0xd109429a
    c934:	f04f687a 	.word	0xf04f687a
    c938:	f2c10311 	.word	0xf2c10311
    c93c:	429a1300 	.word	0x429a1300
    c940:	f04fd102 	.word	0xf04fd102
    c944:	e0010301 	.word	0xe0010301
    c948:	0300f04f 	.word	0x0300f04f
    c94c:	7cfb74fb 	.word	0x7cfb74fb
    c950:	d0092b00 	.word	0xd0092b00
    c954:	681b69fb 	.word	0x681b69fb
    c958:	68fb60fb 	.word	0x68fb60fb
    c95c:	0370f443 	.word	0x0370f443
    c960:	68fa60fb 	.word	0x68fa60fb
    c964:	601a69fb 	.word	0x601a69fb
    c968:	0724f107 	.word	0x0724f107
    c96c:	bc8046bd 	.word	0xbc8046bd
    c970:	bf004770 	.word	0xbf004770

0000c974 <SystemInit>:
    c974:	af00b580 	.word	0xaf00b580
    c978:	ffbaf7ff 	.word	0xffbaf7ff
    c97c:	4340f44f 	.word	0x4340f44f
    c980:	030ff2c4 	.word	0x030ff2c4
    c984:	0221f04f 	.word	0x0221f04f
    c988:	21a0f8c3 	.word	0x21a0f8c3
    c98c:	f44fbf00 	.word	0xf44fbf00
    c990:	f2c44340 	.word	0xf2c44340
    c994:	f8d3030f 	.word	0xf8d3030f
    c998:	f00331a0 	.word	0xf00331a0
    c99c:	2b000340 	.word	0x2b000340
    c9a0:	f44fd0f5 	.word	0xf44fd0f5
    c9a4:	f2c44340 	.word	0xf2c44340
    c9a8:	f04f030f 	.word	0xf04f030f
    c9ac:	f8c30201 	.word	0xf8c30201
    c9b0:	f44f210c 	.word	0xf44f210c
    c9b4:	f2c44340 	.word	0xf2c44340
    c9b8:	f04f030f 	.word	0xf04f030f
    c9bc:	f8c30209 	.word	0xf8c30209
    c9c0:	f44f2084 	.word	0xf44f2084
    c9c4:	f2c44340 	.word	0xf2c44340
    c9c8:	f04f030f 	.word	0xf04f030f
    c9cc:	f8c30201 	.word	0xf8c30201
    c9d0:	f44f2080 	.word	0xf44f2080
    c9d4:	f2c44340 	.word	0xf2c44340
    c9d8:	f04f030f 	.word	0xf04f030f
    c9dc:	f8c302aa 	.word	0xf8c302aa
    c9e0:	f44f208c 	.word	0xf44f208c
    c9e4:	f2c44340 	.word	0xf2c44340
    c9e8:	f04f030f 	.word	0xf04f030f
    c9ec:	f8c30255 	.word	0xf8c30255
    c9f0:	bf00208c 	.word	0xbf00208c
    c9f4:	4340f44f 	.word	0x4340f44f
    c9f8:	030ff2c4 	.word	0x030ff2c4
    c9fc:	3088f8d3 	.word	0x3088f8d3
    ca00:	6380f403 	.word	0x6380f403
    ca04:	d0f52b00 	.word	0xd0f52b00
    ca08:	4340f44f 	.word	0x4340f44f
    ca0c:	030ff2c4 	.word	0x030ff2c4
    ca10:	0207f04f 	.word	0x0207f04f
    ca14:	20a4f8c3 	.word	0x20a4f8c3
    ca18:	4340f44f 	.word	0x4340f44f
    ca1c:	030ff2c4 	.word	0x030ff2c4
    ca20:	0201f04f 	.word	0x0201f04f
    ca24:	20a0f8c3 	.word	0x20a0f8c3
    ca28:	4340f44f 	.word	0x4340f44f
    ca2c:	030ff2c4 	.word	0x030ff2c4
    ca30:	02aaf04f 	.word	0x02aaf04f
    ca34:	20acf8c3 	.word	0x20acf8c3
    ca38:	4340f44f 	.word	0x4340f44f
    ca3c:	030ff2c4 	.word	0x030ff2c4
    ca40:	0255f04f 	.word	0x0255f04f
    ca44:	20acf8c3 	.word	0x20acf8c3
    ca48:	f44fbf00 	.word	0xf44fbf00
    ca4c:	f2c44340 	.word	0xf2c44340
    ca50:	f8d3030f 	.word	0xf8d3030f
    ca54:	f40330a8 	.word	0xf40330a8
    ca58:	2b006380 	.word	0x2b006380
    ca5c:	f44fd0f5 	.word	0xf44fd0f5
    ca60:	f2c44340 	.word	0xf2c44340
    ca64:	f240030f 	.word	0xf240030f
    ca68:	f8c31201 	.word	0xf8c31201
    ca6c:	f44f2104 	.word	0xf44f2104
    ca70:	f2c44340 	.word	0xf2c44340
    ca74:	f240030f 	.word	0xf240030f
    ca78:	f8c32201 	.word	0xf8c32201
    ca7c:	f44f2108 	.word	0xf44f2108
    ca80:	f2c44340 	.word	0xf2c44340
    ca84:	f04f030f 	.word	0xf04f030f
    ca88:	f8c30201 	.word	0xf8c30201
    ca8c:	f44f2100 	.word	0xf44f2100
    ca90:	f2c44340 	.word	0xf2c44340
    ca94:	f244030f 	.word	0xf244030f
    ca98:	f2c0624b 	.word	0xf2c0624b
    ca9c:	f8c30230 	.word	0xf8c30230
    caa0:	f44f21b4 	.word	0xf44f21b4
    caa4:	f2c44340 	.word	0xf2c44340
    caa8:	f04f030f 	.word	0xf04f030f
    caac:	f8c30201 	.word	0xf8c30201
    cab0:	f44f21a8 	.word	0xf44f21a8
    cab4:	f2c44340 	.word	0xf2c44340
    cab8:	f24a030f 	.word	0xf24a030f
    cabc:	f2c0629e 	.word	0xf2c0629e
    cac0:	f8c372f8 	.word	0xf8c372f8
    cac4:	f44f20c4 	.word	0xf44f20c4
    cac8:	f2c44340 	.word	0xf2c44340
    cacc:	f04f030f 	.word	0xf04f030f
    cad0:	f8c30200 	.word	0xf8c30200
    cad4:	f44f21c8 	.word	0xf44f21c8
    cad8:	f2c44340 	.word	0xf2c44340
    cadc:	f44f030f 	.word	0xf44f030f
    cae0:	f2c44240 	.word	0xf2c44240
    cae4:	f8d2020f 	.word	0xf8d2020f
    cae8:	f04221b0 	.word	0xf04221b0
    caec:	f8c30203 	.word	0xf8c30203
    caf0:	f44f21b0 	.word	0xf44f21b0
    caf4:	f2c44340 	.word	0xf2c44340
    caf8:	f245030f 	.word	0xf245030f
    cafc:	601a023a 	.word	0x601a023a
    cb00:	436df44f 	.word	0x436df44f
    cb04:	0300f2ce 	.word	0x0300f2ce
    cb08:	5200f44f 	.word	0x5200f44f
    cb0c:	f7ff609a 	.word	0xf7ff609a
    cb10:	bd80fc3d 	.word	0xbd80fc3d

0000cb14 <memcmp>:
    cb14:	2a03      	cmp	r2, #3
    cb16:	b470      	push	{r4, r5, r6}
    cb18:	d922      	bls.n	cb60 <memcmp+0x4c>
    cb1a:	ea41 0300 	orr.w	r3, r1, r0
    cb1e:	079b      	lsls	r3, r3, #30
    cb20:	d013      	beq.n	cb4a <memcmp+0x36>
    cb22:	7805      	ldrb	r5, [r0, #0]
    cb24:	3a01      	subs	r2, #1
    cb26:	780c      	ldrb	r4, [r1, #0]
    cb28:	2300      	movs	r3, #0
    cb2a:	42a5      	cmp	r5, r4
    cb2c:	d006      	beq.n	cb3c <memcmp+0x28>
    cb2e:	e01b      	b.n	cb68 <memcmp+0x54>
    cb30:	f810 5f01 	ldrb.w	r5, [r0, #1]!
    cb34:	f811 4f01 	ldrb.w	r4, [r1, #1]!
    cb38:	42a5      	cmp	r5, r4
    cb3a:	d115      	bne.n	cb68 <memcmp+0x54>
    cb3c:	4293      	cmp	r3, r2
    cb3e:	f103 0301 	add.w	r3, r3, #1
    cb42:	d1f5      	bne.n	cb30 <memcmp+0x1c>
    cb44:	2000      	movs	r0, #0
    cb46:	bc70      	pop	{r4, r5, r6}
    cb48:	4770      	bx	lr
    cb4a:	460c      	mov	r4, r1
    cb4c:	4603      	mov	r3, r0
    cb4e:	3104      	adds	r1, #4
    cb50:	3004      	adds	r0, #4
    cb52:	681e      	ldr	r6, [r3, #0]
    cb54:	6825      	ldr	r5, [r4, #0]
    cb56:	42ae      	cmp	r6, r5
    cb58:	d108      	bne.n	cb6c <memcmp+0x58>
    cb5a:	3a04      	subs	r2, #4
    cb5c:	2a03      	cmp	r2, #3
    cb5e:	d8f4      	bhi.n	cb4a <memcmp+0x36>
    cb60:	2a00      	cmp	r2, #0
    cb62:	d1de      	bne.n	cb22 <memcmp+0xe>
    cb64:	4610      	mov	r0, r2
    cb66:	e7ee      	b.n	cb46 <memcmp+0x32>
    cb68:	1b28      	subs	r0, r5, r4
    cb6a:	e7ec      	b.n	cb46 <memcmp+0x32>
    cb6c:	4621      	mov	r1, r4
    cb6e:	4618      	mov	r0, r3
    cb70:	2a00      	cmp	r2, #0
    cb72:	d1d6      	bne.n	cb22 <memcmp+0xe>
    cb74:	e7f6      	b.n	cb64 <memcmp+0x50>
    cb76:	bf00      	nop

0000cb78 <memcpy>:
    cb78:	2a0f      	cmp	r2, #15
    cb7a:	b4f0      	push	{r4, r5, r6, r7}
    cb7c:	d940      	bls.n	cc00 <memcpy+0x88>
    cb7e:	ea41 0300 	orr.w	r3, r1, r0
    cb82:	079b      	lsls	r3, r3, #30
    cb84:	d13e      	bne.n	cc04 <memcpy+0x8c>
    cb86:	460c      	mov	r4, r1
    cb88:	4603      	mov	r3, r0
    cb8a:	4615      	mov	r5, r2
    cb8c:	6826      	ldr	r6, [r4, #0]
    cb8e:	3d10      	subs	r5, #16
    cb90:	601e      	str	r6, [r3, #0]
    cb92:	6866      	ldr	r6, [r4, #4]
    cb94:	605e      	str	r6, [r3, #4]
    cb96:	68a6      	ldr	r6, [r4, #8]
    cb98:	609e      	str	r6, [r3, #8]
    cb9a:	68e6      	ldr	r6, [r4, #12]
    cb9c:	3410      	adds	r4, #16
    cb9e:	60de      	str	r6, [r3, #12]
    cba0:	3310      	adds	r3, #16
    cba2:	2d0f      	cmp	r5, #15
    cba4:	d8f2      	bhi.n	cb8c <memcpy+0x14>
    cba6:	f1a2 0510 	sub.w	r5, r2, #16
    cbaa:	f002 040f 	and.w	r4, r2, #15
    cbae:	f025 050f 	bic.w	r5, r5, #15
    cbb2:	3510      	adds	r5, #16
    cbb4:	2c03      	cmp	r4, #3
    cbb6:	eb00 0305 	add.w	r3, r0, r5
    cbba:	4429      	add	r1, r5
    cbbc:	d924      	bls.n	cc08 <memcpy+0x90>
    cbbe:	f1a4 0c04 	sub.w	ip, r4, #4
    cbc2:	461d      	mov	r5, r3
    cbc4:	460c      	mov	r4, r1
    cbc6:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
    cbca:	eb01 078c 	add.w	r7, r1, ip, lsl #2
    cbce:	3704      	adds	r7, #4
    cbd0:	f854 6b04 	ldr.w	r6, [r4], #4
    cbd4:	42bc      	cmp	r4, r7
    cbd6:	f845 6b04 	str.w	r6, [r5], #4
    cbda:	d1f9      	bne.n	cbd0 <memcpy+0x58>
    cbdc:	f10c 0401 	add.w	r4, ip, #1
    cbe0:	f002 0203 	and.w	r2, r2, #3
    cbe4:	00a4      	lsls	r4, r4, #2
    cbe6:	1909      	adds	r1, r1, r4
    cbe8:	191b      	adds	r3, r3, r4
    cbea:	b13a      	cbz	r2, cbfc <memcpy+0x84>
    cbec:	3901      	subs	r1, #1
    cbee:	189a      	adds	r2, r3, r2
    cbf0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
    cbf4:	f803 4b01 	strb.w	r4, [r3], #1
    cbf8:	4293      	cmp	r3, r2
    cbfa:	d1f9      	bne.n	cbf0 <memcpy+0x78>
    cbfc:	bcf0      	pop	{r4, r5, r6, r7}
    cbfe:	4770      	bx	lr
    cc00:	4603      	mov	r3, r0
    cc02:	e7f2      	b.n	cbea <memcpy+0x72>
    cc04:	4603      	mov	r3, r0
    cc06:	e7f1      	b.n	cbec <memcpy+0x74>
    cc08:	4622      	mov	r2, r4
    cc0a:	e7ee      	b.n	cbea <memcpy+0x72>

0000cc0c <memset>:
    cc0c:	b470      	push	{r4, r5, r6}
    cc0e:	0784      	lsls	r4, r0, #30
    cc10:	4603      	mov	r3, r0
    cc12:	d044      	beq.n	cc9e <memset+0x92>
    cc14:	1e54      	subs	r4, r2, #1
    cc16:	2a00      	cmp	r2, #0
    cc18:	d03f      	beq.n	cc9a <memset+0x8e>
    cc1a:	b2ce      	uxtb	r6, r1
    cc1c:	e002      	b.n	cc24 <memset+0x18>
    cc1e:	2c00      	cmp	r4, #0
    cc20:	d03b      	beq.n	cc9a <memset+0x8e>
    cc22:	4614      	mov	r4, r2
    cc24:	f803 6b01 	strb.w	r6, [r3], #1
    cc28:	f013 0f03 	tst.w	r3, #3
    cc2c:	461d      	mov	r5, r3
    cc2e:	f104 32ff 	add.w	r2, r4, #4294967295
    cc32:	d1f4      	bne.n	cc1e <memset+0x12>
    cc34:	2c03      	cmp	r4, #3
    cc36:	d929      	bls.n	cc8c <memset+0x80>
    cc38:	b2ca      	uxtb	r2, r1
    cc3a:	2c0f      	cmp	r4, #15
    cc3c:	bf84      	itt	hi
    cc3e:	462b      	movhi	r3, r5
    cc40:	4626      	movhi	r6, r4
    cc42:	ea42 2202 	orr.w	r2, r2, r2, lsl #8
    cc46:	ea42 4202 	orr.w	r2, r2, r2, lsl #16
    cc4a:	d911      	bls.n	cc70 <memset+0x64>
    cc4c:	3e10      	subs	r6, #16
    cc4e:	601a      	str	r2, [r3, #0]
    cc50:	605a      	str	r2, [r3, #4]
    cc52:	609a      	str	r2, [r3, #8]
    cc54:	60da      	str	r2, [r3, #12]
    cc56:	3310      	adds	r3, #16
    cc58:	2e0f      	cmp	r6, #15
    cc5a:	d8f7      	bhi.n	cc4c <memset+0x40>
    cc5c:	f1a4 0310 	sub.w	r3, r4, #16
    cc60:	f004 040f 	and.w	r4, r4, #15
    cc64:	f023 030f 	bic.w	r3, r3, #15
    cc68:	3310      	adds	r3, #16
    cc6a:	2c03      	cmp	r4, #3
    cc6c:	441d      	add	r5, r3
    cc6e:	d90d      	bls.n	cc8c <memset+0x80>
    cc70:	462e      	mov	r6, r5
    cc72:	4623      	mov	r3, r4
    cc74:	3b04      	subs	r3, #4
    cc76:	f846 2b04 	str.w	r2, [r6], #4
    cc7a:	2b03      	cmp	r3, #3
    cc7c:	d8fa      	bhi.n	cc74 <memset+0x68>
    cc7e:	1f23      	subs	r3, r4, #4
    cc80:	f004 0403 	and.w	r4, r4, #3
    cc84:	f023 0303 	bic.w	r3, r3, #3
    cc88:	3304      	adds	r3, #4
    cc8a:	18ed      	adds	r5, r5, r3
    cc8c:	b12c      	cbz	r4, cc9a <memset+0x8e>
    cc8e:	b2c9      	uxtb	r1, r1
    cc90:	192c      	adds	r4, r5, r4
    cc92:	f805 1b01 	strb.w	r1, [r5], #1
    cc96:	42a5      	cmp	r5, r4
    cc98:	d1fb      	bne.n	cc92 <memset+0x86>
    cc9a:	bc70      	pop	{r4, r5, r6}
    cc9c:	4770      	bx	lr
    cc9e:	4605      	mov	r5, r0
    cca0:	4614      	mov	r4, r2
    cca2:	e7c7      	b.n	cc34 <memset+0x28>

0000cca4 <modf>:
    cca4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    cca8:	f3c1 590a 	ubfx	r9, r1, #20, #11
    ccac:	f2a9 33ff 	subw	r3, r9, #1023	; 0x3ff
    ccb0:	4604      	mov	r4, r0
    ccb2:	2b13      	cmp	r3, #19
    ccb4:	460d      	mov	r5, r1
    ccb6:	4606      	mov	r6, r0
    ccb8:	460f      	mov	r7, r1
    ccba:	4680      	mov	r8, r0
    ccbc:	dc18      	bgt.n	ccf0 <modf+0x4c>
    ccbe:	2b00      	cmp	r3, #0
    ccc0:	db44      	blt.n	cd4c <modf+0xa8>
    ccc2:	f64f 76ff 	movw	r6, #65535	; 0xffff
    ccc6:	f2c0 060f 	movt	r6, #15
    ccca:	fa46 f303 	asr.w	r3, r6, r3
    ccce:	ea03 0601 	and.w	r6, r3, r1
    ccd2:	ea56 0800 	orrs.w	r8, r6, r0
    ccd6:	d11a      	bne.n	cd0e <modf+0x6a>
    ccd8:	460f      	mov	r7, r1
    ccda:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    ccde:	e9c2 4500 	strd	r4, r5, [r2]
    cce2:	4606      	mov	r6, r0
    cce4:	4644      	mov	r4, r8
    cce6:	460d      	mov	r5, r1
    cce8:	4620      	mov	r0, r4
    ccea:	4629      	mov	r1, r5
    ccec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    ccf0:	2b33      	cmp	r3, #51	; 0x33
    ccf2:	dc18      	bgt.n	cd26 <modf+0x82>
    ccf4:	f04f 33ff 	mov.w	r3, #4294967295
    ccf8:	f2a9 4913 	subw	r9, r9, #1043	; 0x413
    ccfc:	fa23 f909 	lsr.w	r9, r3, r9
    cd00:	ea19 0300 	ands.w	r3, r9, r0
    cd04:	d019      	beq.n	cd3a <modf+0x96>
    cd06:	460d      	mov	r5, r1
    cd08:	ea20 0409 	bic.w	r4, r0, r9
    cd0c:	e002      	b.n	cd14 <modf+0x70>
    cd0e:	ea21 0503 	bic.w	r5, r1, r3
    cd12:	2400      	movs	r4, #0
    cd14:	e9c2 4500 	strd	r4, r5, [r2]
    cd18:	462b      	mov	r3, r5
    cd1a:	4622      	mov	r2, r4
    cd1c:	f002 ffe6 	bl	fcec <__aeabi_dsub>
    cd20:	4604      	mov	r4, r0
    cd22:	460d      	mov	r5, r1
    cd24:	e7e0      	b.n	cce8 <modf+0x44>
    cd26:	4606      	mov	r6, r0
    cd28:	460f      	mov	r7, r1
    cd2a:	2000      	movs	r0, #0
    cd2c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    cd30:	e9c2 4500 	strd	r4, r5, [r2]
    cd34:	4604      	mov	r4, r0
    cd36:	460d      	mov	r5, r1
    cd38:	e7d6      	b.n	cce8 <modf+0x44>
    cd3a:	460f      	mov	r7, r1
    cd3c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    cd40:	e9c2 4500 	strd	r4, r5, [r2]
    cd44:	4606      	mov	r6, r0
    cd46:	461c      	mov	r4, r3
    cd48:	460d      	mov	r5, r1
    cd4a:	e7cd      	b.n	cce8 <modf+0x44>
    cd4c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    cd50:	2000      	movs	r0, #0
    cd52:	e9c2 0100 	strd	r0, r1, [r2]
    cd56:	e7c7      	b.n	cce8 <modf+0x44>

0000cd58 <strncmp>:
    cd58:	b470      	push	{r4, r5, r6}
    cd5a:	2a00      	cmp	r2, #0
    cd5c:	d045      	beq.n	cdea <strncmp+0x92>
    cd5e:	ea41 0300 	orr.w	r3, r1, r0
    cd62:	f013 0303 	ands.w	r3, r3, #3
    cd66:	d129      	bne.n	cdbc <strncmp+0x64>
    cd68:	2a03      	cmp	r2, #3
    cd6a:	d927      	bls.n	cdbc <strncmp+0x64>
    cd6c:	6805      	ldr	r5, [r0, #0]
    cd6e:	680c      	ldr	r4, [r1, #0]
    cd70:	42a5      	cmp	r5, r4
    cd72:	d123      	bne.n	cdbc <strncmp+0x64>
    cd74:	1f14      	subs	r4, r2, #4
    cd76:	d03a      	beq.n	cdee <strncmp+0x96>
    cd78:	f1a5 3201 	sub.w	r2, r5, #16843009	; 0x1010101
    cd7c:	ea22 0505 	bic.w	r5, r2, r5
    cd80:	f015 3f80 	tst.w	r5, #2155905152	; 0x80808080
    cd84:	d00d      	beq.n	cda2 <strncmp+0x4a>
    cd86:	e03a      	b.n	cdfe <strncmp+0xa6>
    cd88:	685b      	ldr	r3, [r3, #4]
    cd8a:	686a      	ldr	r2, [r5, #4]
    cd8c:	f1a3 3501 	sub.w	r5, r3, #16843009	; 0x1010101
    cd90:	4293      	cmp	r3, r2
    cd92:	ea25 0503 	bic.w	r5, r5, r3
    cd96:	d12e      	bne.n	cdf6 <strncmp+0x9e>
    cd98:	3c04      	subs	r4, #4
    cd9a:	d028      	beq.n	cdee <strncmp+0x96>
    cd9c:	f015 3f80 	tst.w	r5, #2155905152	; 0x80808080
    cda0:	d127      	bne.n	cdf2 <strncmp+0x9a>
    cda2:	460d      	mov	r5, r1
    cda4:	4603      	mov	r3, r0
    cda6:	3104      	adds	r1, #4
    cda8:	3004      	adds	r0, #4
    cdaa:	2c03      	cmp	r4, #3
    cdac:	d8ec      	bhi.n	cd88 <strncmp+0x30>
    cdae:	1e66      	subs	r6, r4, #1
    cdb0:	b92c      	cbnz	r4, cdbe <strncmp+0x66>
    cdb2:	791c      	ldrb	r4, [r3, #4]
    cdb4:	792a      	ldrb	r2, [r5, #4]
    cdb6:	1aa0      	subs	r0, r4, r2
    cdb8:	bc70      	pop	{r4, r5, r6}
    cdba:	4770      	bx	lr
    cdbc:	1e56      	subs	r6, r2, #1
    cdbe:	7804      	ldrb	r4, [r0, #0]
    cdc0:	780a      	ldrb	r2, [r1, #0]
    cdc2:	4294      	cmp	r4, r2
    cdc4:	d1f7      	bne.n	cdb6 <strncmp+0x5e>
    cdc6:	b1c6      	cbz	r6, cdfa <strncmp+0xa2>
    cdc8:	b18c      	cbz	r4, cdee <strncmp+0x96>
    cdca:	3601      	adds	r6, #1
    cdcc:	1c8b      	adds	r3, r1, #2
    cdce:	1989      	adds	r1, r1, r6
    cdd0:	e004      	b.n	cddc <strncmp+0x84>
    cdd2:	428b      	cmp	r3, r1
    cdd4:	f103 0301 	add.w	r3, r3, #1
    cdd8:	d00b      	beq.n	cdf2 <strncmp+0x9a>
    cdda:	b144      	cbz	r4, cdee <strncmp+0x96>
    cddc:	f810 4f01 	ldrb.w	r4, [r0, #1]!
    cde0:	f813 2c01 	ldrb.w	r2, [r3, #-1]
    cde4:	4294      	cmp	r4, r2
    cde6:	d0f4      	beq.n	cdd2 <strncmp+0x7a>
    cde8:	e7e5      	b.n	cdb6 <strncmp+0x5e>
    cdea:	4610      	mov	r0, r2
    cdec:	e7e4      	b.n	cdb8 <strncmp+0x60>
    cdee:	4620      	mov	r0, r4
    cdf0:	e7e2      	b.n	cdb8 <strncmp+0x60>
    cdf2:	2000      	movs	r0, #0
    cdf4:	e7e0      	b.n	cdb8 <strncmp+0x60>
    cdf6:	1e66      	subs	r6, r4, #1
    cdf8:	e7e1      	b.n	cdbe <strncmp+0x66>
    cdfa:	4630      	mov	r0, r6
    cdfc:	e7dc      	b.n	cdb8 <strncmp+0x60>
    cdfe:	4618      	mov	r0, r3
    ce00:	e7da      	b.n	cdb8 <strncmp+0x60>
    ce02:	bf00      	nop
    ce04:	0000      	movs	r0, r0
	...

0000ce08 <_strtod_r>:
    ce08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ce0c:	b09d      	sub	sp, #116	; 0x74
    ce0e:	460d      	mov	r5, r1
    ce10:	4683      	mov	fp, r0
    ce12:	9210      	str	r2, [sp, #64]	; 0x40
    ce14:	462a      	mov	r2, r5
    ce16:	2000      	movs	r0, #0
    ce18:	2100      	movs	r1, #0
    ce1a:	9517      	str	r5, [sp, #92]	; 0x5c
    ce1c:	e9cd 0106 	strd	r0, r1, [sp, #24]
    ce20:	4611      	mov	r1, r2
    ce22:	f812 3b01 	ldrb.w	r3, [r2], #1
    ce26:	2b2d      	cmp	r3, #45	; 0x2d
    ce28:	f200 8140 	bhi.w	d0ac <_strtod_r+0x2a4>
    ce2c:	e8df f013 	tbh	[pc, r3, lsl #1]
    ce30:	013e012b 	.word	0x013e012b
    ce34:	013e013e 	.word	0x013e013e
    ce38:	013e013e 	.word	0x013e013e
    ce3c:	013e013e 	.word	0x013e013e
    ce40:	0159013e 	.word	0x0159013e
    ce44:	01590159 	.word	0x01590159
    ce48:	01590159 	.word	0x01590159
    ce4c:	013e013e 	.word	0x013e013e
    ce50:	013e013e 	.word	0x013e013e
    ce54:	013e013e 	.word	0x013e013e
    ce58:	013e013e 	.word	0x013e013e
    ce5c:	013e013e 	.word	0x013e013e
    ce60:	013e013e 	.word	0x013e013e
    ce64:	013e013e 	.word	0x013e013e
    ce68:	013e013e 	.word	0x013e013e
    ce6c:	013e013e 	.word	0x013e013e
    ce70:	013e0159 	.word	0x013e0159
    ce74:	013e013e 	.word	0x013e013e
    ce78:	013e013e 	.word	0x013e013e
    ce7c:	013e013e 	.word	0x013e013e
    ce80:	013e013e 	.word	0x013e013e
    ce84:	0128013e 	.word	0x0128013e
    ce88:	002e013e 	.word	0x002e013e
    ce8c:	2401      	movs	r4, #1
    ce8e:	9412      	str	r4, [sp, #72]	; 0x48
    ce90:	1c4e      	adds	r6, r1, #1
    ce92:	9617      	str	r6, [sp, #92]	; 0x5c
    ce94:	784b      	ldrb	r3, [r1, #1]
    ce96:	469a      	mov	sl, r3
    ce98:	4699      	mov	r9, r3
    ce9a:	2b00      	cmp	r3, #0
    ce9c:	f000 80f6 	beq.w	d08c <_strtod_r+0x284>
    cea0:	2b30      	cmp	r3, #48	; 0x30
    cea2:	f000 8109 	beq.w	d0b8 <_strtod_r+0x2b0>
    cea6:	2400      	movs	r4, #0
    cea8:	9409      	str	r4, [sp, #36]	; 0x24
    ceaa:	2b2f      	cmp	r3, #47	; 0x2f
    ceac:	4699      	mov	r9, r3
    ceae:	f04f 0a00 	mov.w	sl, #0
    ceb2:	f340 84f2 	ble.w	d89a <_strtod_r+0xa92>
    ceb6:	2b39      	cmp	r3, #57	; 0x39
    ceb8:	f300 84ef 	bgt.w	d89a <_strtod_r+0xa92>
    cebc:	1c72      	adds	r2, r6, #1
    cebe:	4657      	mov	r7, sl
    cec0:	4654      	mov	r4, sl
    cec2:	e001      	b.n	cec8 <_strtod_r+0xc0>
    cec4:	2b39      	cmp	r3, #57	; 0x39
    cec6:	dc17      	bgt.n	cef8 <_strtod_r+0xf0>
    cec8:	2c0f      	cmp	r4, #15
    ceca:	dc0d      	bgt.n	cee8 <_strtod_r+0xe0>
    cecc:	eb07 0087 	add.w	r0, r7, r7, lsl #2
    ced0:	eb0a 018a 	add.w	r1, sl, sl, lsl #2
    ced4:	2c08      	cmp	r4, #8
    ced6:	eb03 0040 	add.w	r0, r3, r0, lsl #1
    ceda:	eb03 0341 	add.w	r3, r3, r1, lsl #1
    cede:	bfd4      	ite	le
    cee0:	f1a0 0730 	suble.w	r7, r0, #48	; 0x30
    cee4:	f1a3 0a30 	subgt.w	sl, r3, #48	; 0x30
    cee8:	9217      	str	r2, [sp, #92]	; 0x5c
    ceea:	4690      	mov	r8, r2
    ceec:	f812 3b01 	ldrb.w	r3, [r2], #1
    cef0:	3401      	adds	r4, #1
    cef2:	2b2f      	cmp	r3, #47	; 0x2f
    cef4:	4699      	mov	r9, r3
    cef6:	dce5      	bgt.n	cec4 <_strtod_r+0xbc>
    cef8:	4658      	mov	r0, fp
    cefa:	f001 fbeb 	bl	e6d4 <_localeconv_r>
    cefe:	6801      	ldr	r1, [r0, #0]
    cf00:	4658      	mov	r0, fp
    cf02:	9105      	str	r1, [sp, #20]
    cf04:	f001 fbe6 	bl	e6d4 <_localeconv_r>
    cf08:	6800      	ldr	r0, [r0, #0]
    cf0a:	f002 f97f 	bl	f20c <strlen>
    cf0e:	9905      	ldr	r1, [sp, #20]
    cf10:	4602      	mov	r2, r0
    cf12:	4640      	mov	r0, r8
    cf14:	f7ff ff20 	bl	cd58 <strncmp>
    cf18:	4680      	mov	r8, r0
    cf1a:	2800      	cmp	r0, #0
    cf1c:	f000 813f 	beq.w	d19e <_strtod_r+0x396>
    cf20:	2000      	movs	r0, #0
    cf22:	46a0      	mov	r8, r4
    cf24:	4601      	mov	r1, r0
    cf26:	4684      	mov	ip, r0
    cf28:	f029 0320 	bic.w	r3, r9, #32
    cf2c:	2b45      	cmp	r3, #69	; 0x45
    cf2e:	f040 80da 	bne.w	d0e6 <_strtod_r+0x2de>
    cf32:	9a09      	ldr	r2, [sp, #36]	; 0x24
    cf34:	ea48 0300 	orr.w	r3, r8, r0
    cf38:	431a      	orrs	r2, r3
    cf3a:	f000 811a 	beq.w	d172 <_strtod_r+0x36a>
    cf3e:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    cf40:	1c6b      	adds	r3, r5, #1
    cf42:	9317      	str	r3, [sp, #92]	; 0x5c
    cf44:	f895 9001 	ldrb.w	r9, [r5, #1]
    cf48:	f1b9 0f2b 	cmp.w	r9, #43	; 0x2b
    cf4c:	f000 84be 	beq.w	d8cc <_strtod_r+0xac4>
    cf50:	f1b9 0f2d 	cmp.w	r9, #45	; 0x2d
    cf54:	f000 8356 	beq.w	d604 <_strtod_r+0x7fc>
    cf58:	2200      	movs	r2, #0
    cf5a:	920a      	str	r2, [sp, #40]	; 0x28
    cf5c:	f1a9 0330 	sub.w	r3, r9, #48	; 0x30
    cf60:	2b09      	cmp	r3, #9
    cf62:	f200 8444 	bhi.w	d7ee <_strtod_r+0x9e6>
    cf66:	f1b9 0f30 	cmp.w	r9, #48	; 0x30
    cf6a:	d107      	bne.n	cf7c <_strtod_r+0x174>
    cf6c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    cf6e:	3301      	adds	r3, #1
    cf70:	9317      	str	r3, [sp, #92]	; 0x5c
    cf72:	f813 9b01 	ldrb.w	r9, [r3], #1
    cf76:	f1b9 0f30 	cmp.w	r9, #48	; 0x30
    cf7a:	d0f9      	beq.n	cf70 <_strtod_r+0x168>
    cf7c:	f1a9 0331 	sub.w	r3, r9, #49	; 0x31
    cf80:	2b08      	cmp	r3, #8
    cf82:	f200 80b0 	bhi.w	d0e6 <_strtod_r+0x2de>
    cf86:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    cf88:	f1a9 0930 	sub.w	r9, r9, #48	; 0x30
    cf8c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
    cf90:	1c53      	adds	r3, r2, #1
    cf92:	9317      	str	r3, [sp, #92]	; 0x5c
    cf94:	f892 9001 	ldrb.w	r9, [r2, #1]
    cf98:	920b      	str	r2, [sp, #44]	; 0x2c
    cf9a:	f1b9 0f2f 	cmp.w	r9, #47	; 0x2f
    cf9e:	dd1b      	ble.n	cfd8 <_strtod_r+0x1d0>
    cfa0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
    cfa4:	dc18      	bgt.n	cfd8 <_strtod_r+0x1d0>
    cfa6:	1c93      	adds	r3, r2, #2
    cfa8:	f8cd c030 	str.w	ip, [sp, #48]	; 0x30
    cfac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    cfae:	e002      	b.n	cfb6 <_strtod_r+0x1ae>
    cfb0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
    cfb4:	dc0c      	bgt.n	cfd0 <_strtod_r+0x1c8>
    cfb6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
    cfba:	9317      	str	r3, [sp, #92]	; 0x5c
    cfbc:	469c      	mov	ip, r3
    cfbe:	eb09 0242 	add.w	r2, r9, r2, lsl #1
    cfc2:	f893 9000 	ldrb.w	r9, [r3]
    cfc6:	3a30      	subs	r2, #48	; 0x30
    cfc8:	3301      	adds	r3, #1
    cfca:	f1b9 0f2f 	cmp.w	r9, #47	; 0x2f
    cfce:	dcef      	bgt.n	cfb0 <_strtod_r+0x1a8>
    cfd0:	4663      	mov	r3, ip
    cfd2:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
    cfd6:	920d      	str	r2, [sp, #52]	; 0x34
    cfd8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    cfda:	1a9b      	subs	r3, r3, r2
    cfdc:	2b08      	cmp	r3, #8
    cfde:	f644 631f 	movw	r3, #19999	; 0x4e1f
    cfe2:	dc03      	bgt.n	cfec <_strtod_r+0x1e4>
    cfe4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    cfe6:	429a      	cmp	r2, r3
    cfe8:	bfb8      	it	lt
    cfea:	4613      	movlt	r3, r2
    cfec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    cfee:	b102      	cbz	r2, cff2 <_strtod_r+0x1ea>
    cff0:	425b      	negs	r3, r3
    cff2:	f1b8 0f00 	cmp.w	r8, #0
    cff6:	d07a      	beq.n	d0ee <_strtod_r+0x2e6>
    cff8:	4638      	mov	r0, r7
    cffa:	1a59      	subs	r1, r3, r1
    cffc:	2c00      	cmp	r4, #0
    cffe:	bf08      	it	eq
    d000:	4644      	moveq	r4, r8
    d002:	9109      	str	r1, [sp, #36]	; 0x24
    d004:	940a      	str	r4, [sp, #40]	; 0x28
    d006:	f002 ffaf 	bl	ff68 <__aeabi_ui2d>
    d00a:	f1b8 0f10 	cmp.w	r8, #16
    d00e:	bfb4      	ite	lt
    d010:	46c1      	movlt	r9, r8
    d012:	f04f 0910 	movge.w	r9, #16
    d016:	f1b9 0f09 	cmp.w	r9, #9
    d01a:	4602      	mov	r2, r0
    d01c:	460b      	mov	r3, r1
    d01e:	e9cd 2306 	strd	r2, r3, [sp, #24]
    d022:	dd13      	ble.n	d04c <_strtod_r+0x244>
    d024:	4b92      	ldr	r3, [pc, #584]	; (d270 <_strtod_r+0x468>)
    d026:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
    d02a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
    d02e:	f003 f811 	bl	10054 <__aeabi_dmul>
    d032:	4604      	mov	r4, r0
    d034:	4650      	mov	r0, sl
    d036:	460d      	mov	r5, r1
    d038:	f002 ff96 	bl	ff68 <__aeabi_ui2d>
    d03c:	4602      	mov	r2, r0
    d03e:	460b      	mov	r3, r1
    d040:	4620      	mov	r0, r4
    d042:	4629      	mov	r1, r5
    d044:	f002 fe54 	bl	fcf0 <__adddf3>
    d048:	e9cd 0106 	strd	r0, r1, [sp, #24]
    d04c:	f1b8 0f0f 	cmp.w	r8, #15
    d050:	f300 80d5 	bgt.w	d1fe <_strtod_r+0x3f6>
    d054:	9c09      	ldr	r4, [sp, #36]	; 0x24
    d056:	2c00      	cmp	r4, #0
    d058:	f000 809c 	beq.w	d194 <_strtod_r+0x38c>
    d05c:	f340 854a 	ble.w	daf4 <_strtod_r+0xcec>
    d060:	9d09      	ldr	r5, [sp, #36]	; 0x24
    d062:	2d16      	cmp	r5, #22
    d064:	f300 8501 	bgt.w	da6a <_strtod_r+0xc62>
    d068:	4981      	ldr	r1, [pc, #516]	; (d270 <_strtod_r+0x468>)
    d06a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    d06e:	eb01 0ac5 	add.w	sl, r1, r5, lsl #3
    d072:	e9da 0100 	ldrd	r0, r1, [sl]
    d076:	f002 ffed 	bl	10054 <__aeabi_dmul>
    d07a:	4682      	mov	sl, r0
    d07c:	4689      	mov	r9, r1
    d07e:	e008      	b.n	d092 <_strtod_r+0x28a>
    d080:	2400      	movs	r4, #0
    d082:	9412      	str	r4, [sp, #72]	; 0x48
    d084:	e704      	b.n	ce90 <_strtod_r+0x88>
    d086:	f04f 0a00 	mov.w	sl, #0
    d08a:	46d1      	mov	r9, sl
    d08c:	2400      	movs	r4, #0
    d08e:	9517      	str	r5, [sp, #92]	; 0x5c
    d090:	9412      	str	r4, [sp, #72]	; 0x48
    d092:	9c10      	ldr	r4, [sp, #64]	; 0x40
    d094:	b10c      	cbz	r4, d09a <_strtod_r+0x292>
    d096:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    d098:	6023      	str	r3, [r4, #0]
    d09a:	9d12      	ldr	r5, [sp, #72]	; 0x48
    d09c:	b10d      	cbz	r5, d0a2 <_strtod_r+0x29a>
    d09e:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
    d0a2:	4650      	mov	r0, sl
    d0a4:	4649      	mov	r1, r9
    d0a6:	b01d      	add	sp, #116	; 0x74
    d0a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d0ac:	2400      	movs	r4, #0
    d0ae:	2b30      	cmp	r3, #48	; 0x30
    d0b0:	460e      	mov	r6, r1
    d0b2:	9412      	str	r4, [sp, #72]	; 0x48
    d0b4:	f47f aef7 	bne.w	cea6 <_strtod_r+0x9e>
    d0b8:	7873      	ldrb	r3, [r6, #1]
    d0ba:	2b58      	cmp	r3, #88	; 0x58
    d0bc:	f000 839e 	beq.w	d7fc <_strtod_r+0x9f4>
    d0c0:	1c72      	adds	r2, r6, #1
    d0c2:	2b78      	cmp	r3, #120	; 0x78
    d0c4:	f000 839a 	beq.w	d7fc <_strtod_r+0x9f4>
    d0c8:	4616      	mov	r6, r2
    d0ca:	9217      	str	r2, [sp, #92]	; 0x5c
    d0cc:	f812 3b01 	ldrb.w	r3, [r2], #1
    d0d0:	2b30      	cmp	r3, #48	; 0x30
    d0d2:	d0f9      	beq.n	d0c8 <_strtod_r+0x2c0>
    d0d4:	469a      	mov	sl, r3
    d0d6:	4699      	mov	r9, r3
    d0d8:	2b00      	cmp	r3, #0
    d0da:	d0da      	beq.n	d092 <_strtod_r+0x28a>
    d0dc:	2401      	movs	r4, #1
    d0de:	9409      	str	r4, [sp, #36]	; 0x24
    d0e0:	e6e3      	b.n	ceaa <_strtod_r+0xa2>
    d0e2:	9217      	str	r2, [sp, #92]	; 0x5c
    d0e4:	e69c      	b.n	ce20 <_strtod_r+0x18>
    d0e6:	2300      	movs	r3, #0
    d0e8:	f1b8 0f00 	cmp.w	r8, #0
    d0ec:	d184      	bne.n	cff8 <_strtod_r+0x1f0>
    d0ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d0f0:	4303      	orrs	r3, r0
    d0f2:	d14f      	bne.n	d194 <_strtod_r+0x38c>
    d0f4:	f1bc 0f00 	cmp.w	ip, #0
    d0f8:	d13b      	bne.n	d172 <_strtod_r+0x36a>
    d0fa:	f1a9 0949 	sub.w	r9, r9, #73	; 0x49
    d0fe:	f1b9 0f25 	cmp.w	r9, #37	; 0x25
    d102:	d836      	bhi.n	d172 <_strtod_r+0x36a>
    d104:	e8df f019 	tbh	[pc, r9, lsl #1]
    d108:	00350285 	.word	0x00350285
    d10c:	00350035 	.word	0x00350035
    d110:	00260035 	.word	0x00260035
    d114:	00350035 	.word	0x00350035
    d118:	00350035 	.word	0x00350035
    d11c:	00350035 	.word	0x00350035
    d120:	00350035 	.word	0x00350035
    d124:	00350035 	.word	0x00350035
    d128:	00350035 	.word	0x00350035
    d12c:	00350035 	.word	0x00350035
    d130:	00350035 	.word	0x00350035
    d134:	00350035 	.word	0x00350035
    d138:	00350035 	.word	0x00350035
    d13c:	00350035 	.word	0x00350035
    d140:	00350035 	.word	0x00350035
    d144:	00350035 	.word	0x00350035
    d148:	00350285 	.word	0x00350285
    d14c:	00350035 	.word	0x00350035
    d150:	00260035 	.word	0x00260035
    d154:	4847      	ldr	r0, [pc, #284]	; (d274 <_strtod_r+0x46c>)
    d156:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d158:	f810 1f01 	ldrb.w	r1, [r0, #1]!
    d15c:	4613      	mov	r3, r2
    d15e:	b169      	cbz	r1, d17c <_strtod_r+0x374>
    d160:	785b      	ldrb	r3, [r3, #1]
    d162:	3201      	adds	r2, #1
    d164:	2b40      	cmp	r3, #64	; 0x40
    d166:	dd02      	ble.n	d16e <_strtod_r+0x366>
    d168:	2b5a      	cmp	r3, #90	; 0x5a
    d16a:	bfd8      	it	le
    d16c:	3320      	addle	r3, #32
    d16e:	428b      	cmp	r3, r1
    d170:	d0f2      	beq.n	d158 <_strtod_r+0x350>
    d172:	f8dd a018 	ldr.w	sl, [sp, #24]
    d176:	f8dd 901c 	ldr.w	r9, [sp, #28]
    d17a:	e787      	b.n	d08c <_strtod_r+0x284>
    d17c:	1c53      	adds	r3, r2, #1
    d17e:	9317      	str	r3, [sp, #92]	; 0x5c
    d180:	7853      	ldrb	r3, [r2, #1]
    d182:	2b28      	cmp	r3, #40	; 0x28
    d184:	f000 856b 	beq.w	dc5e <_strtod_r+0xe56>
    d188:	2300      	movs	r3, #0
    d18a:	9306      	str	r3, [sp, #24]
    d18c:	461c      	mov	r4, r3
    d18e:	f6cf 74f8 	movt	r4, #65528	; 0xfff8
    d192:	9407      	str	r4, [sp, #28]
    d194:	f8dd a018 	ldr.w	sl, [sp, #24]
    d198:	f8dd 901c 	ldr.w	r9, [sp, #28]
    d19c:	e779      	b.n	d092 <_strtod_r+0x28a>
    d19e:	4658      	mov	r0, fp
    d1a0:	f8dd 905c 	ldr.w	r9, [sp, #92]	; 0x5c
    d1a4:	f001 fa96 	bl	e6d4 <_localeconv_r>
    d1a8:	6800      	ldr	r0, [r0, #0]
    d1aa:	f002 f82f 	bl	f20c <strlen>
    d1ae:	eb09 0300 	add.w	r3, r9, r0
    d1b2:	9317      	str	r3, [sp, #92]	; 0x5c
    d1b4:	f819 9000 	ldrb.w	r9, [r9, r0]
    d1b8:	2c00      	cmp	r4, #0
    d1ba:	f040 8183 	bne.w	d4c4 <_strtod_r+0x6bc>
    d1be:	f1b9 0f30 	cmp.w	r9, #48	; 0x30
    d1c2:	4620      	mov	r0, r4
    d1c4:	d107      	bne.n	d1d6 <_strtod_r+0x3ce>
    d1c6:	3301      	adds	r3, #1
    d1c8:	9317      	str	r3, [sp, #92]	; 0x5c
    d1ca:	3001      	adds	r0, #1
    d1cc:	f893 9000 	ldrb.w	r9, [r3]
    d1d0:	f1b9 0f30 	cmp.w	r9, #48	; 0x30
    d1d4:	d0f7      	beq.n	d1c6 <_strtod_r+0x3be>
    d1d6:	f1a9 0331 	sub.w	r3, r9, #49	; 0x31
    d1da:	2b08      	cmp	r3, #8
    d1dc:	f200 81b5 	bhi.w	d54a <_strtod_r+0x742>
    d1e0:	f1b9 0230 	subs.w	r2, r9, #48	; 0x30
    d1e4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
    d1e6:	f040 8432 	bne.w	da4e <_strtod_r+0xc46>
    d1ea:	4601      	mov	r1, r0
    d1ec:	46b4      	mov	ip, r6
    d1ee:	4690      	mov	r8, r2
    d1f0:	2001      	movs	r0, #1
    d1f2:	f10c 0301 	add.w	r3, ip, #1
    d1f6:	9317      	str	r3, [sp, #92]	; 0x5c
    d1f8:	f89c 9001 	ldrb.w	r9, [ip, #1]
    d1fc:	e165      	b.n	d4ca <_strtod_r+0x6c2>
    d1fe:	9d09      	ldr	r5, [sp, #36]	; 0x24
    d200:	ebc9 0908 	rsb	r9, r9, r8
    d204:	eb05 0409 	add.w	r4, r5, r9
    d208:	2c00      	cmp	r4, #0
    d20a:	f340 83f6 	ble.w	d9fa <_strtod_r+0xbf2>
    d20e:	f014 010f 	ands.w	r1, r4, #15
    d212:	d00a      	beq.n	d22a <_strtod_r+0x422>
    d214:	4816      	ldr	r0, [pc, #88]	; (d270 <_strtod_r+0x468>)
    d216:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    d21a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
    d21e:	e9d1 0100 	ldrd	r0, r1, [r1]
    d222:	f002 ff17 	bl	10054 <__aeabi_dmul>
    d226:	e9cd 0106 	strd	r0, r1, [sp, #24]
    d22a:	f034 040f 	bics.w	r4, r4, #15
    d22e:	f040 8197 	bne.w	d560 <_strtod_r+0x758>
    d232:	f8dd a018 	ldr.w	sl, [sp, #24]
    d236:	f8dd 901c 	ldr.w	r9, [sp, #28]
    d23a:	940b      	str	r4, [sp, #44]	; 0x2c
    d23c:	9700      	str	r7, [sp, #0]
    d23e:	4658      	mov	r0, fp
    d240:	4631      	mov	r1, r6
    d242:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    d244:	4643      	mov	r3, r8
    d246:	f001 fad5 	bl	e7f4 <__s2b>
    d24a:	9d09      	ldr	r5, [sp, #36]	; 0x24
    d24c:	2d00      	cmp	r5, #0
    d24e:	9011      	str	r0, [sp, #68]	; 0x44
    d250:	f2c0 844b 	blt.w	daea <_strtod_r+0xce2>
    d254:	2400      	movs	r4, #0
    d256:	940d      	str	r4, [sp, #52]	; 0x34
    d258:	9d09      	ldr	r5, [sp, #36]	; 0x24
    d25a:	9c11      	ldr	r4, [sp, #68]	; 0x44
    d25c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
    d260:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
    d264:	340c      	adds	r4, #12
    d266:	950e      	str	r5, [sp, #56]	; 0x38
    d268:	9413      	str	r4, [sp, #76]	; 0x4c
    d26a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    d26e:	e075      	b.n	d35c <_strtod_r+0x554>
    d270:	00010ef0 	.word	0x00010ef0
    d274:	00010da3 	.word	0x00010da3
    d278:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    d27a:	2b00      	cmp	r3, #0
    d27c:	f000 81db 	beq.w	d636 <_strtod_r+0x82e>
    d280:	f04f 0900 	mov.w	r9, #0
    d284:	2500      	movs	r5, #0
    d286:	f8dd c01c 	ldr.w	ip, [sp, #28]
    d28a:	2400      	movs	r4, #0
    d28c:	f6c3 75f0 	movt	r5, #16368	; 0x3ff0
    d290:	f6c3 79f0 	movt	r9, #16368	; 0x3ff0
    d294:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    d298:	f04f 0800 	mov.w	r8, #0
    d29c:	4643      	mov	r3, r8
    d29e:	f6c7 78f0 	movt	r8, #32752	; 0x7ff0
    d2a2:	f6c7 73e0 	movt	r3, #32736	; 0x7fe0
    d2a6:	ea0c 0808 	and.w	r8, ip, r8
    d2aa:	4598      	cmp	r8, r3
    d2ac:	f000 81f8 	beq.w	d6a0 <_strtod_r+0x898>
    d2b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    d2b2:	f1b8 6fd4 	cmp.w	r8, #111149056	; 0x6a00000
    d2b6:	bf8c      	ite	hi
    d2b8:	2300      	movhi	r3, #0
    d2ba:	2301      	movls	r3, #1
    d2bc:	2a00      	cmp	r2, #0
    d2be:	bf08      	it	eq
    d2c0:	2300      	moveq	r3, #0
    d2c2:	b1eb      	cbz	r3, d300 <_strtod_r+0x4f8>
    d2c4:	980c      	ldr	r0, [sp, #48]	; 0x30
    d2c6:	4649      	mov	r1, r9
    d2c8:	a3a3      	add	r3, pc, #652	; (adr r3, d558 <_strtod_r+0x750>)
    d2ca:	e9d3 2300 	ldrd	r2, r3, [r3]
    d2ce:	f003 f93d 	bl	1054c <__aeabi_dcmple>
    d2d2:	b188      	cbz	r0, d2f8 <_strtod_r+0x4f0>
    d2d4:	980c      	ldr	r0, [sp, #48]	; 0x30
    d2d6:	4649      	mov	r1, r9
    d2d8:	f003 f97e 	bl	105d8 <__aeabi_d2uiz>
    d2dc:	2800      	cmp	r0, #0
    d2de:	f000 8279 	beq.w	d7d4 <_strtod_r+0x9cc>
    d2e2:	f002 fe41 	bl	ff68 <__aeabi_ui2d>
    d2e6:	4689      	mov	r9, r1
    d2e8:	900c      	str	r0, [sp, #48]	; 0x30
    d2ea:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
    d2ec:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
    d2f0:	b104      	cbz	r4, d2f4 <_strtod_r+0x4ec>
    d2f2:	464b      	mov	r3, r9
    d2f4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    d2f6:	461d      	mov	r5, r3
    d2f8:	f105 63d6 	add.w	r3, r5, #112197632	; 0x6b00000
    d2fc:	ebc8 0503 	rsb	r5, r8, r3
    d300:	9809      	ldr	r0, [sp, #36]	; 0x24
    d302:	990a      	ldr	r1, [sp, #40]	; 0x28
    d304:	f001 fcf6 	bl	ecf4 <__ulp>
    d308:	4602      	mov	r2, r0
    d30a:	460b      	mov	r3, r1
    d30c:	4620      	mov	r0, r4
    d30e:	4629      	mov	r1, r5
    d310:	f002 fea0 	bl	10054 <__aeabi_dmul>
    d314:	4602      	mov	r2, r0
    d316:	460b      	mov	r3, r1
    d318:	9809      	ldr	r0, [sp, #36]	; 0x24
    d31a:	990a      	ldr	r1, [sp, #40]	; 0x28
    d31c:	f002 fce8 	bl	fcf0 <__adddf3>
    d320:	e9cd 0106 	strd	r0, r1, [sp, #24]
    d324:	9c07      	ldr	r4, [sp, #28]
    d326:	9009      	str	r0, [sp, #36]	; 0x24
    d328:	910a      	str	r1, [sp, #40]	; 0x28
    d32a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    d32c:	b935      	cbnz	r5, d33c <_strtod_r+0x534>
    d32e:	2300      	movs	r3, #0
    d330:	f6c7 73f0 	movt	r3, #32752	; 0x7ff0
    d334:	4023      	ands	r3, r4
    d336:	4598      	cmp	r8, r3
    d338:	f000 81ef 	beq.w	d71a <_strtod_r+0x912>
    d33c:	4658      	mov	r0, fp
    d33e:	9918      	ldr	r1, [sp, #96]	; 0x60
    d340:	f001 fa02 	bl	e748 <_Bfree>
    d344:	4658      	mov	r0, fp
    d346:	4651      	mov	r1, sl
    d348:	f001 f9fe 	bl	e748 <_Bfree>
    d34c:	4658      	mov	r0, fp
    d34e:	4639      	mov	r1, r7
    d350:	f001 f9fa 	bl	e748 <_Bfree>
    d354:	4658      	mov	r0, fp
    d356:	4631      	mov	r1, r6
    d358:	f001 f9f6 	bl	e748 <_Bfree>
    d35c:	9c11      	ldr	r4, [sp, #68]	; 0x44
    d35e:	4658      	mov	r0, fp
    d360:	ad16      	add	r5, sp, #88	; 0x58
    d362:	6861      	ldr	r1, [r4, #4]
    d364:	f001 f9c8 	bl	e6f8 <_Balloc>
    d368:	6923      	ldr	r3, [r4, #16]
    d36a:	9913      	ldr	r1, [sp, #76]	; 0x4c
    d36c:	1c9a      	adds	r2, r3, #2
    d36e:	0092      	lsls	r2, r2, #2
    d370:	4682      	mov	sl, r0
    d372:	f100 000c 	add.w	r0, r0, #12
    d376:	f7ff fbff 	bl	cb78 <memcpy>
    d37a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    d37c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    d37e:	a819      	add	r0, sp, #100	; 0x64
    d380:	9500      	str	r5, [sp, #0]
    d382:	9001      	str	r0, [sp, #4]
    d384:	4658      	mov	r0, fp
    d386:	f001 fd2f 	bl	ede8 <__d2b>
    d38a:	2101      	movs	r1, #1
    d38c:	9018      	str	r0, [sp, #96]	; 0x60
    d38e:	4658      	mov	r0, fp
    d390:	f001 faca 	bl	e928 <__i2b>
    d394:	9a16      	ldr	r2, [sp, #88]	; 0x58
    d396:	9b19      	ldr	r3, [sp, #100]	; 0x64
    d398:	f46f 717f 	mvn.w	r1, #1020	; 0x3fc
    d39c:	2a00      	cmp	r2, #0
    d39e:	bfaa      	itet	ge
    d3a0:	9d0d      	ldrge	r5, [sp, #52]	; 0x34
    d3a2:	9c0e      	ldrlt	r4, [sp, #56]	; 0x38
    d3a4:	18ac      	addge	r4, r5, r2
    d3a6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    d3a8:	4607      	mov	r7, r0
    d3aa:	bfb8      	it	lt
    d3ac:	ebc2 0004 	rsblt	r0, r2, r4
    d3b0:	ebc5 0202 	rsb	r2, r5, r2
    d3b4:	bfb8      	it	lt
    d3b6:	9c0d      	ldrlt	r4, [sp, #52]	; 0x34
    d3b8:	eb02 0503 	add.w	r5, r2, r3
    d3bc:	bfa8      	it	ge
    d3be:	980e      	ldrge	r0, [sp, #56]	; 0x38
    d3c0:	428d      	cmp	r5, r1
    d3c2:	990d      	ldr	r1, [sp, #52]	; 0x34
    d3c4:	bfb4      	ite	lt
    d3c6:	f202 4333 	addwlt	r3, r2, #1075	; 0x433
    d3ca:	f1c3 0336 	rsbge	r3, r3, #54	; 0x36
    d3ce:	18e6      	adds	r6, r4, r3
    d3d0:	18c3      	adds	r3, r0, r3
    d3d2:	980b      	ldr	r0, [sp, #44]	; 0x2c
    d3d4:	181d      	adds	r5, r3, r0
    d3d6:	42a6      	cmp	r6, r4
    d3d8:	bfb4      	ite	lt
    d3da:	4633      	movlt	r3, r6
    d3dc:	4623      	movge	r3, r4
    d3de:	42ab      	cmp	r3, r5
    d3e0:	bfa8      	it	ge
    d3e2:	462b      	movge	r3, r5
    d3e4:	2b00      	cmp	r3, #0
    d3e6:	bfc2      	ittt	gt
    d3e8:	ebc3 0606 	rsbgt	r6, r3, r6
    d3ec:	ebc3 0505 	rsbgt	r5, r3, r5
    d3f0:	ebc3 0404 	rsbgt	r4, r3, r4
    d3f4:	b189      	cbz	r1, d41a <_strtod_r+0x612>
    d3f6:	460a      	mov	r2, r1
    d3f8:	4658      	mov	r0, fp
    d3fa:	4639      	mov	r1, r7
    d3fc:	f001 fb3c 	bl	ea78 <__pow5mult>
    d400:	9a18      	ldr	r2, [sp, #96]	; 0x60
    d402:	4607      	mov	r7, r0
    d404:	4658      	mov	r0, fp
    d406:	4639      	mov	r1, r7
    d408:	f001 fa98 	bl	e93c <__multiply>
    d40c:	9918      	ldr	r1, [sp, #96]	; 0x60
    d40e:	4680      	mov	r8, r0
    d410:	4658      	mov	r0, fp
    d412:	f001 f999 	bl	e748 <_Bfree>
    d416:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
    d41a:	2e00      	cmp	r6, #0
    d41c:	dd05      	ble.n	d42a <_strtod_r+0x622>
    d41e:	4658      	mov	r0, fp
    d420:	9918      	ldr	r1, [sp, #96]	; 0x60
    d422:	4632      	mov	r2, r6
    d424:	f001 fb72 	bl	eb0c <__lshift>
    d428:	9018      	str	r0, [sp, #96]	; 0x60
    d42a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    d42c:	b122      	cbz	r2, d438 <_strtod_r+0x630>
    d42e:	4651      	mov	r1, sl
    d430:	4658      	mov	r0, fp
    d432:	f001 fb21 	bl	ea78 <__pow5mult>
    d436:	4682      	mov	sl, r0
    d438:	2d00      	cmp	r5, #0
    d43a:	dd05      	ble.n	d448 <_strtod_r+0x640>
    d43c:	4651      	mov	r1, sl
    d43e:	4658      	mov	r0, fp
    d440:	462a      	mov	r2, r5
    d442:	f001 fb63 	bl	eb0c <__lshift>
    d446:	4682      	mov	sl, r0
    d448:	2c00      	cmp	r4, #0
    d44a:	dd05      	ble.n	d458 <_strtod_r+0x650>
    d44c:	4639      	mov	r1, r7
    d44e:	4658      	mov	r0, fp
    d450:	4622      	mov	r2, r4
    d452:	f001 fb5b 	bl	eb0c <__lshift>
    d456:	4607      	mov	r7, r0
    d458:	9918      	ldr	r1, [sp, #96]	; 0x60
    d45a:	4652      	mov	r2, sl
    d45c:	4658      	mov	r0, fp
    d45e:	f04f 0800 	mov.w	r8, #0
    d462:	f001 fbd1 	bl	ec08 <__mdiff>
    d466:	4639      	mov	r1, r7
    d468:	68c4      	ldr	r4, [r0, #12]
    d46a:	4606      	mov	r6, r0
    d46c:	f8c0 800c 	str.w	r8, [r0, #12]
    d470:	940f      	str	r4, [sp, #60]	; 0x3c
    d472:	f001 fbab 	bl	ebcc <__mcmp>
    d476:	4540      	cmp	r0, r8
    d478:	f2c0 822b 	blt.w	d8d2 <_strtod_r+0xaca>
    d47c:	f000 8279 	beq.w	d972 <_strtod_r+0xb6a>
    d480:	4630      	mov	r0, r6
    d482:	4639      	mov	r1, r7
    d484:	f001 fd0e 	bl	eea4 <__ratio>
    d488:	2200      	movs	r2, #0
    d48a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    d48e:	4604      	mov	r4, r0
    d490:	460d      	mov	r5, r1
    d492:	f003 f85b 	bl	1054c <__aeabi_dcmple>
    d496:	2800      	cmp	r0, #0
    d498:	f47f aeee 	bne.w	d278 <_strtod_r+0x470>
    d49c:	2300      	movs	r3, #0
    d49e:	4620      	mov	r0, r4
    d4a0:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
    d4a4:	4629      	mov	r1, r5
    d4a6:	2200      	movs	r2, #0
    d4a8:	f002 fdd4 	bl	10054 <__aeabi_dmul>
    d4ac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
    d4ae:	900c      	str	r0, [sp, #48]	; 0x30
    d4b0:	4689      	mov	r9, r1
    d4b2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    d4b6:	b104      	cbz	r4, d4ba <_strtod_r+0x6b2>
    d4b8:	460b      	mov	r3, r1
    d4ba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    d4bc:	461d      	mov	r5, r3
    d4be:	f8dd c01c 	ldr.w	ip, [sp, #28]
    d4c2:	e6e9      	b.n	d298 <_strtod_r+0x490>
    d4c4:	4640      	mov	r0, r8
    d4c6:	46a0      	mov	r8, r4
    d4c8:	4601      	mov	r1, r0
    d4ca:	f1a9 0330 	sub.w	r3, r9, #48	; 0x30
    d4ce:	2b09      	cmp	r3, #9
    d4d0:	bf88      	it	hi
    d4d2:	f04f 0c01 	movhi.w	ip, #1
    d4d6:	f63f ad27 	bhi.w	cf28 <_strtod_r+0x120>
    d4da:	f100 0901 	add.w	r9, r0, #1
    d4de:	461a      	mov	r2, r3
    d4e0:	f8dd c05c 	ldr.w	ip, [sp, #92]	; 0x5c
    d4e4:	4648      	mov	r0, r9
    d4e6:	2b00      	cmp	r3, #0
    d4e8:	f43f ae83 	beq.w	d1f2 <_strtod_r+0x3ea>
    d4ec:	2801      	cmp	r0, #1
    d4ee:	f000 83b4 	beq.w	dc5a <_strtod_r+0xe52>
    d4f2:	f108 0301 	add.w	r3, r8, #1
    d4f6:	4440      	add	r0, r8
    d4f8:	910a      	str	r1, [sp, #40]	; 0x28
    d4fa:	940b      	str	r4, [sp, #44]	; 0x2c
    d4fc:	f1b8 0f10 	cmp.w	r8, #16
    d500:	dc08      	bgt.n	d514 <_strtod_r+0x70c>
    d502:	eb07 0487 	add.w	r4, r7, r7, lsl #2
    d506:	eb0a 018a 	add.w	r1, sl, sl, lsl #2
    d50a:	2b09      	cmp	r3, #9
    d50c:	bfcc      	ite	gt
    d50e:	ea4f 0a41 	movgt.w	sl, r1, lsl #1
    d512:	0067      	lslle	r7, r4, #1
    d514:	3301      	adds	r3, #1
    d516:	4283      	cmp	r3, r0
    d518:	d1f0      	bne.n	d4fc <_strtod_r+0x6f4>
    d51a:	990a      	ldr	r1, [sp, #40]	; 0x28
    d51c:	464b      	mov	r3, r9
    d51e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
    d520:	2000      	movs	r0, #0
    d522:	f1b8 0f10 	cmp.w	r8, #16
    d526:	f73f ae64 	bgt.w	d1f2 <_strtod_r+0x3ea>
    d52a:	44c1      	add	r9, r8
    d52c:	18c9      	adds	r1, r1, r3
    d52e:	f1b9 0f09 	cmp.w	r9, #9
    d532:	4498      	add	r8, r3
    d534:	bfd5      	itete	le
    d536:	eb07 0787 	addle.w	r7, r7, r7, lsl #2
    d53a:	eb0a 008a 	addgt.w	r0, sl, sl, lsl #2
    d53e:	eb02 0747 	addle.w	r7, r2, r7, lsl #1
    d542:	eb02 0a40 	addgt.w	sl, r2, r0, lsl #1
    d546:	2000      	movs	r0, #0
    d548:	e653      	b.n	d1f2 <_strtod_r+0x3ea>
    d54a:	f04f 0800 	mov.w	r8, #0
    d54e:	f04f 0c01 	mov.w	ip, #1
    d552:	4641      	mov	r1, r8
    d554:	e4e8      	b.n	cf28 <_strtod_r+0x120>
    d556:	bf00      	nop
    d558:	ffc00000 	.word	0xffc00000
    d55c:	41dfffff 	.word	0x41dfffff
    d560:	f5b4 7f9a 	cmp.w	r4, #308	; 0x134
    d564:	f300 823c 	bgt.w	d9e0 <_strtod_r+0xbd8>
    d568:	1124      	asrs	r4, r4, #4
    d56a:	f8df a35c 	ldr.w	sl, [pc, #860]	; d8c8 <_strtod_r+0xac0>
    d56e:	2c01      	cmp	r4, #1
    d570:	f340 8371 	ble.w	dc56 <_strtod_r+0xe4e>
    d574:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    d578:	2500      	movs	r5, #0
    d57a:	46d1      	mov	r9, sl
    d57c:	f014 0f01 	tst.w	r4, #1
    d580:	4610      	mov	r0, r2
    d582:	4619      	mov	r1, r3
    d584:	ea4f 0464 	mov.w	r4, r4, asr #1
    d588:	f105 0501 	add.w	r5, r5, #1
    d58c:	d005      	beq.n	d59a <_strtod_r+0x792>
    d58e:	e9d9 2300 	ldrd	r2, r3, [r9]
    d592:	f002 fd5f 	bl	10054 <__aeabi_dmul>
    d596:	4602      	mov	r2, r0
    d598:	460b      	mov	r3, r1
    d59a:	2c01      	cmp	r4, #1
    d59c:	f109 0908 	add.w	r9, r9, #8
    d5a0:	dcec      	bgt.n	d57c <_strtod_r+0x774>
    d5a2:	4610      	mov	r0, r2
    d5a4:	4619      	mov	r1, r3
    d5a6:	e9cd 0106 	strd	r0, r1, [sp, #24]
    d5aa:	9907      	ldr	r1, [sp, #28]
    d5ac:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
    d5b0:	f1a1 7154 	sub.w	r1, r1, #55574528	; 0x3500000
    d5b4:	9107      	str	r1, [sp, #28]
    d5b6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    d5ba:	e9d5 0100 	ldrd	r0, r1, [r5]
    d5be:	f002 fd49 	bl	10054 <__aeabi_dmul>
    d5c2:	2300      	movs	r3, #0
    d5c4:	2200      	movs	r2, #0
    d5c6:	f6c7 73f0 	movt	r3, #32752	; 0x7ff0
    d5ca:	f6c7 42a0 	movt	r2, #31904	; 0x7ca0
    d5ce:	e9cd 0106 	strd	r0, r1, [sp, #24]
    d5d2:	9907      	ldr	r1, [sp, #28]
    d5d4:	400b      	ands	r3, r1
    d5d6:	4293      	cmp	r3, r2
    d5d8:	f200 8202 	bhi.w	d9e0 <_strtod_r+0xbd8>
    d5dc:	2200      	movs	r2, #0
    d5de:	f6c7 4290 	movt	r2, #31888	; 0x7c90
    d5e2:	4293      	cmp	r3, r2
    d5e4:	f240 829a 	bls.w	db1c <_strtod_r+0xd14>
    d5e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
    d5ec:	f04f 30ff 	mov.w	r0, #4294967295
    d5f0:	4615      	mov	r5, r2
    d5f2:	2400      	movs	r4, #0
    d5f4:	f6c7 75ef 	movt	r5, #32751	; 0x7fef
    d5f8:	940b      	str	r4, [sp, #44]	; 0x2c
    d5fa:	9507      	str	r5, [sp, #28]
    d5fc:	4682      	mov	sl, r0
    d5fe:	9006      	str	r0, [sp, #24]
    d600:	46a9      	mov	r9, r5
    d602:	e61b      	b.n	d23c <_strtod_r+0x434>
    d604:	2301      	movs	r3, #1
    d606:	930a      	str	r3, [sp, #40]	; 0x28
    d608:	1cab      	adds	r3, r5, #2
    d60a:	9317      	str	r3, [sp, #92]	; 0x5c
    d60c:	f895 9002 	ldrb.w	r9, [r5, #2]
    d610:	e4a4      	b.n	cf5c <_strtod_r+0x154>
    d612:	48ab      	ldr	r0, [pc, #684]	; (d8c0 <_strtod_r+0xab8>)
    d614:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    d616:	f810 1f01 	ldrb.w	r1, [r0, #1]!
    d61a:	4613      	mov	r3, r2
    d61c:	2900      	cmp	r1, #0
    d61e:	f000 82a5 	beq.w	db6c <_strtod_r+0xd64>
    d622:	785b      	ldrb	r3, [r3, #1]
    d624:	3201      	adds	r2, #1
    d626:	2b40      	cmp	r3, #64	; 0x40
    d628:	dd02      	ble.n	d630 <_strtod_r+0x828>
    d62a:	2b5a      	cmp	r3, #90	; 0x5a
    d62c:	bfd8      	it	le
    d62e:	3320      	addle	r3, #32
    d630:	428b      	cmp	r3, r1
    d632:	d0f0      	beq.n	d616 <_strtod_r+0x80e>
    d634:	e59d      	b.n	d172 <_strtod_r+0x36a>
    d636:	9b06      	ldr	r3, [sp, #24]
    d638:	f8dd c01c 	ldr.w	ip, [sp, #28]
    d63c:	2b00      	cmp	r3, #0
    d63e:	f040 80a6 	bne.w	d78e <_strtod_r+0x986>
    d642:	f3cc 0313 	ubfx	r3, ip, #0, #20
    d646:	bb03      	cbnz	r3, d68a <_strtod_r+0x882>
    d648:	2300      	movs	r3, #0
    d64a:	4620      	mov	r0, r4
    d64c:	4629      	mov	r1, r5
    d64e:	2200      	movs	r2, #0
    d650:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
    d654:	f8cd c014 	str.w	ip, [sp, #20]
    d658:	f002 ff6e 	bl	10538 <__aeabi_dcmplt>
    d65c:	f8dd c014 	ldr.w	ip, [sp, #20]
    d660:	2800      	cmp	r0, #0
    d662:	f040 81e6 	bne.w	da32 <_strtod_r+0xc2a>
    d666:	2300      	movs	r3, #0
    d668:	2200      	movs	r2, #0
    d66a:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
    d66e:	4620      	mov	r0, r4
    d670:	4629      	mov	r1, r5
    d672:	f002 fcef 	bl	10054 <__aeabi_dmul>
    d676:	f8dd c014 	ldr.w	ip, [sp, #20]
    d67a:	4689      	mov	r9, r1
    d67c:	4602      	mov	r2, r0
    d67e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    d682:	900c      	str	r0, [sp, #48]	; 0x30
    d684:	4614      	mov	r4, r2
    d686:	461d      	mov	r5, r3
    d688:	e606      	b.n	d298 <_strtod_r+0x490>
    d68a:	f04f 0900 	mov.w	r9, #0
    d68e:	2500      	movs	r5, #0
    d690:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
    d694:	2400      	movs	r4, #0
    d696:	f6cb 75f0 	movt	r5, #49136	; 0xbff0
    d69a:	f6c3 79f0 	movt	r9, #16368	; 0x3ff0
    d69e:	e5fb      	b.n	d298 <_strtod_r+0x490>
    d6a0:	f1ac 7c54 	sub.w	ip, ip, #55574528	; 0x3500000
    d6a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
    d6a6:	f8cd c01c 	str.w	ip, [sp, #28]
    d6aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    d6ac:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    d6b0:	e9cd 4502 	strd	r4, r5, [sp, #8]
    d6b4:	4614      	mov	r4, r2
    d6b6:	461d      	mov	r5, r3
    d6b8:	e9cd 4514 	strd	r4, r5, [sp, #80]	; 0x50
    d6bc:	f001 fb1a 	bl	ecf4 <__ulp>
    d6c0:	4602      	mov	r2, r0
    d6c2:	460b      	mov	r3, r1
    d6c4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
    d6c8:	f002 fcc4 	bl	10054 <__aeabi_dmul>
    d6cc:	4602      	mov	r2, r0
    d6ce:	460b      	mov	r3, r1
    d6d0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    d6d4:	f002 fb0c 	bl	fcf0 <__adddf3>
    d6d8:	2300      	movs	r3, #0
    d6da:	f6c7 73f0 	movt	r3, #32752	; 0x7ff0
    d6de:	f64f 72ff 	movw	r2, #65535	; 0xffff
    d6e2:	f6c7 429f 	movt	r2, #31903	; 0x7c9f
    d6e6:	e9cd 0106 	strd	r0, r1, [sp, #24]
    d6ea:	9c07      	ldr	r4, [sp, #28]
    d6ec:	4023      	ands	r3, r4
    d6ee:	4293      	cmp	r3, r2
    d6f0:	d976      	bls.n	d7e0 <_strtod_r+0x9d8>
    d6f2:	f64f 73ff 	movw	r3, #65535	; 0xffff
    d6f6:	9d15      	ldr	r5, [sp, #84]	; 0x54
    d6f8:	f6c7 73ef 	movt	r3, #32751	; 0x7fef
    d6fc:	429d      	cmp	r5, r3
    d6fe:	f000 815d 	beq.w	d9bc <_strtod_r+0xbb4>
    d702:	f64f 71ff 	movw	r1, #65535	; 0xffff
    d706:	f04f 33ff 	mov.w	r3, #4294967295
    d70a:	460a      	mov	r2, r1
    d70c:	9306      	str	r3, [sp, #24]
    d70e:	f6c7 72ef 	movt	r2, #32751	; 0x7fef
    d712:	9309      	str	r3, [sp, #36]	; 0x24
    d714:	9207      	str	r2, [sp, #28]
    d716:	920a      	str	r2, [sp, #40]	; 0x28
    d718:	e610      	b.n	d33c <_strtod_r+0x534>
    d71a:	4649      	mov	r1, r9
    d71c:	980c      	ldr	r0, [sp, #48]	; 0x30
    d71e:	f002 ff33 	bl	10588 <__aeabi_d2iz>
    d722:	f002 fc31 	bl	ff88 <__aeabi_i2d>
    d726:	4602      	mov	r2, r0
    d728:	460b      	mov	r3, r1
    d72a:	980c      	ldr	r0, [sp, #48]	; 0x30
    d72c:	4649      	mov	r1, r9
    d72e:	f002 fadd 	bl	fcec <__aeabi_dsub>
    d732:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    d734:	4680      	mov	r8, r0
    d736:	4689      	mov	r9, r1
    d738:	2d00      	cmp	r5, #0
    d73a:	d137      	bne.n	d7ac <_strtod_r+0x9a4>
    d73c:	9a06      	ldr	r2, [sp, #24]
    d73e:	2a00      	cmp	r2, #0
    d740:	d134      	bne.n	d7ac <_strtod_r+0x9a4>
    d742:	f3c4 0413 	ubfx	r4, r4, #0, #20
    d746:	2c00      	cmp	r4, #0
    d748:	d130      	bne.n	d7ac <_strtod_r+0x9a4>
    d74a:	a357      	add	r3, pc, #348	; (adr r3, d8a8 <_strtod_r+0xaa0>)
    d74c:	e9d3 2300 	ldrd	r2, r3, [r3]
    d750:	f002 fef2 	bl	10538 <__aeabi_dcmplt>
    d754:	2800      	cmp	r0, #0
    d756:	f43f adf1 	beq.w	d33c <_strtod_r+0x534>
    d75a:	4654      	mov	r4, sl
    d75c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    d760:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
    d764:	4658      	mov	r0, fp
    d766:	9918      	ldr	r1, [sp, #96]	; 0x60
    d768:	f000 ffee 	bl	e748 <_Bfree>
    d76c:	4658      	mov	r0, fp
    d76e:	4621      	mov	r1, r4
    d770:	f000 ffea 	bl	e748 <_Bfree>
    d774:	4658      	mov	r0, fp
    d776:	4639      	mov	r1, r7
    d778:	f000 ffe6 	bl	e748 <_Bfree>
    d77c:	4658      	mov	r0, fp
    d77e:	9911      	ldr	r1, [sp, #68]	; 0x44
    d780:	f000 ffe2 	bl	e748 <_Bfree>
    d784:	4658      	mov	r0, fp
    d786:	4631      	mov	r1, r6
    d788:	f000 ffde 	bl	e748 <_Bfree>
    d78c:	e481      	b.n	d092 <_strtod_r+0x28a>
    d78e:	2b01      	cmp	r3, #1
    d790:	f47f af7b 	bne.w	d68a <_strtod_r+0x882>
    d794:	4661      	mov	r1, ip
    d796:	2900      	cmp	r1, #0
    d798:	f47f af77 	bne.w	d68a <_strtod_r+0x882>
    d79c:	4654      	mov	r4, sl
    d79e:	f04f 0a00 	mov.w	sl, #0
    d7a2:	46d1      	mov	r9, sl
    d7a4:	2322      	movs	r3, #34	; 0x22
    d7a6:	f8cb 3000 	str.w	r3, [fp]
    d7aa:	e7db      	b.n	d764 <_strtod_r+0x95c>
    d7ac:	4640      	mov	r0, r8
    d7ae:	4649      	mov	r1, r9
    d7b0:	a33f      	add	r3, pc, #252	; (adr r3, d8b0 <_strtod_r+0xaa8>)
    d7b2:	e9d3 2300 	ldrd	r2, r3, [r3]
    d7b6:	f002 febf 	bl	10538 <__aeabi_dcmplt>
    d7ba:	2800      	cmp	r0, #0
    d7bc:	d1cd      	bne.n	d75a <_strtod_r+0x952>
    d7be:	4640      	mov	r0, r8
    d7c0:	4649      	mov	r1, r9
    d7c2:	a33d      	add	r3, pc, #244	; (adr r3, d8b8 <_strtod_r+0xab0>)
    d7c4:	e9d3 2300 	ldrd	r2, r3, [r3]
    d7c8:	f002 fed4 	bl	10574 <__aeabi_dcmpgt>
    d7cc:	2800      	cmp	r0, #0
    d7ce:	f43f adb5 	beq.w	d33c <_strtod_r+0x534>
    d7d2:	e7c2      	b.n	d75a <_strtod_r+0x952>
    d7d4:	f04f 0900 	mov.w	r9, #0
    d7d8:	900c      	str	r0, [sp, #48]	; 0x30
    d7da:	f6c3 79f0 	movt	r9, #16368	; 0x3ff0
    d7de:	e584      	b.n	d2ea <_strtod_r+0x4e2>
    d7e0:	9906      	ldr	r1, [sp, #24]
    d7e2:	f104 7454 	add.w	r4, r4, #55574528	; 0x3500000
    d7e6:	9407      	str	r4, [sp, #28]
    d7e8:	940a      	str	r4, [sp, #40]	; 0x28
    d7ea:	9109      	str	r1, [sp, #36]	; 0x24
    d7ec:	e59d      	b.n	d32a <_strtod_r+0x522>
    d7ee:	9517      	str	r5, [sp, #92]	; 0x5c
    d7f0:	2300      	movs	r3, #0
    d7f2:	f1b8 0f00 	cmp.w	r8, #0
    d7f6:	f47f abff 	bne.w	cff8 <_strtod_r+0x1f0>
    d7fa:	e478      	b.n	d0ee <_strtod_r+0x2e6>
    d7fc:	9c12      	ldr	r4, [sp, #72]	; 0x48
    d7fe:	ab18      	add	r3, sp, #96	; 0x60
    d800:	4d30      	ldr	r5, [pc, #192]	; (d8c4 <_strtod_r+0xabc>)
    d802:	4658      	mov	r0, fp
    d804:	9300      	str	r3, [sp, #0]
    d806:	a917      	add	r1, sp, #92	; 0x5c
    d808:	9401      	str	r4, [sp, #4]
    d80a:	462a      	mov	r2, r5
    d80c:	ab19      	add	r3, sp, #100	; 0x64
    d80e:	f000 fba7 	bl	df60 <__gethex>
    d812:	f010 0707 	ands.w	r7, r0, #7
    d816:	4604      	mov	r4, r0
    d818:	bf04      	itt	eq
    d81a:	46ba      	moveq	sl, r7
    d81c:	46d1      	moveq	r9, sl
    d81e:	f43f ac38 	beq.w	d092 <_strtod_r+0x28a>
    d822:	2f06      	cmp	r7, #6
    d824:	f000 811a 	beq.w	da5c <_strtod_r+0xc54>
    d828:	9a18      	ldr	r2, [sp, #96]	; 0x60
    d82a:	b13a      	cbz	r2, d83c <_strtod_r+0xa34>
    d82c:	6829      	ldr	r1, [r5, #0]
    d82e:	a81a      	add	r0, sp, #104	; 0x68
    d830:	f001 fb82 	bl	ef38 <__copybits>
    d834:	4658      	mov	r0, fp
    d836:	9918      	ldr	r1, [sp, #96]	; 0x60
    d838:	f000 ff86 	bl	e748 <_Bfree>
    d83c:	3f01      	subs	r7, #1
    d83e:	9b19      	ldr	r3, [sp, #100]	; 0x64
    d840:	2f04      	cmp	r7, #4
    d842:	d80a      	bhi.n	d85a <_strtod_r+0xa52>
    d844:	e8df f007 	tbb	[pc, r7]
    d848:	0313191e 	.word	0x0313191e
    d84c:	1e          	.byte	0x1e
    d84d:	00          	.byte	0x00
    d84e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
    d852:	f04f 31ff 	mov.w	r1, #4294967295
    d856:	9007      	str	r0, [sp, #28]
    d858:	9106      	str	r1, [sp, #24]
    d85a:	0723      	lsls	r3, r4, #28
    d85c:	f57f ac9a 	bpl.w	d194 <_strtod_r+0x38c>
    d860:	9a07      	ldr	r2, [sp, #28]
    d862:	f8dd a018 	ldr.w	sl, [sp, #24]
    d866:	f042 4300 	orr.w	r3, r2, #2147483648	; 0x80000000
    d86a:	4699      	mov	r9, r3
    d86c:	e411      	b.n	d092 <_strtod_r+0x28a>
    d86e:	2300      	movs	r3, #0
    d870:	461d      	mov	r5, r3
    d872:	f6c7 75f0 	movt	r5, #32752	; 0x7ff0
    d876:	9507      	str	r5, [sp, #28]
    d878:	e7ef      	b.n	d85a <_strtod_r+0xa52>
    d87a:	981a      	ldr	r0, [sp, #104]	; 0x68
    d87c:	991b      	ldr	r1, [sp, #108]	; 0x6c
    d87e:	9006      	str	r0, [sp, #24]
    d880:	9107      	str	r1, [sp, #28]
    d882:	e7ea      	b.n	d85a <_strtod_r+0xa52>
    d884:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    d886:	f203 4333 	addw	r3, r3, #1075	; 0x433
    d88a:	9206      	str	r2, [sp, #24]
    d88c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    d88e:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
    d892:	ea42 5203 	orr.w	r2, r2, r3, lsl #20
    d896:	9207      	str	r2, [sp, #28]
    d898:	e7df      	b.n	d85a <_strtod_r+0xa52>
    d89a:	46b0      	mov	r8, r6
    d89c:	4657      	mov	r7, sl
    d89e:	4654      	mov	r4, sl
    d8a0:	f7ff bb2a 	b.w	cef8 <_strtod_r+0xf0>
    d8a4:	f3af 8000 	nop.w
    d8a8:	94a03595 	.word	0x94a03595
    d8ac:	3fcfffff 	.word	0x3fcfffff
    d8b0:	94a03595 	.word	0x94a03595
    d8b4:	3fdfffff 	.word	0x3fdfffff
    d8b8:	35afe535 	.word	0x35afe535
    d8bc:	3fe00000 	.word	0x3fe00000
    d8c0:	00010d97 	.word	0x00010d97
    d8c4:	10000024 	.word	0x10000024
    d8c8:	00010fe0 	.word	0x00010fe0
    d8cc:	2300      	movs	r3, #0
    d8ce:	930a      	str	r3, [sp, #40]	; 0x28
    d8d0:	e69a      	b.n	d608 <_strtod_r+0x800>
    d8d2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    d8d4:	4654      	mov	r4, sl
    d8d6:	bb7d      	cbnz	r5, d938 <_strtod_r+0xb30>
    d8d8:	9806      	ldr	r0, [sp, #24]
    d8da:	bb68      	cbnz	r0, d938 <_strtod_r+0xb30>
    d8dc:	9a07      	ldr	r2, [sp, #28]
    d8de:	f3c2 0313 	ubfx	r3, r2, #0, #20
    d8e2:	bb4b      	cbnz	r3, d938 <_strtod_r+0xb30>
    d8e4:	4643      	mov	r3, r8
    d8e6:	f6c7 73f0 	movt	r3, #32752	; 0x7ff0
    d8ea:	4013      	ands	r3, r2
    d8ec:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
    d8f0:	d922      	bls.n	d938 <_strtod_r+0xb30>
    d8f2:	6973      	ldr	r3, [r6, #20]
    d8f4:	b913      	cbnz	r3, d8fc <_strtod_r+0xaf4>
    d8f6:	6933      	ldr	r3, [r6, #16]
    d8f8:	2b01      	cmp	r3, #1
    d8fa:	dd1d      	ble.n	d938 <_strtod_r+0xb30>
    d8fc:	4631      	mov	r1, r6
    d8fe:	2201      	movs	r2, #1
    d900:	4658      	mov	r0, fp
    d902:	f001 f903 	bl	eb0c <__lshift>
    d906:	4639      	mov	r1, r7
    d908:	4606      	mov	r6, r0
    d90a:	f001 f95f 	bl	ebcc <__mcmp>
    d90e:	2800      	cmp	r0, #0
    d910:	dd12      	ble.n	d938 <_strtod_r+0xb30>
    d912:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    d914:	2d00      	cmp	r5, #0
    d916:	f040 818d 	bne.w	dc34 <_strtod_r+0xe2c>
    d91a:	9807      	ldr	r0, [sp, #28]
    d91c:	f020 4300 	bic.w	r3, r0, #2147483648	; 0x80000000
    d920:	0d1b      	lsrs	r3, r3, #20
    d922:	051b      	lsls	r3, r3, #20
    d924:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
    d928:	f04f 32ff 	mov.w	r2, #4294967295
    d92c:	9206      	str	r2, [sp, #24]
    d92e:	ea6f 5313 	mvn.w	r3, r3, lsr #20
    d932:	ea6f 5303 	mvn.w	r3, r3, lsl #20
    d936:	9307      	str	r3, [sp, #28]
    d938:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    d93a:	2d00      	cmp	r5, #0
    d93c:	f000 8082 	beq.w	da44 <_strtod_r+0xc3c>
    d940:	2200      	movs	r2, #0
    d942:	2300      	movs	r3, #0
    d944:	f6c3 1250 	movt	r2, #14672	; 0x3950
    d948:	9314      	str	r3, [sp, #80]	; 0x50
    d94a:	9215      	str	r2, [sp, #84]	; 0x54
    d94c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    d950:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
    d954:	f002 fb7e 	bl	10054 <__aeabi_dmul>
    d958:	e9cd 0106 	strd	r0, r1, [sp, #24]
    d95c:	4689      	mov	r9, r1
    d95e:	9907      	ldr	r1, [sp, #28]
    d960:	4682      	mov	sl, r0
    d962:	2900      	cmp	r1, #0
    d964:	f47f aefe 	bne.w	d764 <_strtod_r+0x95c>
    d968:	9a06      	ldr	r2, [sp, #24]
    d96a:	2a00      	cmp	r2, #0
    d96c:	f47f aefa 	bne.w	d764 <_strtod_r+0x95c>
    d970:	e718      	b.n	d7a4 <_strtod_r+0x99c>
    d972:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    d974:	4654      	mov	r4, sl
    d976:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
    d97a:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
    d97e:	2d00      	cmp	r5, #0
    d980:	f000 8091 	beq.w	daa6 <_strtod_r+0xc9e>
    d984:	9b07      	ldr	r3, [sp, #28]
    d986:	f64f 72ff 	movw	r2, #65535	; 0xffff
    d98a:	f2c0 020f 	movt	r2, #15
    d98e:	f023 417f 	bic.w	r1, r3, #4278190080	; 0xff000000
    d992:	f421 0170 	bic.w	r1, r1, #15728640	; 0xf00000
    d996:	4291      	cmp	r1, r2
    d998:	9906      	ldr	r1, [sp, #24]
    d99a:	f000 80c9 	beq.w	db30 <_strtod_r+0xd28>
    d99e:	07cb      	lsls	r3, r1, #31
    d9a0:	d5ca      	bpl.n	d938 <_strtod_r+0xb30>
    d9a2:	4650      	mov	r0, sl
    d9a4:	4649      	mov	r1, r9
    d9a6:	f001 f9a5 	bl	ecf4 <__ulp>
    d9aa:	4602      	mov	r2, r0
    d9ac:	460b      	mov	r3, r1
    d9ae:	4650      	mov	r0, sl
    d9b0:	4649      	mov	r1, r9
    d9b2:	f002 f99d 	bl	fcf0 <__adddf3>
    d9b6:	e9cd 0106 	strd	r0, r1, [sp, #24]
    d9ba:	e7bd      	b.n	d938 <_strtod_r+0xb30>
    d9bc:	9814      	ldr	r0, [sp, #80]	; 0x50
    d9be:	3001      	adds	r0, #1
    d9c0:	f47f ae9f 	bne.w	d702 <_strtod_r+0x8fa>
    d9c4:	2300      	movs	r3, #0
    d9c6:	2000      	movs	r0, #0
    d9c8:	461d      	mov	r5, r3
    d9ca:	4654      	mov	r4, sl
    d9cc:	f6c7 75f0 	movt	r5, #32752	; 0x7ff0
    d9d0:	2322      	movs	r3, #34	; 0x22
    d9d2:	9507      	str	r5, [sp, #28]
    d9d4:	4682      	mov	sl, r0
    d9d6:	f8cb 3000 	str.w	r3, [fp]
    d9da:	46a9      	mov	r9, r5
    d9dc:	9006      	str	r0, [sp, #24]
    d9de:	e6c1      	b.n	d764 <_strtod_r+0x95c>
    d9e0:	2000      	movs	r0, #0
    d9e2:	2322      	movs	r3, #34	; 0x22
    d9e4:	4601      	mov	r1, r0
    d9e6:	f8cb 3000 	str.w	r3, [fp]
    d9ea:	f6c7 71f0 	movt	r1, #32752	; 0x7ff0
    d9ee:	9006      	str	r0, [sp, #24]
    d9f0:	9107      	str	r1, [sp, #28]
    d9f2:	4682      	mov	sl, r0
    d9f4:	4689      	mov	r9, r1
    d9f6:	f7ff bb4c 	b.w	d092 <_strtod_r+0x28a>
    d9fa:	f43f ac1a 	beq.w	d232 <_strtod_r+0x42a>
    d9fe:	f1c4 0900 	rsb	r9, r4, #0
    da02:	f019 030f 	ands.w	r3, r9, #15
    da06:	d00a      	beq.n	da1e <_strtod_r+0xc16>
    da08:	4aa6      	ldr	r2, [pc, #664]	; (dca4 <_strtod_r+0xe9c>)
    da0a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    da0e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
    da12:	e9d3 2300 	ldrd	r2, r3, [r3]
    da16:	f002 fc47 	bl	102a8 <__aeabi_ddiv>
    da1a:	e9cd 0106 	strd	r0, r1, [sp, #24]
    da1e:	ea5f 1529 	movs.w	r5, r9, asr #4
    da22:	f040 80be 	bne.w	dba2 <_strtod_r+0xd9a>
    da26:	f8dd a018 	ldr.w	sl, [sp, #24]
    da2a:	f8dd 901c 	ldr.w	r9, [sp, #28]
    da2e:	950b      	str	r5, [sp, #44]	; 0x2c
    da30:	e404      	b.n	d23c <_strtod_r+0x434>
    da32:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    da34:	2300      	movs	r3, #0
    da36:	4699      	mov	r9, r3
    da38:	f6cb 73e0 	movt	r3, #49120	; 0xbfe0
    da3c:	f6c3 79e0 	movt	r9, #16352	; 0x3fe0
    da40:	920c      	str	r2, [sp, #48]	; 0x30
    da42:	e61f      	b.n	d684 <_strtod_r+0x87c>
    da44:	f8dd a018 	ldr.w	sl, [sp, #24]
    da48:	f8dd 901c 	ldr.w	r9, [sp, #28]
    da4c:	e68a      	b.n	d764 <_strtod_r+0x95c>
    da4e:	2301      	movs	r3, #1
    da50:	46b4      	mov	ip, r6
    da52:	4601      	mov	r1, r0
    da54:	f04f 0800 	mov.w	r8, #0
    da58:	4699      	mov	r9, r3
    da5a:	e561      	b.n	d520 <_strtod_r+0x718>
    da5c:	f04f 0a00 	mov.w	sl, #0
    da60:	3601      	adds	r6, #1
    da62:	46d1      	mov	r9, sl
    da64:	9617      	str	r6, [sp, #92]	; 0x5c
    da66:	f7ff bb14 	b.w	d092 <_strtod_r+0x28a>
    da6a:	9c09      	ldr	r4, [sp, #36]	; 0x24
    da6c:	f1c8 0325 	rsb	r3, r8, #37	; 0x25
    da70:	429c      	cmp	r4, r3
    da72:	f73f abc4 	bgt.w	d1fe <_strtod_r+0x3f6>
    da76:	f1c8 080f 	rsb	r8, r8, #15
    da7a:	4c8a      	ldr	r4, [pc, #552]	; (dca4 <_strtod_r+0xe9c>)
    da7c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    da80:	eb04 01c8 	add.w	r1, r4, r8, lsl #3
    da84:	e9d1 0100 	ldrd	r0, r1, [r1]
    da88:	f002 fae4 	bl	10054 <__aeabi_dmul>
    da8c:	9d09      	ldr	r5, [sp, #36]	; 0x24
    da8e:	ebc8 0805 	rsb	r8, r8, r5
    da92:	eb04 04c8 	add.w	r4, r4, r8, lsl #3
    da96:	e9d4 2300 	ldrd	r2, r3, [r4]
    da9a:	f002 fadb 	bl	10054 <__aeabi_dmul>
    da9e:	4682      	mov	sl, r0
    daa0:	4689      	mov	r9, r1
    daa2:	f7ff baf6 	b.w	d092 <_strtod_r+0x28a>
    daa6:	9907      	ldr	r1, [sp, #28]
    daa8:	f3c1 0313 	ubfx	r3, r1, #0, #20
    daac:	2b00      	cmp	r3, #0
    daae:	d133      	bne.n	db18 <_strtod_r+0xd10>
    dab0:	9b06      	ldr	r3, [sp, #24]
    dab2:	2b00      	cmp	r3, #0
    dab4:	f43f af2d 	beq.w	d912 <_strtod_r+0xb0a>
    dab8:	07da      	lsls	r2, r3, #31
    daba:	f57f af3d 	bpl.w	d938 <_strtod_r+0xb30>
    dabe:	4650      	mov	r0, sl
    dac0:	4649      	mov	r1, r9
    dac2:	f001 f917 	bl	ecf4 <__ulp>
    dac6:	4602      	mov	r2, r0
    dac8:	460b      	mov	r3, r1
    daca:	4650      	mov	r0, sl
    dacc:	4649      	mov	r1, r9
    dace:	f002 f90d 	bl	fcec <__aeabi_dsub>
    dad2:	4602      	mov	r2, r0
    dad4:	460b      	mov	r3, r1
    dad6:	e9cd 2306 	strd	r2, r3, [sp, #24]
    dada:	2200      	movs	r2, #0
    dadc:	2300      	movs	r3, #0
    dade:	f002 fd21 	bl	10524 <__aeabi_dcmpeq>
    dae2:	2800      	cmp	r0, #0
    dae4:	f47f ae5b 	bne.w	d79e <_strtod_r+0x996>
    dae8:	e726      	b.n	d938 <_strtod_r+0xb30>
    daea:	9d09      	ldr	r5, [sp, #36]	; 0x24
    daec:	426d      	negs	r5, r5
    daee:	950d      	str	r5, [sp, #52]	; 0x34
    daf0:	f7ff bbb2 	b.w	d258 <_strtod_r+0x450>
    daf4:	9c09      	ldr	r4, [sp, #36]	; 0x24
    daf6:	f114 0f16 	cmn.w	r4, #22
    dafa:	f6ff ab80 	blt.w	d1fe <_strtod_r+0x3f6>
    dafe:	4b69      	ldr	r3, [pc, #420]	; (dca4 <_strtod_r+0xe9c>)
    db00:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
    db04:	eba3 0ac4 	sub.w	sl, r3, r4, lsl #3
    db08:	e9da 2300 	ldrd	r2, r3, [sl]
    db0c:	f002 fbcc 	bl	102a8 <__aeabi_ddiv>
    db10:	4682      	mov	sl, r0
    db12:	4689      	mov	r9, r1
    db14:	f7ff babd 	b.w	d092 <_strtod_r+0x28a>
    db18:	9b06      	ldr	r3, [sp, #24]
    db1a:	e7cd      	b.n	dab8 <_strtod_r+0xcb0>
    db1c:	f101 7154 	add.w	r1, r1, #55574528	; 0x3500000
    db20:	2400      	movs	r4, #0
    db22:	9107      	str	r1, [sp, #28]
    db24:	4689      	mov	r9, r1
    db26:	940b      	str	r4, [sp, #44]	; 0x2c
    db28:	f8dd a018 	ldr.w	sl, [sp, #24]
    db2c:	f7ff bb86 	b.w	d23c <_strtod_r+0x434>
    db30:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    db32:	2d00      	cmp	r5, #0
    db34:	d07b      	beq.n	dc2e <_strtod_r+0xe26>
    db36:	2200      	movs	r2, #0
    db38:	f6c7 72f0 	movt	r2, #32752	; 0x7ff0
    db3c:	401a      	ands	r2, r3
    db3e:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
    db42:	d874      	bhi.n	dc2e <_strtod_r+0xe26>
    db44:	0d12      	lsrs	r2, r2, #20
    db46:	f04f 30ff 	mov.w	r0, #4294967295
    db4a:	f1c2 026b 	rsb	r2, r2, #107	; 0x6b
    db4e:	fa00 f202 	lsl.w	r2, r0, r2
    db52:	4291      	cmp	r1, r2
    db54:	f47f af23 	bne.w	d99e <_strtod_r+0xb96>
    db58:	2200      	movs	r2, #0
    db5a:	2000      	movs	r0, #0
    db5c:	f6c7 72f0 	movt	r2, #32752	; 0x7ff0
    db60:	9006      	str	r0, [sp, #24]
    db62:	401a      	ands	r2, r3
    db64:	f502 1280 	add.w	r2, r2, #1048576	; 0x100000
    db68:	9207      	str	r2, [sp, #28]
    db6a:	e6e5      	b.n	d938 <_strtod_r+0xb30>
    db6c:	4c4e      	ldr	r4, [pc, #312]	; (dca8 <_strtod_r+0xea0>)
    db6e:	4611      	mov	r1, r2
    db70:	9217      	str	r2, [sp, #92]	; 0x5c
    db72:	f814 0f01 	ldrb.w	r0, [r4, #1]!
    db76:	460b      	mov	r3, r1
    db78:	2800      	cmp	r0, #0
    db7a:	d069      	beq.n	dc50 <_strtod_r+0xe48>
    db7c:	785b      	ldrb	r3, [r3, #1]
    db7e:	3101      	adds	r1, #1
    db80:	2b40      	cmp	r3, #64	; 0x40
    db82:	dd02      	ble.n	db8a <_strtod_r+0xd82>
    db84:	2b5a      	cmp	r3, #90	; 0x5a
    db86:	bfd8      	it	le
    db88:	3320      	addle	r3, #32
    db8a:	4283      	cmp	r3, r0
    db8c:	d0f1      	beq.n	db72 <_strtod_r+0xd6a>
    db8e:	3201      	adds	r2, #1
    db90:	9217      	str	r2, [sp, #92]	; 0x5c
    db92:	2500      	movs	r5, #0
    db94:	9506      	str	r5, [sp, #24]
    db96:	4628      	mov	r0, r5
    db98:	f6c7 70f0 	movt	r0, #32752	; 0x7ff0
    db9c:	9007      	str	r0, [sp, #28]
    db9e:	f7ff baf9 	b.w	d194 <_strtod_r+0x38c>
    dba2:	2d1f      	cmp	r5, #31
    dba4:	dc3b      	bgt.n	dc1e <_strtod_r+0xe16>
    dba6:	f015 0f10 	tst.w	r5, #16
    dbaa:	bf14      	ite	ne
    dbac:	246a      	movne	r4, #106	; 0x6a
    dbae:	2400      	moveq	r4, #0
    dbb0:	2d00      	cmp	r5, #0
    dbb2:	940b      	str	r4, [sp, #44]	; 0x2c
    dbb4:	dd14      	ble.n	dbe0 <_strtod_r+0xdd8>
    dbb6:	4c3d      	ldr	r4, [pc, #244]	; (dcac <_strtod_r+0xea4>)
    dbb8:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    dbbc:	f015 0f01 	tst.w	r5, #1
    dbc0:	4610      	mov	r0, r2
    dbc2:	4619      	mov	r1, r3
    dbc4:	d005      	beq.n	dbd2 <_strtod_r+0xdca>
    dbc6:	e9d4 2300 	ldrd	r2, r3, [r4]
    dbca:	f002 fa43 	bl	10054 <__aeabi_dmul>
    dbce:	4602      	mov	r2, r0
    dbd0:	460b      	mov	r3, r1
    dbd2:	3408      	adds	r4, #8
    dbd4:	106d      	asrs	r5, r5, #1
    dbd6:	d1f1      	bne.n	dbbc <_strtod_r+0xdb4>
    dbd8:	4610      	mov	r0, r2
    dbda:	4619      	mov	r1, r3
    dbdc:	e9cd 0106 	strd	r0, r1, [sp, #24]
    dbe0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    dbe2:	b17d      	cbz	r5, dc04 <_strtod_r+0xdfc>
    dbe4:	9a07      	ldr	r2, [sp, #28]
    dbe6:	f3c2 530a 	ubfx	r3, r2, #20, #11
    dbea:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    dbee:	2b00      	cmp	r3, #0
    dbf0:	dd08      	ble.n	dc04 <_strtod_r+0xdfc>
    dbf2:	2b1f      	cmp	r3, #31
    dbf4:	dd45      	ble.n	dc82 <_strtod_r+0xe7a>
    dbf6:	2100      	movs	r1, #0
    dbf8:	2b34      	cmp	r3, #52	; 0x34
    dbfa:	9106      	str	r1, [sp, #24]
    dbfc:	dd49      	ble.n	dc92 <_strtod_r+0xe8a>
    dbfe:	f04f 725c 	mov.w	r2, #57671680	; 0x3700000
    dc02:	9207      	str	r2, [sp, #28]
    dc04:	9d06      	ldr	r5, [sp, #24]
    dc06:	2200      	movs	r2, #0
    dc08:	9c07      	ldr	r4, [sp, #28]
    dc0a:	2300      	movs	r3, #0
    dc0c:	4628      	mov	r0, r5
    dc0e:	46aa      	mov	sl, r5
    dc10:	4621      	mov	r1, r4
    dc12:	46a1      	mov	r9, r4
    dc14:	f002 fc86 	bl	10524 <__aeabi_dcmpeq>
    dc18:	2800      	cmp	r0, #0
    dc1a:	f43f ab0f 	beq.w	d23c <_strtod_r+0x434>
    dc1e:	f04f 0a00 	mov.w	sl, #0
    dc22:	2322      	movs	r3, #34	; 0x22
    dc24:	46d1      	mov	r9, sl
    dc26:	f8cb 3000 	str.w	r3, [fp]
    dc2a:	f7ff ba32 	b.w	d092 <_strtod_r+0x28a>
    dc2e:	f04f 32ff 	mov.w	r2, #4294967295
    dc32:	e78e      	b.n	db52 <_strtod_r+0xd4a>
    dc34:	9907      	ldr	r1, [sp, #28]
    dc36:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
    dc3a:	0d1b      	lsrs	r3, r3, #20
    dc3c:	051b      	lsls	r3, r3, #20
    dc3e:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
    dc42:	f63f ae6f 	bhi.w	d924 <_strtod_r+0xb1c>
    dc46:	f1b3 7f5c 	cmp.w	r3, #57671680	; 0x3700000
    dc4a:	f63f ae79 	bhi.w	d940 <_strtod_r+0xb38>
    dc4e:	e5a6      	b.n	d79e <_strtod_r+0x996>
    dc50:	3101      	adds	r1, #1
    dc52:	9117      	str	r1, [sp, #92]	; 0x5c
    dc54:	e79d      	b.n	db92 <_strtod_r+0xd8a>
    dc56:	2500      	movs	r5, #0
    dc58:	e4a7      	b.n	d5aa <_strtod_r+0x7a2>
    dc5a:	4603      	mov	r3, r0
    dc5c:	e460      	b.n	d520 <_strtod_r+0x718>
    dc5e:	a817      	add	r0, sp, #92	; 0x5c
    dc60:	4913      	ldr	r1, [pc, #76]	; (dcb0 <_strtod_r+0xea8>)
    dc62:	aa1a      	add	r2, sp, #104	; 0x68
    dc64:	f000 fc26 	bl	e4b4 <__hexnan>
    dc68:	2805      	cmp	r0, #5
    dc6a:	f47f aa8d 	bne.w	d188 <_strtod_r+0x380>
    dc6e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    dc70:	9a1a      	ldr	r2, [sp, #104]	; 0x68
    dc72:	f043 43ff 	orr.w	r3, r3, #2139095040	; 0x7f800000
    dc76:	f443 03e0 	orr.w	r3, r3, #7340032	; 0x700000
    dc7a:	9307      	str	r3, [sp, #28]
    dc7c:	9206      	str	r2, [sp, #24]
    dc7e:	f7ff ba89 	b.w	d194 <_strtod_r+0x38c>
    dc82:	f04f 32ff 	mov.w	r2, #4294967295
    dc86:	9c06      	ldr	r4, [sp, #24]
    dc88:	fa02 f303 	lsl.w	r3, r2, r3
    dc8c:	401c      	ands	r4, r3
    dc8e:	9406      	str	r4, [sp, #24]
    dc90:	e7b8      	b.n	dc04 <_strtod_r+0xdfc>
    dc92:	f04f 31ff 	mov.w	r1, #4294967295
    dc96:	3b20      	subs	r3, #32
    dc98:	fa01 f303 	lsl.w	r3, r1, r3
    dc9c:	4013      	ands	r3, r2
    dc9e:	9307      	str	r3, [sp, #28]
    dca0:	e7b0      	b.n	dc04 <_strtod_r+0xdfc>
    dca2:	bf00      	nop
    dca4:	00010ef0 	.word	0x00010ef0
    dca8:	00010d9b 	.word	0x00010d9b
    dcac:	00010d70 	.word	0x00010d70
    dcb0:	10000038 	.word	0x10000038

0000dcb4 <strtod>:
    dcb4:	f240 0350 	movw	r3, #80	; 0x50
    dcb8:	460a      	mov	r2, r1
    dcba:	f2c1 0300 	movt	r3, #4096	; 0x1000
    dcbe:	4601      	mov	r1, r0
    dcc0:	6818      	ldr	r0, [r3, #0]
    dcc2:	f7ff b8a1 	b.w	ce08 <_strtod_r>
    dcc6:	bf00      	nop

0000dcc8 <strtof>:
    dcc8:	b538      	push	{r3, r4, r5, lr}
    dcca:	460a      	mov	r2, r1
    dccc:	4b09      	ldr	r3, [pc, #36]	; (dcf4 <strtof+0x2c>)
    dcce:	4601      	mov	r1, r0
    dcd0:	6818      	ldr	r0, [r3, #0]
    dcd2:	f7ff f899 	bl	ce08 <_strtod_r>
    dcd6:	4604      	mov	r4, r0
    dcd8:	460d      	mov	r5, r1
    dcda:	f001 f97d 	bl	efd8 <__fpclassifyd>
    dcde:	b120      	cbz	r0, dcea <strtof+0x22>
    dce0:	4620      	mov	r0, r4
    dce2:	4629      	mov	r1, r5
    dce4:	f002 fc98 	bl	10618 <__aeabi_d2f>
    dce8:	bd38      	pop	{r3, r4, r5, pc}
    dcea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    dcee:	f001 b99b 	b.w	f028 <nanf>
    dcf2:	bf00      	nop
    dcf4:	10000050 	.word	0x10000050

0000dcf8 <_strtoul_r>:
    dcf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dcfc:	468a      	mov	sl, r1
    dcfe:	4693      	mov	fp, r2
    dd00:	461a      	mov	r2, r3
    dd02:	460b      	mov	r3, r1
    dd04:	494e      	ldr	r1, [pc, #312]	; (de40 <_strtoul_r+0x148>)
    dd06:	b085      	sub	sp, #20
    dd08:	f8d1 8000 	ldr.w	r8, [r1]
    dd0c:	9003      	str	r0, [sp, #12]
    dd0e:	461c      	mov	r4, r3
    dd10:	f814 5b01 	ldrb.w	r5, [r4], #1
    dd14:	eb08 0105 	add.w	r1, r8, r5
    dd18:	4623      	mov	r3, r4
    dd1a:	7849      	ldrb	r1, [r1, #1]
    dd1c:	f001 0108 	and.w	r1, r1, #8
    dd20:	b2c9      	uxtb	r1, r1
    dd22:	2900      	cmp	r1, #0
    dd24:	d1f3      	bne.n	dd0e <_strtoul_r+0x16>
    dd26:	2d2d      	cmp	r5, #45	; 0x2d
    dd28:	d077      	beq.n	de1a <_strtoul_r+0x122>
    dd2a:	2d2b      	cmp	r5, #43	; 0x2b
    dd2c:	bf05      	ittet	eq
    dd2e:	9102      	streq	r1, [sp, #8]
    dd30:	4624      	moveq	r4, r4
    dd32:	9102      	strne	r1, [sp, #8]
    dd34:	f814 5b01 	ldrbeq.w	r5, [r4], #1
    dd38:	f032 0310 	bics.w	r3, r2, #16
    dd3c:	d115      	bne.n	dd6a <_strtoul_r+0x72>
    dd3e:	f1d2 0301 	rsbs	r3, r2, #1
    dd42:	bf38      	it	cc
    dd44:	2300      	movcc	r3, #0
    dd46:	2d30      	cmp	r5, #48	; 0x30
    dd48:	d008      	beq.n	dd5c <_strtoul_r+0x64>
    dd4a:	b173      	cbz	r3, dd6a <_strtoul_r+0x72>
    dd4c:	f649 1999 	movw	r9, #39321	; 0x9999
    dd50:	220a      	movs	r2, #10
    dd52:	2105      	movs	r1, #5
    dd54:	f6c1 1999 	movt	r9, #6553	; 0x1999
    dd58:	4694      	mov	ip, r2
    dd5a:	e015      	b.n	dd88 <_strtoul_r+0x90>
    dd5c:	7821      	ldrb	r1, [r4, #0]
    dd5e:	f001 01df 	and.w	r1, r1, #223	; 0xdf
    dd62:	2958      	cmp	r1, #88	; 0x58
    dd64:	d05e      	beq.n	de24 <_strtoul_r+0x12c>
    dd66:	2b00      	cmp	r3, #0
    dd68:	d164      	bne.n	de34 <_strtoul_r+0x13c>
    dd6a:	4611      	mov	r1, r2
    dd6c:	f04f 30ff 	mov.w	r0, #4294967295
    dd70:	9201      	str	r2, [sp, #4]
    dd72:	f001 fe79 	bl	fa68 <__aeabi_uidiv>
    dd76:	9a01      	ldr	r2, [sp, #4]
    dd78:	4611      	mov	r1, r2
    dd7a:	4681      	mov	r9, r0
    dd7c:	f04f 30ff 	mov.w	r0, #4294967295
    dd80:	f001 ffa0 	bl	fcc4 <__aeabi_uidivmod>
    dd84:	9a01      	ldr	r2, [sp, #4]
    dd86:	4694      	mov	ip, r2
    dd88:	2700      	movs	r7, #0
    dd8a:	4638      	mov	r0, r7
    dd8c:	e017      	b.n	ddbe <_strtoul_r+0xc6>
    dd8e:	3d30      	subs	r5, #48	; 0x30
    dd90:	42aa      	cmp	r2, r5
    dd92:	dd26      	ble.n	dde2 <_strtoul_r+0xea>
    dd94:	4548      	cmp	r0, r9
    dd96:	bf94      	ite	ls
    dd98:	2300      	movls	r3, #0
    dd9a:	2301      	movhi	r3, #1
    dd9c:	ea53 77d7 	orrs.w	r7, r3, r7, lsr #31
    dda0:	d12c      	bne.n	ddfc <_strtoul_r+0x104>
    dda2:	428d      	cmp	r5, r1
    dda4:	bfd4      	ite	le
    dda6:	2300      	movle	r3, #0
    dda8:	2301      	movgt	r3, #1
    ddaa:	4548      	cmp	r0, r9
    ddac:	bf18      	it	ne
    ddae:	2300      	movne	r3, #0
    ddb0:	2b00      	cmp	r3, #0
    ddb2:	d123      	bne.n	ddfc <_strtoul_r+0x104>
    ddb4:	fb0c 5000 	mla	r0, ip, r0, r5
    ddb8:	2701      	movs	r7, #1
    ddba:	f814 5b01 	ldrb.w	r5, [r4], #1
    ddbe:	eb08 0305 	add.w	r3, r8, r5
    ddc2:	785b      	ldrb	r3, [r3, #1]
    ddc4:	f003 0604 	and.w	r6, r3, #4
    ddc8:	b2f6      	uxtb	r6, r6
    ddca:	2e00      	cmp	r6, #0
    ddcc:	d1df      	bne.n	dd8e <_strtoul_r+0x96>
    ddce:	f013 0303 	ands.w	r3, r3, #3
    ddd2:	d006      	beq.n	dde2 <_strtoul_r+0xea>
    ddd4:	2b01      	cmp	r3, #1
    ddd6:	bf14      	ite	ne
    ddd8:	2357      	movne	r3, #87	; 0x57
    ddda:	2337      	moveq	r3, #55	; 0x37
    dddc:	1aed      	subs	r5, r5, r3
    ddde:	42aa      	cmp	r2, r5
    dde0:	dcd8      	bgt.n	dd94 <_strtoul_r+0x9c>
    dde2:	1c7b      	adds	r3, r7, #1
    dde4:	d00d      	beq.n	de02 <_strtoul_r+0x10a>
    dde6:	9b02      	ldr	r3, [sp, #8]
    dde8:	b9ab      	cbnz	r3, de16 <_strtoul_r+0x11e>
    ddea:	f1bb 0f00 	cmp.w	fp, #0
    ddee:	d002      	beq.n	ddf6 <_strtoul_r+0xfe>
    ddf0:	b977      	cbnz	r7, de10 <_strtoul_r+0x118>
    ddf2:	f8cb a000 	str.w	sl, [fp]
    ddf6:	b005      	add	sp, #20
    ddf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ddfc:	f04f 37ff 	mov.w	r7, #4294967295
    de00:	e7db      	b.n	ddba <_strtoul_r+0xc2>
    de02:	9a03      	ldr	r2, [sp, #12]
    de04:	2322      	movs	r3, #34	; 0x22
    de06:	4638      	mov	r0, r7
    de08:	6013      	str	r3, [r2, #0]
    de0a:	f1bb 0f00 	cmp.w	fp, #0
    de0e:	d0f2      	beq.n	ddf6 <_strtoul_r+0xfe>
    de10:	f104 3aff 	add.w	sl, r4, #4294967295
    de14:	e7ed      	b.n	ddf2 <_strtoul_r+0xfa>
    de16:	4240      	negs	r0, r0
    de18:	e7e7      	b.n	ddea <_strtoul_r+0xf2>
    de1a:	2301      	movs	r3, #1
    de1c:	f814 5b01 	ldrb.w	r5, [r4], #1
    de20:	9302      	str	r3, [sp, #8]
    de22:	e789      	b.n	dd38 <_strtoul_r+0x40>
    de24:	2210      	movs	r2, #16
    de26:	7865      	ldrb	r5, [r4, #1]
    de28:	210f      	movs	r1, #15
    de2a:	3402      	adds	r4, #2
    de2c:	f06f 4970 	mvn.w	r9, #4026531840	; 0xf0000000
    de30:	4694      	mov	ip, r2
    de32:	e7a9      	b.n	dd88 <_strtoul_r+0x90>
    de34:	2208      	movs	r2, #8
    de36:	2107      	movs	r1, #7
    de38:	f06f 4960 	mvn.w	r9, #3758096384	; 0xe0000000
    de3c:	4694      	mov	ip, r2
    de3e:	e7a3      	b.n	dd88 <_strtoul_r+0x90>
    de40:	1000004c 	.word	0x1000004c

0000de44 <strtoul>:
    de44:	b430      	push	{r4, r5}
    de46:	f240 0450 	movw	r4, #80	; 0x50
    de4a:	f2c1 0400 	movt	r4, #4096	; 0x1000
    de4e:	460d      	mov	r5, r1
    de50:	4613      	mov	r3, r2
    de52:	4601      	mov	r1, r0
    de54:	462a      	mov	r2, r5
    de56:	6820      	ldr	r0, [r4, #0]
    de58:	bc30      	pop	{r4, r5}
    de5a:	f7ff bf4d 	b.w	dcf8 <_strtoul_r>
    de5e:	bf00      	nop

0000de60 <rshift>:
    de60:	6902      	ldr	r2, [r0, #16]
    de62:	114b      	asrs	r3, r1, #5
    de64:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
    de68:	4293      	cmp	r3, r2
    de6a:	f100 0714 	add.w	r7, r0, #20
    de6e:	da2d      	bge.n	decc <rshift+0x6c>
    de70:	3304      	adds	r3, #4
    de72:	eb00 0282 	add.w	r2, r0, r2, lsl #2
    de76:	3214      	adds	r2, #20
    de78:	f011 011f 	ands.w	r1, r1, #31
    de7c:	eb00 0383 	add.w	r3, r0, r3, lsl #2
    de80:	f103 0c04 	add.w	ip, r3, #4
    de84:	d029      	beq.n	deda <rshift+0x7a>
    de86:	685c      	ldr	r4, [r3, #4]
    de88:	f10c 0304 	add.w	r3, ip, #4
    de8c:	429a      	cmp	r2, r3
    de8e:	f1c1 0820 	rsb	r8, r1, #32
    de92:	fa24 f401 	lsr.w	r4, r4, r1
    de96:	d938      	bls.n	df0a <rshift+0xaa>
    de98:	463d      	mov	r5, r7
    de9a:	681e      	ldr	r6, [r3, #0]
    de9c:	fa06 f608 	lsl.w	r6, r6, r8
    dea0:	4334      	orrs	r4, r6
    dea2:	f845 4b04 	str.w	r4, [r5], #4
    dea6:	f853 4b04 	ldr.w	r4, [r3], #4
    deaa:	429a      	cmp	r2, r3
    deac:	fa24 f401 	lsr.w	r4, r4, r1
    deb0:	d8f3      	bhi.n	de9a <rshift+0x3a>
    deb2:	ebcc 0302 	rsb	r3, ip, r2
    deb6:	3b05      	subs	r3, #5
    deb8:	f023 0303 	bic.w	r3, r3, #3
    debc:	18c3      	adds	r3, r0, r3
    debe:	3318      	adds	r3, #24
    dec0:	601c      	str	r4, [r3, #0]
    dec2:	b1e4      	cbz	r4, defe <rshift+0x9e>
    dec4:	3304      	adds	r3, #4
    dec6:	1bdf      	subs	r7, r3, r7
    dec8:	10bf      	asrs	r7, r7, #2
    deca:	e01a      	b.n	df02 <rshift+0xa2>
    decc:	2300      	movs	r3, #0
    dece:	6103      	str	r3, [r0, #16]
    ded0:	2300      	movs	r3, #0
    ded2:	6143      	str	r3, [r0, #20]
    ded4:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
    ded8:	4770      	bx	lr
    deda:	4562      	cmp	r2, ip
    dedc:	bf84      	itt	hi
    dede:	4663      	movhi	r3, ip
    dee0:	4639      	movhi	r1, r7
    dee2:	d9f3      	bls.n	decc <rshift+0x6c>
    dee4:	f853 4b04 	ldr.w	r4, [r3], #4
    dee8:	429a      	cmp	r2, r3
    deea:	f841 4b04 	str.w	r4, [r1], #4
    deee:	d8f9      	bhi.n	dee4 <rshift+0x84>
    def0:	ea6f 030c 	mvn.w	r3, ip
    def4:	189b      	adds	r3, r3, r2
    def6:	f023 0303 	bic.w	r3, r3, #3
    defa:	18c3      	adds	r3, r0, r3
    defc:	3318      	adds	r3, #24
    defe:	1bdf      	subs	r7, r3, r7
    df00:	10bf      	asrs	r7, r7, #2
    df02:	6107      	str	r7, [r0, #16]
    df04:	2f00      	cmp	r7, #0
    df06:	d1e5      	bne.n	ded4 <rshift+0x74>
    df08:	e7e2      	b.n	ded0 <rshift+0x70>
    df0a:	463b      	mov	r3, r7
    df0c:	e7d8      	b.n	dec0 <rshift+0x60>
    df0e:	bf00      	nop

0000df10 <__hexdig_init>:
    df10:	480f      	ldr	r0, [pc, #60]	; (df50 <__hexdig_init+0x40>)
    df12:	2110      	movs	r1, #16
    df14:	4b0f      	ldr	r3, [pc, #60]	; (df54 <__hexdig_init+0x44>)
    df16:	2230      	movs	r2, #48	; 0x30
    df18:	54d1      	strb	r1, [r2, r3]
    df1a:	3101      	adds	r1, #1
    df1c:	f810 2f01 	ldrb.w	r2, [r0, #1]!
    df20:	b2c9      	uxtb	r1, r1
    df22:	2a00      	cmp	r2, #0
    df24:	d1f8      	bne.n	df18 <__hexdig_init+0x8>
    df26:	480c      	ldr	r0, [pc, #48]	; (df58 <__hexdig_init+0x48>)
    df28:	211a      	movs	r1, #26
    df2a:	2261      	movs	r2, #97	; 0x61
    df2c:	54d1      	strb	r1, [r2, r3]
    df2e:	3101      	adds	r1, #1
    df30:	f810 2f01 	ldrb.w	r2, [r0, #1]!
    df34:	b2c9      	uxtb	r1, r1
    df36:	2a00      	cmp	r2, #0
    df38:	d1f8      	bne.n	df2c <__hexdig_init+0x1c>
    df3a:	4808      	ldr	r0, [pc, #32]	; (df5c <__hexdig_init+0x4c>)
    df3c:	211a      	movs	r1, #26
    df3e:	2241      	movs	r2, #65	; 0x41
    df40:	54d1      	strb	r1, [r2, r3]
    df42:	3101      	adds	r1, #1
    df44:	f810 2f01 	ldrb.w	r2, [r0, #1]!
    df48:	b2c9      	uxtb	r1, r1
    df4a:	2a00      	cmp	r2, #0
    df4c:	d1f8      	bne.n	df40 <__hexdig_init+0x30>
    df4e:	4770      	bx	lr
    df50:	00010ebc 	.word	0x00010ebc
    df54:	10000ecc 	.word	0x10000ecc
    df58:	00010eb4 	.word	0x00010eb4
    df5c:	00010eac 	.word	0x00010eac

0000df60 <__gethex>:
    df60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    df64:	b08b      	sub	sp, #44	; 0x2c
    df66:	4688      	mov	r8, r1
    df68:	4ea1      	ldr	r6, [pc, #644]	; (e1f0 <__gethex+0x290>)
    df6a:	9206      	str	r2, [sp, #24]
    df6c:	9309      	str	r3, [sp, #36]	; 0x24
    df6e:	9007      	str	r0, [sp, #28]
    df70:	f000 fbb0 	bl	e6d4 <_localeconv_r>
    df74:	6800      	ldr	r0, [r0, #0]
    df76:	9002      	str	r0, [sp, #8]
    df78:	f001 f948 	bl	f20c <strlen>
    df7c:	9b02      	ldr	r3, [sp, #8]
    df7e:	181a      	adds	r2, r3, r0
    df80:	f896 3030 	ldrb.w	r3, [r6, #48]	; 0x30
    df84:	9003      	str	r0, [sp, #12]
    df86:	f812 ac01 	ldrb.w	sl, [r2, #-1]
    df8a:	2b00      	cmp	r3, #0
    df8c:	f000 8109 	beq.w	e1a2 <__gethex+0x242>
    df90:	f8d8 3000 	ldr.w	r3, [r8]
    df94:	1c9d      	adds	r5, r3, #2
    df96:	789a      	ldrb	r2, [r3, #2]
    df98:	2a30      	cmp	r2, #48	; 0x30
    df9a:	f040 81fe 	bne.w	e39a <__gethex+0x43a>
    df9e:	3303      	adds	r3, #3
    dfa0:	2700      	movs	r7, #0
    dfa2:	461d      	mov	r5, r3
    dfa4:	f813 2b01 	ldrb.w	r2, [r3], #1
    dfa8:	3701      	adds	r7, #1
    dfaa:	2a30      	cmp	r2, #48	; 0x30
    dfac:	d0f9      	beq.n	dfa2 <__gethex+0x42>
    dfae:	f816 b002 	ldrb.w	fp, [r6, r2]
    dfb2:	f8df 923c 	ldr.w	r9, [pc, #572]	; e1f0 <__gethex+0x290>
    dfb6:	f1bb 0f00 	cmp.w	fp, #0
    dfba:	f000 80f5 	beq.w	e1a8 <__gethex+0x248>
    dfbe:	782b      	ldrb	r3, [r5, #0]
    dfc0:	f04f 0b00 	mov.w	fp, #0
    dfc4:	f819 4003 	ldrb.w	r4, [r9, r3]
    dfc8:	2c00      	cmp	r4, #0
    dfca:	f000 8200 	beq.w	e3ce <__gethex+0x46e>
    dfce:	1c6a      	adds	r2, r5, #1
    dfd0:	4614      	mov	r4, r2
    dfd2:	3201      	adds	r2, #1
    dfd4:	7823      	ldrb	r3, [r4, #0]
    dfd6:	5cf3      	ldrb	r3, [r6, r3]
    dfd8:	2b00      	cmp	r3, #0
    dfda:	d1f9      	bne.n	dfd0 <__gethex+0x70>
    dfdc:	4699      	mov	r9, r3
    dfde:	4620      	mov	r0, r4
    dfe0:	9902      	ldr	r1, [sp, #8]
    dfe2:	9a03      	ldr	r2, [sp, #12]
    dfe4:	f7fe feb8 	bl	cd58 <strncmp>
    dfe8:	b1e8      	cbz	r0, e026 <__gethex+0xc6>
    dfea:	7823      	ldrb	r3, [r4, #0]
    dfec:	f1bb 0f00 	cmp.w	fp, #0
    dff0:	f000 81c1 	beq.w	e376 <__gethex+0x416>
    dff4:	ebc4 0b0b 	rsb	fp, r4, fp
    dff8:	ea4f 028b 	mov.w	r2, fp, lsl #2
    dffc:	9205      	str	r2, [sp, #20]
    dffe:	2b50      	cmp	r3, #80	; 0x50
    e000:	f000 809b 	beq.w	e13a <__gethex+0x1da>
    e004:	2b70      	cmp	r3, #112	; 0x70
    e006:	f000 8098 	beq.w	e13a <__gethex+0x1da>
    e00a:	4622      	mov	r2, r4
    e00c:	f8c8 2000 	str.w	r2, [r8]
    e010:	f1b9 0f00 	cmp.w	r9, #0
    e014:	d00d      	beq.n	e032 <__gethex+0xd2>
    e016:	2f00      	cmp	r7, #0
    e018:	bf0c      	ite	eq
    e01a:	2706      	moveq	r7, #6
    e01c:	2700      	movne	r7, #0
    e01e:	4638      	mov	r0, r7
    e020:	b00b      	add	sp, #44	; 0x2c
    e022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e026:	f1bb 0f00 	cmp.w	fp, #0
    e02a:	f000 81be 	beq.w	e3aa <__gethex+0x44a>
    e02e:	7823      	ldrb	r3, [r4, #0]
    e030:	e7e0      	b.n	dff4 <__gethex+0x94>
    e032:	1b63      	subs	r3, r4, r5
    e034:	4649      	mov	r1, r9
    e036:	3b01      	subs	r3, #1
    e038:	2b07      	cmp	r3, #7
    e03a:	dd03      	ble.n	e044 <__gethex+0xe4>
    e03c:	105b      	asrs	r3, r3, #1
    e03e:	3101      	adds	r1, #1
    e040:	2b07      	cmp	r3, #7
    e042:	dcfb      	bgt.n	e03c <__gethex+0xdc>
    e044:	9807      	ldr	r0, [sp, #28]
    e046:	f000 fb57 	bl	e6f8 <_Balloc>
    e04a:	42a5      	cmp	r5, r4
    e04c:	f100 0314 	add.w	r3, r0, #20
    e050:	9004      	str	r0, [sp, #16]
    e052:	9308      	str	r3, [sp, #32]
    e054:	f080 81db 	bcs.w	e40e <__gethex+0x4ae>
    e058:	469b      	mov	fp, r3
    e05a:	9b03      	ldr	r3, [sp, #12]
    e05c:	f04f 0800 	mov.w	r8, #0
    e060:	4647      	mov	r7, r8
    e062:	f1c3 0c01 	rsb	ip, r3, #1
    e066:	e00f      	b.n	e088 <__gethex+0x128>
    e068:	2f20      	cmp	r7, #32
    e06a:	d05f      	beq.n	e12c <__gethex+0x1cc>
    e06c:	463a      	mov	r2, r7
    e06e:	3704      	adds	r7, #4
    e070:	f814 3c01 	ldrb.w	r3, [r4, #-1]
    e074:	464c      	mov	r4, r9
    e076:	42a5      	cmp	r5, r4
    e078:	5cf3      	ldrb	r3, [r6, r3]
    e07a:	f003 030f 	and.w	r3, r3, #15
    e07e:	fa03 f302 	lsl.w	r3, r3, r2
    e082:	ea48 0803 	orr.w	r8, r8, r3
    e086:	d219      	bcs.n	e0bc <__gethex+0x15c>
    e088:	f814 3c01 	ldrb.w	r3, [r4, #-1]
    e08c:	f104 39ff 	add.w	r9, r4, #4294967295
    e090:	4553      	cmp	r3, sl
    e092:	d1e9      	bne.n	e068 <__gethex+0x108>
    e094:	eb09 030c 	add.w	r3, r9, ip
    e098:	429d      	cmp	r5, r3
    e09a:	d8e5      	bhi.n	e068 <__gethex+0x108>
    e09c:	4618      	mov	r0, r3
    e09e:	9902      	ldr	r1, [sp, #8]
    e0a0:	9a03      	ldr	r2, [sp, #12]
    e0a2:	9301      	str	r3, [sp, #4]
    e0a4:	f8cd c000 	str.w	ip, [sp]
    e0a8:	f7fe fe56 	bl	cd58 <strncmp>
    e0ac:	9b01      	ldr	r3, [sp, #4]
    e0ae:	f8dd c000 	ldr.w	ip, [sp]
    e0b2:	2800      	cmp	r0, #0
    e0b4:	d1d8      	bne.n	e068 <__gethex+0x108>
    e0b6:	461c      	mov	r4, r3
    e0b8:	42a5      	cmp	r5, r4
    e0ba:	d3e5      	bcc.n	e088 <__gethex+0x128>
    e0bc:	9b08      	ldr	r3, [sp, #32]
    e0be:	4640      	mov	r0, r8
    e0c0:	f84b 8b04 	str.w	r8, [fp], #4
    e0c4:	9904      	ldr	r1, [sp, #16]
    e0c6:	ebc3 0b0b 	rsb	fp, r3, fp
    e0ca:	ea4f 03ab 	mov.w	r3, fp, asr #2
    e0ce:	610b      	str	r3, [r1, #16]
    e0d0:	015d      	lsls	r5, r3, #5
    e0d2:	f000 fbdd 	bl	e890 <__hi0bits>
    e0d6:	9a06      	ldr	r2, [sp, #24]
    e0d8:	6814      	ldr	r4, [r2, #0]
    e0da:	1a28      	subs	r0, r5, r0
    e0dc:	42a0      	cmp	r0, r4
    e0de:	f300 8125 	bgt.w	e32c <__gethex+0x3cc>
    e0e2:	f2c0 814b 	blt.w	e37c <__gethex+0x41c>
    e0e6:	2500      	movs	r5, #0
    e0e8:	9806      	ldr	r0, [sp, #24]
    e0ea:	9905      	ldr	r1, [sp, #20]
    e0ec:	6883      	ldr	r3, [r0, #8]
    e0ee:	4299      	cmp	r1, r3
    e0f0:	f300 80f6 	bgt.w	e2e0 <__gethex+0x380>
    e0f4:	9806      	ldr	r0, [sp, #24]
    e0f6:	9905      	ldr	r1, [sp, #20]
    e0f8:	6843      	ldr	r3, [r0, #4]
    e0fa:	4299      	cmp	r1, r3
    e0fc:	f280 8100 	bge.w	e300 <__gethex+0x3a0>
    e100:	1a5e      	subs	r6, r3, r1
    e102:	42b4      	cmp	r4, r6
    e104:	dc76      	bgt.n	e1f4 <__gethex+0x294>
    e106:	68c2      	ldr	r2, [r0, #12]
    e108:	2a02      	cmp	r2, #2
    e10a:	f000 816f 	beq.w	e3ec <__gethex+0x48c>
    e10e:	2a03      	cmp	r2, #3
    e110:	f000 8198 	beq.w	e444 <__gethex+0x4e4>
    e114:	2a01      	cmp	r2, #1
    e116:	f000 8186 	beq.w	e426 <__gethex+0x4c6>
    e11a:	9807      	ldr	r0, [sp, #28]
    e11c:	2750      	movs	r7, #80	; 0x50
    e11e:	9904      	ldr	r1, [sp, #16]
    e120:	f000 fb12 	bl	e748 <_Bfree>
    e124:	9814      	ldr	r0, [sp, #80]	; 0x50
    e126:	2300      	movs	r3, #0
    e128:	6003      	str	r3, [r0, #0]
    e12a:	e778      	b.n	e01e <__gethex+0xbe>
    e12c:	f84b 8b04 	str.w	r8, [fp], #4
    e130:	f04f 0800 	mov.w	r8, #0
    e134:	2704      	movs	r7, #4
    e136:	4642      	mov	r2, r8
    e138:	e79a      	b.n	e070 <__gethex+0x110>
    e13a:	7863      	ldrb	r3, [r4, #1]
    e13c:	2b2b      	cmp	r3, #43	; 0x2b
    e13e:	f000 80f2 	beq.w	e326 <__gethex+0x3c6>
    e142:	2b2d      	cmp	r3, #45	; 0x2d
    e144:	f000 80ea 	beq.w	e31c <__gethex+0x3bc>
    e148:	1c60      	adds	r0, r4, #1
    e14a:	f04f 0b00 	mov.w	fp, #0
    e14e:	5cf1      	ldrb	r1, [r6, r3]
    e150:	2900      	cmp	r1, #0
    e152:	f43f af5a 	beq.w	e00a <__gethex+0xaa>
    e156:	2919      	cmp	r1, #25
    e158:	f73f af57 	bgt.w	e00a <__gethex+0xaa>
    e15c:	7843      	ldrb	r3, [r0, #1]
    e15e:	3910      	subs	r1, #16
    e160:	f8df c08c 	ldr.w	ip, [pc, #140]	; e1f0 <__gethex+0x290>
    e164:	1c42      	adds	r2, r0, #1
    e166:	f81c 3003 	ldrb.w	r3, [ip, r3]
    e16a:	b193      	cbz	r3, e192 <__gethex+0x232>
    e16c:	2b19      	cmp	r3, #25
    e16e:	dc10      	bgt.n	e192 <__gethex+0x232>
    e170:	3002      	adds	r0, #2
    e172:	e001      	b.n	e178 <__gethex+0x218>
    e174:	2b19      	cmp	r3, #25
    e176:	dc0c      	bgt.n	e192 <__gethex+0x232>
    e178:	4602      	mov	r2, r0
    e17a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
    e17e:	3001      	adds	r0, #1
    e180:	f892 c000 	ldrb.w	ip, [r2]
    e184:	eb03 0141 	add.w	r1, r3, r1, lsl #1
    e188:	3910      	subs	r1, #16
    e18a:	f816 300c 	ldrb.w	r3, [r6, ip]
    e18e:	2b00      	cmp	r3, #0
    e190:	d1f0      	bne.n	e174 <__gethex+0x214>
    e192:	f1bb 0f00 	cmp.w	fp, #0
    e196:	d000      	beq.n	e19a <__gethex+0x23a>
    e198:	4249      	negs	r1, r1
    e19a:	9b05      	ldr	r3, [sp, #20]
    e19c:	185b      	adds	r3, r3, r1
    e19e:	9305      	str	r3, [sp, #20]
    e1a0:	e734      	b.n	e00c <__gethex+0xac>
    e1a2:	f7ff feb5 	bl	df10 <__hexdig_init>
    e1a6:	e6f3      	b.n	df90 <__gethex+0x30>
    e1a8:	4628      	mov	r0, r5
    e1aa:	9902      	ldr	r1, [sp, #8]
    e1ac:	9a03      	ldr	r2, [sp, #12]
    e1ae:	f7fe fdd3 	bl	cd58 <strncmp>
    e1b2:	2800      	cmp	r0, #0
    e1b4:	f040 809d 	bne.w	e2f2 <__gethex+0x392>
    e1b8:	9803      	ldr	r0, [sp, #12]
    e1ba:	182c      	adds	r4, r5, r0
    e1bc:	5c2b      	ldrb	r3, [r5, r0]
    e1be:	f819 2003 	ldrb.w	r2, [r9, r3]
    e1c2:	2a00      	cmp	r2, #0
    e1c4:	f000 80eb 	beq.w	e39e <__gethex+0x43e>
    e1c8:	2b30      	cmp	r3, #48	; 0x30
    e1ca:	f040 810b 	bne.w	e3e4 <__gethex+0x484>
    e1ce:	1c63      	adds	r3, r4, #1
    e1d0:	461d      	mov	r5, r3
    e1d2:	f813 2b01 	ldrb.w	r2, [r3], #1
    e1d6:	2a30      	cmp	r2, #48	; 0x30
    e1d8:	d0fa      	beq.n	e1d0 <__gethex+0x270>
    e1da:	5cb3      	ldrb	r3, [r6, r2]
    e1dc:	2b00      	cmp	r3, #0
    e1de:	f040 8102 	bne.w	e3e6 <__gethex+0x486>
    e1e2:	f04f 0901 	mov.w	r9, #1
    e1e6:	46a3      	mov	fp, r4
    e1e8:	464f      	mov	r7, r9
    e1ea:	462c      	mov	r4, r5
    e1ec:	e6f7      	b.n	dfde <__gethex+0x7e>
    e1ee:	bf00      	nop
    e1f0:	10000ecc 	.word	0x10000ecc
    e1f4:	1e77      	subs	r7, r6, #1
    e1f6:	2d00      	cmp	r5, #0
    e1f8:	f040 80e7 	bne.w	e3ca <__gethex+0x46a>
    e1fc:	2f00      	cmp	r7, #0
    e1fe:	dd04      	ble.n	e20a <__gethex+0x2aa>
    e200:	9804      	ldr	r0, [sp, #16]
    e202:	4639      	mov	r1, r7
    e204:	f000 febc 	bl	ef80 <__any_on>
    e208:	4605      	mov	r5, r0
    e20a:	9908      	ldr	r1, [sp, #32]
    e20c:	117b      	asrs	r3, r7, #5
    e20e:	2201      	movs	r2, #1
    e210:	f007 071f 	and.w	r7, r7, #31
    e214:	9804      	ldr	r0, [sp, #16]
    e216:	1ba4      	subs	r4, r4, r6
    e218:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
    e21c:	fa02 f207 	lsl.w	r2, r2, r7
    e220:	4631      	mov	r1, r6
    e222:	421a      	tst	r2, r3
    e224:	bf18      	it	ne
    e226:	f045 0502 	orrne.w	r5, r5, #2
    e22a:	f7ff fe19 	bl	de60 <rshift>
    e22e:	9b06      	ldr	r3, [sp, #24]
    e230:	2702      	movs	r7, #2
    e232:	685b      	ldr	r3, [r3, #4]
    e234:	9305      	str	r3, [sp, #20]
    e236:	2d00      	cmp	r5, #0
    e238:	d069      	beq.n	e30e <__gethex+0x3ae>
    e23a:	9806      	ldr	r0, [sp, #24]
    e23c:	68c3      	ldr	r3, [r0, #12]
    e23e:	2b02      	cmp	r3, #2
    e240:	f000 80ea 	beq.w	e418 <__gethex+0x4b8>
    e244:	2b03      	cmp	r3, #3
    e246:	d05d      	beq.n	e304 <__gethex+0x3a4>
    e248:	2b01      	cmp	r3, #1
    e24a:	d15e      	bne.n	e30a <__gethex+0x3aa>
    e24c:	07aa      	lsls	r2, r5, #30
    e24e:	d55c      	bpl.n	e30a <__gethex+0x3aa>
    e250:	9908      	ldr	r1, [sp, #32]
    e252:	680b      	ldr	r3, [r1, #0]
    e254:	432b      	orrs	r3, r5
    e256:	07db      	lsls	r3, r3, #31
    e258:	d557      	bpl.n	e30a <__gethex+0x3aa>
    e25a:	9b04      	ldr	r3, [sp, #16]
    e25c:	2600      	movs	r6, #0
    e25e:	9904      	ldr	r1, [sp, #16]
    e260:	691d      	ldr	r5, [r3, #16]
    e262:	9b08      	ldr	r3, [sp, #32]
    e264:	eb01 0085 	add.w	r0, r1, r5, lsl #2
    e268:	3014      	adds	r0, #20
    e26a:	4619      	mov	r1, r3
    e26c:	f853 2b04 	ldr.w	r2, [r3], #4
    e270:	f1b2 3fff 	cmp.w	r2, #4294967295
    e274:	f040 80eb 	bne.w	e44e <__gethex+0x4ee>
    e278:	4298      	cmp	r0, r3
    e27a:	f843 6c04 	str.w	r6, [r3, #-4]
    e27e:	d8f4      	bhi.n	e26a <__gethex+0x30a>
    e280:	9a04      	ldr	r2, [sp, #16]
    e282:	6893      	ldr	r3, [r2, #8]
    e284:	429d      	cmp	r5, r3
    e286:	bfb8      	it	lt
    e288:	462b      	movlt	r3, r5
    e28a:	f280 80f9 	bge.w	e480 <__gethex+0x520>
    e28e:	9904      	ldr	r1, [sp, #16]
    e290:	eb01 0283 	add.w	r2, r1, r3, lsl #2
    e294:	3301      	adds	r3, #1
    e296:	610b      	str	r3, [r1, #16]
    e298:	2301      	movs	r3, #1
    e29a:	6153      	str	r3, [r2, #20]
    e29c:	2f02      	cmp	r7, #2
    e29e:	f000 80d9 	beq.w	e454 <__gethex+0x4f4>
    e2a2:	9904      	ldr	r1, [sp, #16]
    e2a4:	690b      	ldr	r3, [r1, #16]
    e2a6:	429d      	cmp	r5, r3
    e2a8:	db0e      	blt.n	e2c8 <__gethex+0x368>
    e2aa:	f014 041f 	ands.w	r4, r4, #31
    e2ae:	f000 80ac 	beq.w	e40a <__gethex+0x4aa>
    e2b2:	9b04      	ldr	r3, [sp, #16]
    e2b4:	eb03 0585 	add.w	r5, r3, r5, lsl #2
    e2b8:	6928      	ldr	r0, [r5, #16]
    e2ba:	f000 fae9 	bl	e890 <__hi0bits>
    e2be:	f1c4 0320 	rsb	r3, r4, #32
    e2c2:	4298      	cmp	r0, r3
    e2c4:	f280 80a1 	bge.w	e40a <__gethex+0x4aa>
    e2c8:	9804      	ldr	r0, [sp, #16]
    e2ca:	2101      	movs	r1, #1
    e2cc:	f7ff fdc8 	bl	de60 <rshift>
    e2d0:	9a06      	ldr	r2, [sp, #24]
    e2d2:	9805      	ldr	r0, [sp, #20]
    e2d4:	6893      	ldr	r3, [r2, #8]
    e2d6:	3001      	adds	r0, #1
    e2d8:	9005      	str	r0, [sp, #20]
    e2da:	4298      	cmp	r0, r3
    e2dc:	f340 8095 	ble.w	e40a <__gethex+0x4aa>
    e2e0:	9807      	ldr	r0, [sp, #28]
    e2e2:	27a3      	movs	r7, #163	; 0xa3
    e2e4:	9904      	ldr	r1, [sp, #16]
    e2e6:	f000 fa2f 	bl	e748 <_Bfree>
    e2ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
    e2ec:	2300      	movs	r3, #0
    e2ee:	6013      	str	r3, [r2, #0]
    e2f0:	e695      	b.n	e01e <__gethex+0xbe>
    e2f2:	782b      	ldrb	r3, [r5, #0]
    e2f4:	462c      	mov	r4, r5
    e2f6:	f8cd b014 	str.w	fp, [sp, #20]
    e2fa:	f04f 0901 	mov.w	r9, #1
    e2fe:	e67e      	b.n	dffe <__gethex+0x9e>
    e300:	2701      	movs	r7, #1
    e302:	e798      	b.n	e236 <__gethex+0x2d6>
    e304:	9b15      	ldr	r3, [sp, #84]	; 0x54
    e306:	2b00      	cmp	r3, #0
    e308:	d1a7      	bne.n	e25a <__gethex+0x2fa>
    e30a:	f047 0710 	orr.w	r7, r7, #16
    e30e:	9b04      	ldr	r3, [sp, #16]
    e310:	9814      	ldr	r0, [sp, #80]	; 0x50
    e312:	6003      	str	r3, [r0, #0]
    e314:	9b05      	ldr	r3, [sp, #20]
    e316:	9809      	ldr	r0, [sp, #36]	; 0x24
    e318:	6003      	str	r3, [r0, #0]
    e31a:	e680      	b.n	e01e <__gethex+0xbe>
    e31c:	f04f 0b01 	mov.w	fp, #1
    e320:	78a3      	ldrb	r3, [r4, #2]
    e322:	1ca0      	adds	r0, r4, #2
    e324:	e713      	b.n	e14e <__gethex+0x1ee>
    e326:	f04f 0b00 	mov.w	fp, #0
    e32a:	e7f9      	b.n	e320 <__gethex+0x3c0>
    e32c:	1b06      	subs	r6, r0, r4
    e32e:	9804      	ldr	r0, [sp, #16]
    e330:	4631      	mov	r1, r6
    e332:	f000 fe25 	bl	ef80 <__any_on>
    e336:	4605      	mov	r5, r0
    e338:	b1a8      	cbz	r0, e366 <__gethex+0x406>
    e33a:	1e73      	subs	r3, r6, #1
    e33c:	9804      	ldr	r0, [sp, #16]
    e33e:	2501      	movs	r5, #1
    e340:	f003 011f 	and.w	r1, r3, #31
    e344:	115a      	asrs	r2, r3, #5
    e346:	fa05 f101 	lsl.w	r1, r5, r1
    e34a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
    e34e:	6952      	ldr	r2, [r2, #20]
    e350:	4211      	tst	r1, r2
    e352:	d008      	beq.n	e366 <__gethex+0x406>
    e354:	42ab      	cmp	r3, r5
    e356:	dd05      	ble.n	e364 <__gethex+0x404>
    e358:	9804      	ldr	r0, [sp, #16]
    e35a:	1eb1      	subs	r1, r6, #2
    e35c:	f000 fe10 	bl	ef80 <__any_on>
    e360:	2503      	movs	r5, #3
    e362:	b900      	cbnz	r0, e366 <__gethex+0x406>
    e364:	2502      	movs	r5, #2
    e366:	9804      	ldr	r0, [sp, #16]
    e368:	4631      	mov	r1, r6
    e36a:	f7ff fd79 	bl	de60 <rshift>
    e36e:	9b05      	ldr	r3, [sp, #20]
    e370:	199b      	adds	r3, r3, r6
    e372:	9305      	str	r3, [sp, #20]
    e374:	e6b8      	b.n	e0e8 <__gethex+0x188>
    e376:	f8cd b014 	str.w	fp, [sp, #20]
    e37a:	e640      	b.n	dffe <__gethex+0x9e>
    e37c:	1a25      	subs	r5, r4, r0
    e37e:	9904      	ldr	r1, [sp, #16]
    e380:	462a      	mov	r2, r5
    e382:	9807      	ldr	r0, [sp, #28]
    e384:	f000 fbc2 	bl	eb0c <__lshift>
    e388:	9b05      	ldr	r3, [sp, #20]
    e38a:	1b5b      	subs	r3, r3, r5
    e38c:	2500      	movs	r5, #0
    e38e:	9305      	str	r3, [sp, #20]
    e390:	9004      	str	r0, [sp, #16]
    e392:	f100 0314 	add.w	r3, r0, #20
    e396:	9308      	str	r3, [sp, #32]
    e398:	e6a6      	b.n	e0e8 <__gethex+0x188>
    e39a:	2700      	movs	r7, #0
    e39c:	e607      	b.n	dfae <__gethex+0x4e>
    e39e:	9205      	str	r2, [sp, #20]
    e3a0:	f04f 0901 	mov.w	r9, #1
    e3a4:	e62b      	b.n	dffe <__gethex+0x9e>
    e3a6:	462c      	mov	r4, r5
    e3a8:	4681      	mov	r9, r0
    e3aa:	9903      	ldr	r1, [sp, #12]
    e3ac:	eb04 0b01 	add.w	fp, r4, r1
    e3b0:	5c63      	ldrb	r3, [r4, r1]
    e3b2:	5cf2      	ldrb	r2, [r6, r3]
    e3b4:	2a00      	cmp	r2, #0
    e3b6:	d07a      	beq.n	e4ae <__gethex+0x54e>
    e3b8:	f10b 0201 	add.w	r2, fp, #1
    e3bc:	4614      	mov	r4, r2
    e3be:	f812 3b01 	ldrb.w	r3, [r2], #1
    e3c2:	5cf1      	ldrb	r1, [r6, r3]
    e3c4:	2900      	cmp	r1, #0
    e3c6:	d1f9      	bne.n	e3bc <__gethex+0x45c>
    e3c8:	e614      	b.n	dff4 <__gethex+0x94>
    e3ca:	2501      	movs	r5, #1
    e3cc:	e71d      	b.n	e20a <__gethex+0x2aa>
    e3ce:	4628      	mov	r0, r5
    e3d0:	9902      	ldr	r1, [sp, #8]
    e3d2:	9a03      	ldr	r2, [sp, #12]
    e3d4:	f7fe fcc0 	bl	cd58 <strncmp>
    e3d8:	2800      	cmp	r0, #0
    e3da:	d0e4      	beq.n	e3a6 <__gethex+0x446>
    e3dc:	46a1      	mov	r9, r4
    e3de:	462c      	mov	r4, r5
    e3e0:	46cb      	mov	fp, r9
    e3e2:	e602      	b.n	dfea <__gethex+0x8a>
    e3e4:	4625      	mov	r5, r4
    e3e6:	46a3      	mov	fp, r4
    e3e8:	2701      	movs	r7, #1
    e3ea:	e5f0      	b.n	dfce <__gethex+0x6e>
    e3ec:	9815      	ldr	r0, [sp, #84]	; 0x54
    e3ee:	2800      	cmp	r0, #0
    e3f0:	f47f ae93 	bne.w	e11a <__gethex+0x1ba>
    e3f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
    e3f6:	2762      	movs	r7, #98	; 0x62
    e3f8:	9804      	ldr	r0, [sp, #16]
    e3fa:	9908      	ldr	r1, [sp, #32]
    e3fc:	6013      	str	r3, [r2, #0]
    e3fe:	2301      	movs	r3, #1
    e400:	9a14      	ldr	r2, [sp, #80]	; 0x50
    e402:	6103      	str	r3, [r0, #16]
    e404:	600b      	str	r3, [r1, #0]
    e406:	6010      	str	r0, [r2, #0]
    e408:	e609      	b.n	e01e <__gethex+0xbe>
    e40a:	2721      	movs	r7, #33	; 0x21
    e40c:	e77f      	b.n	e30e <__gethex+0x3ae>
    e40e:	f8dd b020 	ldr.w	fp, [sp, #32]
    e412:	f04f 0800 	mov.w	r8, #0
    e416:	e651      	b.n	e0bc <__gethex+0x15c>
    e418:	9a15      	ldr	r2, [sp, #84]	; 0x54
    e41a:	f1c2 0301 	rsb	r3, r2, #1
    e41e:	2b00      	cmp	r3, #0
    e420:	f43f af73 	beq.w	e30a <__gethex+0x3aa>
    e424:	e719      	b.n	e25a <__gethex+0x2fa>
    e426:	42a6      	cmp	r6, r4
    e428:	f47f ae77 	bne.w	e11a <__gethex+0x1ba>
    e42c:	2c01      	cmp	r4, #1
    e42e:	dde1      	ble.n	e3f4 <__gethex+0x494>
    e430:	9804      	ldr	r0, [sp, #16]
    e432:	1e61      	subs	r1, r4, #1
    e434:	f000 fda4 	bl	ef80 <__any_on>
    e438:	2800      	cmp	r0, #0
    e43a:	f43f ae6e 	beq.w	e11a <__gethex+0x1ba>
    e43e:	9a06      	ldr	r2, [sp, #24]
    e440:	6853      	ldr	r3, [r2, #4]
    e442:	e7d7      	b.n	e3f4 <__gethex+0x494>
    e444:	9915      	ldr	r1, [sp, #84]	; 0x54
    e446:	2900      	cmp	r1, #0
    e448:	f43f ae67 	beq.w	e11a <__gethex+0x1ba>
    e44c:	e7d2      	b.n	e3f4 <__gethex+0x494>
    e44e:	3201      	adds	r2, #1
    e450:	600a      	str	r2, [r1, #0]
    e452:	e723      	b.n	e29c <__gethex+0x33c>
    e454:	9a06      	ldr	r2, [sp, #24]
    e456:	2722      	movs	r7, #34	; 0x22
    e458:	6813      	ldr	r3, [r2, #0]
    e45a:	3b01      	subs	r3, #1
    e45c:	42a3      	cmp	r3, r4
    e45e:	f47f af56 	bne.w	e30e <__gethex+0x3ae>
    e462:	1163      	asrs	r3, r4, #5
    e464:	9804      	ldr	r0, [sp, #16]
    e466:	2201      	movs	r2, #1
    e468:	f004 041f 	and.w	r4, r4, #31
    e46c:	eb00 0383 	add.w	r3, r0, r3, lsl #2
    e470:	fa02 f204 	lsl.w	r2, r2, r4
    e474:	695b      	ldr	r3, [r3, #20]
    e476:	421a      	tst	r2, r3
    e478:	bf14      	ite	ne
    e47a:	2721      	movne	r7, #33	; 0x21
    e47c:	2722      	moveq	r7, #34	; 0x22
    e47e:	e746      	b.n	e30e <__gethex+0x3ae>
    e480:	6851      	ldr	r1, [r2, #4]
    e482:	9807      	ldr	r0, [sp, #28]
    e484:	3101      	adds	r1, #1
    e486:	f000 f937 	bl	e6f8 <_Balloc>
    e48a:	4606      	mov	r6, r0
    e48c:	9804      	ldr	r0, [sp, #16]
    e48e:	f100 010c 	add.w	r1, r0, #12
    e492:	6903      	ldr	r3, [r0, #16]
    e494:	f106 000c 	add.w	r0, r6, #12
    e498:	1c9a      	adds	r2, r3, #2
    e49a:	0092      	lsls	r2, r2, #2
    e49c:	f7fe fb6c 	bl	cb78 <memcpy>
    e4a0:	9904      	ldr	r1, [sp, #16]
    e4a2:	9807      	ldr	r0, [sp, #28]
    e4a4:	9604      	str	r6, [sp, #16]
    e4a6:	f000 f94f 	bl	e748 <_Bfree>
    e4aa:	6933      	ldr	r3, [r6, #16]
    e4ac:	e6ef      	b.n	e28e <__gethex+0x32e>
    e4ae:	465c      	mov	r4, fp
    e4b0:	e5a0      	b.n	dff4 <__gethex+0x94>
    e4b2:	bf00      	nop

0000e4b4 <__hexnan>:
    e4b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e4b8:	b085      	sub	sp, #20
    e4ba:	f8df 81b0 	ldr.w	r8, [pc, #432]	; e66c <__hexnan+0x1b8>
    e4be:	460c      	mov	r4, r1
    e4c0:	9002      	str	r0, [sp, #8]
    e4c2:	4692      	mov	sl, r2
    e4c4:	f898 3030 	ldrb.w	r3, [r8, #48]	; 0x30
    e4c8:	2b00      	cmp	r3, #0
    e4ca:	f000 80af 	beq.w	e62c <__hexnan+0x178>
    e4ce:	6823      	ldr	r3, [r4, #0]
    e4d0:	115a      	asrs	r2, r3, #5
    e4d2:	f013 031f 	ands.w	r3, r3, #31
    e4d6:	9303      	str	r3, [sp, #12]
    e4d8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
    e4dc:	9200      	str	r2, [sp, #0]
    e4de:	d001      	beq.n	e4e4 <__hexnan+0x30>
    e4e0:	3204      	adds	r2, #4
    e4e2:	9200      	str	r2, [sp, #0]
    e4e4:	9a00      	ldr	r2, [sp, #0]
    e4e6:	2300      	movs	r3, #0
    e4e8:	4699      	mov	r9, r3
    e4ea:	9900      	ldr	r1, [sp, #0]
    e4ec:	46cb      	mov	fp, r9
    e4ee:	464e      	mov	r6, r9
    e4f0:	f842 3c04 	str.w	r3, [r2, #-4]
    e4f4:	3904      	subs	r1, #4
    e4f6:	9b02      	ldr	r3, [sp, #8]
    e4f8:	9101      	str	r1, [sp, #4]
    e4fa:	f8dd c004 	ldr.w	ip, [sp, #4]
    e4fe:	6819      	ldr	r1, [r3, #0]
    e500:	4664      	mov	r4, ip
    e502:	784b      	ldrb	r3, [r1, #1]
    e504:	2b00      	cmp	r3, #0
    e506:	d034      	beq.n	e572 <__hexnan+0xbe>
    e508:	f818 2003 	ldrb.w	r2, [r8, r3]
    e50c:	2a00      	cmp	r2, #0
    e50e:	d170      	bne.n	e5f2 <__hexnan+0x13e>
    e510:	2b20      	cmp	r3, #32
    e512:	f200 8085 	bhi.w	e620 <__hexnan+0x16c>
    e516:	455e      	cmp	r6, fp
    e518:	dd27      	ble.n	e56a <__hexnan+0xb6>
    e51a:	f1b9 0f07 	cmp.w	r9, #7
    e51e:	bfcc      	ite	gt
    e520:	2300      	movgt	r3, #0
    e522:	2301      	movle	r3, #1
    e524:	4564      	cmp	r4, ip
    e526:	bf28      	it	cs
    e528:	2300      	movcs	r3, #0
    e52a:	b193      	cbz	r3, e552 <__hexnan+0x9e>
    e52c:	f1c9 0908 	rsb	r9, r9, #8
    e530:	6822      	ldr	r2, [r4, #0]
    e532:	4623      	mov	r3, r4
    e534:	ea4f 0989 	mov.w	r9, r9, lsl #2
    e538:	f1c9 0720 	rsb	r7, r9, #32
    e53c:	6858      	ldr	r0, [r3, #4]
    e53e:	fa00 f507 	lsl.w	r5, r0, r7
    e542:	4315      	orrs	r5, r2
    e544:	fa20 f209 	lsr.w	r2, r0, r9
    e548:	601d      	str	r5, [r3, #0]
    e54a:	f843 2f04 	str.w	r2, [r3, #4]!
    e54e:	459c      	cmp	ip, r3
    e550:	d8f4      	bhi.n	e53c <__hexnan+0x88>
    e552:	4554      	cmp	r4, sl
    e554:	bf98      	it	ls
    e556:	f04f 0908 	movls.w	r9, #8
    e55a:	d906      	bls.n	e56a <__hexnan+0xb6>
    e55c:	2200      	movs	r2, #0
    e55e:	f844 2c04 	str.w	r2, [r4, #-4]
    e562:	3c04      	subs	r4, #4
    e564:	46b3      	mov	fp, r6
    e566:	46a4      	mov	ip, r4
    e568:	4691      	mov	r9, r2
    e56a:	3101      	adds	r1, #1
    e56c:	784b      	ldrb	r3, [r1, #1]
    e56e:	2b00      	cmp	r3, #0
    e570:	d1ca      	bne.n	e508 <__hexnan+0x54>
    e572:	2e00      	cmp	r6, #0
    e574:	d056      	beq.n	e624 <__hexnan+0x170>
    e576:	f1b9 0f07 	cmp.w	r9, #7
    e57a:	bfcc      	ite	gt
    e57c:	2300      	movgt	r3, #0
    e57e:	2301      	movle	r3, #1
    e580:	4564      	cmp	r4, ip
    e582:	bf28      	it	cs
    e584:	2300      	movcs	r3, #0
    e586:	b193      	cbz	r3, e5ae <__hexnan+0xfa>
    e588:	f1c9 0908 	rsb	r9, r9, #8
    e58c:	6822      	ldr	r2, [r4, #0]
    e58e:	4623      	mov	r3, r4
    e590:	ea4f 0989 	mov.w	r9, r9, lsl #2
    e594:	f1c9 0520 	rsb	r5, r9, #32
    e598:	6859      	ldr	r1, [r3, #4]
    e59a:	fa01 f005 	lsl.w	r0, r1, r5
    e59e:	4310      	orrs	r0, r2
    e5a0:	fa21 f209 	lsr.w	r2, r1, r9
    e5a4:	6018      	str	r0, [r3, #0]
    e5a6:	f843 2f04 	str.w	r2, [r3, #4]!
    e5aa:	4563      	cmp	r3, ip
    e5ac:	d3f4      	bcc.n	e598 <__hexnan+0xe4>
    e5ae:	45a2      	cmp	sl, r4
    e5b0:	d23f      	bcs.n	e632 <__hexnan+0x17e>
    e5b2:	9801      	ldr	r0, [sp, #4]
    e5b4:	4652      	mov	r2, sl
    e5b6:	f854 1b04 	ldr.w	r1, [r4], #4
    e5ba:	4613      	mov	r3, r2
    e5bc:	42a0      	cmp	r0, r4
    e5be:	f843 1b04 	str.w	r1, [r3], #4
    e5c2:	461a      	mov	r2, r3
    e5c4:	d2f7      	bcs.n	e5b6 <__hexnan+0x102>
    e5c6:	9901      	ldr	r1, [sp, #4]
    e5c8:	2200      	movs	r2, #0
    e5ca:	f843 2b04 	str.w	r2, [r3], #4
    e5ce:	4299      	cmp	r1, r3
    e5d0:	d2fb      	bcs.n	e5ca <__hexnan+0x116>
    e5d2:	9900      	ldr	r1, [sp, #0]
    e5d4:	f851 3c04 	ldr.w	r3, [r1, #-4]
    e5d8:	b94b      	cbnz	r3, e5ee <__hexnan+0x13a>
    e5da:	9b01      	ldr	r3, [sp, #4]
    e5dc:	459a      	cmp	sl, r3
    e5de:	d102      	bne.n	e5e6 <__hexnan+0x132>
    e5e0:	e039      	b.n	e656 <__hexnan+0x1a2>
    e5e2:	459a      	cmp	sl, r3
    e5e4:	d038      	beq.n	e658 <__hexnan+0x1a4>
    e5e6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
    e5ea:	2a00      	cmp	r2, #0
    e5ec:	d0f9      	beq.n	e5e2 <__hexnan+0x12e>
    e5ee:	2005      	movs	r0, #5
    e5f0:	e019      	b.n	e626 <__hexnan+0x172>
    e5f2:	f109 0901 	add.w	r9, r9, #1
    e5f6:	3601      	adds	r6, #1
    e5f8:	f1b9 0f08 	cmp.w	r9, #8
    e5fc:	dc07      	bgt.n	e60e <__hexnan+0x15a>
    e5fe:	6823      	ldr	r3, [r4, #0]
    e600:	011b      	lsls	r3, r3, #4
    e602:	f002 020f 	and.w	r2, r2, #15
    e606:	3101      	adds	r1, #1
    e608:	431a      	orrs	r2, r3
    e60a:	6022      	str	r2, [r4, #0]
    e60c:	e7ae      	b.n	e56c <__hexnan+0xb8>
    e60e:	4554      	cmp	r4, sl
    e610:	d9ab      	bls.n	e56a <__hexnan+0xb6>
    e612:	2300      	movs	r3, #0
    e614:	f04f 0901 	mov.w	r9, #1
    e618:	f844 3c04 	str.w	r3, [r4, #-4]
    e61c:	3c04      	subs	r4, #4
    e61e:	e7f0      	b.n	e602 <__hexnan+0x14e>
    e620:	2b29      	cmp	r3, #41	; 0x29
    e622:	d01d      	beq.n	e660 <__hexnan+0x1ac>
    e624:	2004      	movs	r0, #4
    e626:	b005      	add	sp, #20
    e628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e62c:	f7ff fc70 	bl	df10 <__hexdig_init>
    e630:	e74d      	b.n	e4ce <__hexnan+0x1a>
    e632:	9a03      	ldr	r2, [sp, #12]
    e634:	2a00      	cmp	r2, #0
    e636:	d0cc      	beq.n	e5d2 <__hexnan+0x11e>
    e638:	9a00      	ldr	r2, [sp, #0]
    e63a:	9903      	ldr	r1, [sp, #12]
    e63c:	f852 3c04 	ldr.w	r3, [r2, #-4]
    e640:	f1c1 0220 	rsb	r2, r1, #32
    e644:	f04f 31ff 	mov.w	r1, #4294967295
    e648:	fa21 f202 	lsr.w	r2, r1, r2
    e64c:	4013      	ands	r3, r2
    e64e:	9a00      	ldr	r2, [sp, #0]
    e650:	f842 3c04 	str.w	r3, [r2, #-4]
    e654:	e7c0      	b.n	e5d8 <__hexnan+0x124>
    e656:	4653      	mov	r3, sl
    e658:	2201      	movs	r2, #1
    e65a:	2005      	movs	r0, #5
    e65c:	601a      	str	r2, [r3, #0]
    e65e:	e7e2      	b.n	e626 <__hexnan+0x172>
    e660:	9b02      	ldr	r3, [sp, #8]
    e662:	3102      	adds	r1, #2
    e664:	6019      	str	r1, [r3, #0]
    e666:	2e00      	cmp	r6, #0
    e668:	d185      	bne.n	e576 <__hexnan+0xc2>
    e66a:	e7db      	b.n	e624 <__hexnan+0x170>
    e66c:	10000ecc 	.word	0x10000ecc

0000e670 <_setlocale_r>:
    e670:	b510      	push	{r4, lr}
    e672:	4614      	mov	r4, r2
    e674:	b122      	cbz	r2, e680 <_setlocale_r+0x10>
    e676:	4610      	mov	r0, r2
    e678:	490a      	ldr	r1, [pc, #40]	; (e6a4 <_setlocale_r+0x34>)
    e67a:	f000 fcd9 	bl	f030 <strcmp>
    e67e:	b908      	cbnz	r0, e684 <_setlocale_r+0x14>
    e680:	4809      	ldr	r0, [pc, #36]	; (e6a8 <_setlocale_r+0x38>)
    e682:	bd10      	pop	{r4, pc}
    e684:	4620      	mov	r0, r4
    e686:	4908      	ldr	r1, [pc, #32]	; (e6a8 <_setlocale_r+0x38>)
    e688:	f000 fcd2 	bl	f030 <strcmp>
    e68c:	2800      	cmp	r0, #0
    e68e:	d0f7      	beq.n	e680 <_setlocale_r+0x10>
    e690:	4620      	mov	r0, r4
    e692:	4906      	ldr	r1, [pc, #24]	; (e6ac <_setlocale_r+0x3c>)
    e694:	f000 fccc 	bl	f030 <strcmp>
    e698:	4b03      	ldr	r3, [pc, #12]	; (e6a8 <_setlocale_r+0x38>)
    e69a:	2800      	cmp	r0, #0
    e69c:	bf0c      	ite	eq
    e69e:	4618      	moveq	r0, r3
    e6a0:	2000      	movne	r0, #0
    e6a2:	bd10      	pop	{r4, pc}
    e6a4:	00010ed0 	.word	0x00010ed0
    e6a8:	00010ecc 	.word	0x00010ecc
    e6ac:	00010ed8 	.word	0x00010ed8

0000e6b0 <__locale_charset>:
    e6b0:	f240 4080 	movw	r0, #1152	; 0x480
    e6b4:	f2c1 0000 	movt	r0, #4096	; 0x1000
    e6b8:	4770      	bx	lr
    e6ba:	bf00      	nop

0000e6bc <__locale_mb_cur_max>:
    e6bc:	f240 4380 	movw	r3, #1152	; 0x480
    e6c0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    e6c4:	6a18      	ldr	r0, [r3, #32]
    e6c6:	4770      	bx	lr

0000e6c8 <__locale_msgcharset>:
    e6c8:	4800      	ldr	r0, [pc, #0]	; (e6cc <__locale_msgcharset+0x4>)
    e6ca:	4770      	bx	lr
    e6cc:	100004a4 	.word	0x100004a4

0000e6d0 <__locale_cjk_lang>:
    e6d0:	2000      	movs	r0, #0
    e6d2:	4770      	bx	lr

0000e6d4 <_localeconv_r>:
    e6d4:	4800      	ldr	r0, [pc, #0]	; (e6d8 <_localeconv_r+0x4>)
    e6d6:	4770      	bx	lr
    e6d8:	100004c4 	.word	0x100004c4

0000e6dc <setlocale>:
    e6dc:	f240 0350 	movw	r3, #80	; 0x50
    e6e0:	460a      	mov	r2, r1
    e6e2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    e6e6:	4601      	mov	r1, r0
    e6e8:	6818      	ldr	r0, [r3, #0]
    e6ea:	f7ff bfc1 	b.w	e670 <_setlocale_r>
    e6ee:	bf00      	nop

0000e6f0 <localeconv>:
    e6f0:	4800      	ldr	r0, [pc, #0]	; (e6f4 <localeconv+0x4>)
    e6f2:	4770      	bx	lr
    e6f4:	100004c4 	.word	0x100004c4

0000e6f8 <_Balloc>:
    e6f8:	b538      	push	{r3, r4, r5, lr}
    e6fa:	4605      	mov	r5, r0
    e6fc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    e6fe:	460c      	mov	r4, r1
    e700:	b14b      	cbz	r3, e716 <_Balloc+0x1e>
    e702:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    e706:	b180      	cbz	r0, e72a <_Balloc+0x32>
    e708:	6802      	ldr	r2, [r0, #0]
    e70a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
    e70e:	2300      	movs	r3, #0
    e710:	6103      	str	r3, [r0, #16]
    e712:	60c3      	str	r3, [r0, #12]
    e714:	bd38      	pop	{r3, r4, r5, pc}
    e716:	2104      	movs	r1, #4
    e718:	2221      	movs	r2, #33	; 0x21
    e71a:	f000 fda7 	bl	f26c <_calloc_r>
    e71e:	4603      	mov	r3, r0
    e720:	64e8      	str	r0, [r5, #76]	; 0x4c
    e722:	2800      	cmp	r0, #0
    e724:	d1ed      	bne.n	e702 <_Balloc+0xa>
    e726:	2000      	movs	r0, #0
    e728:	bd38      	pop	{r3, r4, r5, pc}
    e72a:	2301      	movs	r3, #1
    e72c:	4628      	mov	r0, r5
    e72e:	4619      	mov	r1, r3
    e730:	fa03 f504 	lsl.w	r5, r3, r4
    e734:	1d6a      	adds	r2, r5, #5
    e736:	0092      	lsls	r2, r2, #2
    e738:	f000 fd98 	bl	f26c <_calloc_r>
    e73c:	2800      	cmp	r0, #0
    e73e:	d0f2      	beq.n	e726 <_Balloc+0x2e>
    e740:	6044      	str	r4, [r0, #4]
    e742:	6085      	str	r5, [r0, #8]
    e744:	e7e3      	b.n	e70e <_Balloc+0x16>
    e746:	bf00      	nop

0000e748 <_Bfree>:
    e748:	b131      	cbz	r1, e758 <_Bfree+0x10>
    e74a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    e74c:	684a      	ldr	r2, [r1, #4]
    e74e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
    e752:	6008      	str	r0, [r1, #0]
    e754:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    e758:	4770      	bx	lr
    e75a:	bf00      	nop

0000e75c <__multadd>:
    e75c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e760:	4688      	mov	r8, r1
    e762:	f8d1 a010 	ldr.w	sl, [r1, #16]
    e766:	b082      	sub	sp, #8
    e768:	4681      	mov	r9, r0
    e76a:	f101 0514 	add.w	r5, r1, #20
    e76e:	2400      	movs	r4, #0
    e770:	682f      	ldr	r7, [r5, #0]
    e772:	3401      	adds	r4, #1
    e774:	b2be      	uxth	r6, r7
    e776:	0c3f      	lsrs	r7, r7, #16
    e778:	fb02 3606 	mla	r6, r2, r6, r3
    e77c:	fb02 f307 	mul.w	r3, r2, r7
    e780:	eb03 4316 	add.w	r3, r3, r6, lsr #16
    e784:	b2b6      	uxth	r6, r6
    e786:	eb06 4603 	add.w	r6, r6, r3, lsl #16
    e78a:	0c1b      	lsrs	r3, r3, #16
    e78c:	45a2      	cmp	sl, r4
    e78e:	f845 6b04 	str.w	r6, [r5], #4
    e792:	dced      	bgt.n	e770 <__multadd+0x14>
    e794:	b153      	cbz	r3, e7ac <__multadd+0x50>
    e796:	f8d8 2008 	ldr.w	r2, [r8, #8]
    e79a:	4592      	cmp	sl, r2
    e79c:	da0a      	bge.n	e7b4 <__multadd+0x58>
    e79e:	eb08 028a 	add.w	r2, r8, sl, lsl #2
    e7a2:	f10a 0101 	add.w	r1, sl, #1
    e7a6:	f8c8 1010 	str.w	r1, [r8, #16]
    e7aa:	6153      	str	r3, [r2, #20]
    e7ac:	4640      	mov	r0, r8
    e7ae:	b002      	add	sp, #8
    e7b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e7b4:	f8d8 1004 	ldr.w	r1, [r8, #4]
    e7b8:	4648      	mov	r0, r9
    e7ba:	9301      	str	r3, [sp, #4]
    e7bc:	3101      	adds	r1, #1
    e7be:	f7ff ff9b 	bl	e6f8 <_Balloc>
    e7c2:	f8d8 2010 	ldr.w	r2, [r8, #16]
    e7c6:	f108 010c 	add.w	r1, r8, #12
    e7ca:	3202      	adds	r2, #2
    e7cc:	0092      	lsls	r2, r2, #2
    e7ce:	4604      	mov	r4, r0
    e7d0:	f100 000c 	add.w	r0, r0, #12
    e7d4:	f7fe f9d0 	bl	cb78 <memcpy>
    e7d8:	f8d8 1004 	ldr.w	r1, [r8, #4]
    e7dc:	f8d9 204c 	ldr.w	r2, [r9, #76]	; 0x4c
    e7e0:	9b01      	ldr	r3, [sp, #4]
    e7e2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
    e7e6:	f8c8 0000 	str.w	r0, [r8]
    e7ea:	f842 8021 	str.w	r8, [r2, r1, lsl #2]
    e7ee:	46a0      	mov	r8, r4
    e7f0:	e7d5      	b.n	e79e <__multadd+0x42>
    e7f2:	bf00      	nop

0000e7f4 <__s2b>:
    e7f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    e7f8:	f648 6539 	movw	r5, #36409	; 0x8e39
    e7fc:	461f      	mov	r7, r3
    e7fe:	f6c3 05e3 	movt	r5, #14563	; 0x38e3
    e802:	f103 0308 	add.w	r3, r3, #8
    e806:	4606      	mov	r6, r0
    e808:	460c      	mov	r4, r1
    e80a:	4690      	mov	r8, r2
    e80c:	fb85 1003 	smull	r1, r0, r5, r3
    e810:	17db      	asrs	r3, r3, #31
    e812:	ebc3 0060 	rsb	r0, r3, r0, asr #1
    e816:	2801      	cmp	r0, #1
    e818:	dd37      	ble.n	e88a <__s2b+0x96>
    e81a:	2501      	movs	r5, #1
    e81c:	2100      	movs	r1, #0
    e81e:	006d      	lsls	r5, r5, #1
    e820:	3101      	adds	r1, #1
    e822:	42a8      	cmp	r0, r5
    e824:	dcfb      	bgt.n	e81e <__s2b+0x2a>
    e826:	4630      	mov	r0, r6
    e828:	f7ff ff66 	bl	e6f8 <_Balloc>
    e82c:	9b08      	ldr	r3, [sp, #32]
    e82e:	6143      	str	r3, [r0, #20]
    e830:	2301      	movs	r3, #1
    e832:	f1b8 0f09 	cmp.w	r8, #9
    e836:	4601      	mov	r1, r0
    e838:	6103      	str	r3, [r0, #16]
    e83a:	dd22      	ble.n	e882 <__s2b+0x8e>
    e83c:	f104 0909 	add.w	r9, r4, #9
    e840:	4444      	add	r4, r8
    e842:	464d      	mov	r5, r9
    e844:	f815 3b01 	ldrb.w	r3, [r5], #1
    e848:	220a      	movs	r2, #10
    e84a:	4630      	mov	r0, r6
    e84c:	3b30      	subs	r3, #48	; 0x30
    e84e:	f7ff ff85 	bl	e75c <__multadd>
    e852:	42a5      	cmp	r5, r4
    e854:	4601      	mov	r1, r0
    e856:	d1f5      	bne.n	e844 <__s2b+0x50>
    e858:	eb09 0408 	add.w	r4, r9, r8
    e85c:	3c08      	subs	r4, #8
    e85e:	4547      	cmp	r7, r8
    e860:	dd0c      	ble.n	e87c <__s2b+0x88>
    e862:	ebc8 0707 	rsb	r7, r8, r7
    e866:	19e7      	adds	r7, r4, r7
    e868:	f814 3b01 	ldrb.w	r3, [r4], #1
    e86c:	220a      	movs	r2, #10
    e86e:	4630      	mov	r0, r6
    e870:	3b30      	subs	r3, #48	; 0x30
    e872:	f7ff ff73 	bl	e75c <__multadd>
    e876:	42bc      	cmp	r4, r7
    e878:	4601      	mov	r1, r0
    e87a:	d1f5      	bne.n	e868 <__s2b+0x74>
    e87c:	4608      	mov	r0, r1
    e87e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    e882:	340a      	adds	r4, #10
    e884:	f04f 0809 	mov.w	r8, #9
    e888:	e7e9      	b.n	e85e <__s2b+0x6a>
    e88a:	2100      	movs	r1, #0
    e88c:	e7cb      	b.n	e826 <__s2b+0x32>
    e88e:	bf00      	nop

0000e890 <__hi0bits>:
    e890:	4603      	mov	r3, r0
    e892:	2000      	movs	r0, #0
    e894:	0c1a      	lsrs	r2, r3, #16
    e896:	d101      	bne.n	e89c <__hi0bits+0xc>
    e898:	041b      	lsls	r3, r3, #16
    e89a:	2010      	movs	r0, #16
    e89c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
    e8a0:	d101      	bne.n	e8a6 <__hi0bits+0x16>
    e8a2:	3008      	adds	r0, #8
    e8a4:	021b      	lsls	r3, r3, #8
    e8a6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
    e8aa:	d101      	bne.n	e8b0 <__hi0bits+0x20>
    e8ac:	3004      	adds	r0, #4
    e8ae:	011b      	lsls	r3, r3, #4
    e8b0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
    e8b4:	d101      	bne.n	e8ba <__hi0bits+0x2a>
    e8b6:	3002      	adds	r0, #2
    e8b8:	009b      	lsls	r3, r3, #2
    e8ba:	2b00      	cmp	r3, #0
    e8bc:	db02      	blt.n	e8c4 <__hi0bits+0x34>
    e8be:	005b      	lsls	r3, r3, #1
    e8c0:	d401      	bmi.n	e8c6 <__hi0bits+0x36>
    e8c2:	2020      	movs	r0, #32
    e8c4:	4770      	bx	lr
    e8c6:	3001      	adds	r0, #1
    e8c8:	4770      	bx	lr
    e8ca:	bf00      	nop

0000e8cc <__lo0bits>:
    e8cc:	6803      	ldr	r3, [r0, #0]
    e8ce:	4602      	mov	r2, r0
    e8d0:	f013 0007 	ands.w	r0, r3, #7
    e8d4:	d007      	beq.n	e8e6 <__lo0bits+0x1a>
    e8d6:	07d9      	lsls	r1, r3, #31
    e8d8:	d41f      	bmi.n	e91a <__lo0bits+0x4e>
    e8da:	0798      	lsls	r0, r3, #30
    e8dc:	d41f      	bmi.n	e91e <__lo0bits+0x52>
    e8de:	089b      	lsrs	r3, r3, #2
    e8e0:	2002      	movs	r0, #2
    e8e2:	6013      	str	r3, [r2, #0]
    e8e4:	4770      	bx	lr
    e8e6:	b299      	uxth	r1, r3
    e8e8:	b909      	cbnz	r1, e8ee <__lo0bits+0x22>
    e8ea:	0c1b      	lsrs	r3, r3, #16
    e8ec:	2010      	movs	r0, #16
    e8ee:	f013 0fff 	tst.w	r3, #255	; 0xff
    e8f2:	d101      	bne.n	e8f8 <__lo0bits+0x2c>
    e8f4:	3008      	adds	r0, #8
    e8f6:	0a1b      	lsrs	r3, r3, #8
    e8f8:	0719      	lsls	r1, r3, #28
    e8fa:	d101      	bne.n	e900 <__lo0bits+0x34>
    e8fc:	3004      	adds	r0, #4
    e8fe:	091b      	lsrs	r3, r3, #4
    e900:	0799      	lsls	r1, r3, #30
    e902:	d101      	bne.n	e908 <__lo0bits+0x3c>
    e904:	3002      	adds	r0, #2
    e906:	089b      	lsrs	r3, r3, #2
    e908:	07d9      	lsls	r1, r3, #31
    e90a:	d404      	bmi.n	e916 <__lo0bits+0x4a>
    e90c:	085b      	lsrs	r3, r3, #1
    e90e:	d101      	bne.n	e914 <__lo0bits+0x48>
    e910:	2020      	movs	r0, #32
    e912:	4770      	bx	lr
    e914:	3001      	adds	r0, #1
    e916:	6013      	str	r3, [r2, #0]
    e918:	4770      	bx	lr
    e91a:	2000      	movs	r0, #0
    e91c:	4770      	bx	lr
    e91e:	085b      	lsrs	r3, r3, #1
    e920:	2001      	movs	r0, #1
    e922:	6013      	str	r3, [r2, #0]
    e924:	4770      	bx	lr
    e926:	bf00      	nop

0000e928 <__i2b>:
    e928:	b510      	push	{r4, lr}
    e92a:	460c      	mov	r4, r1
    e92c:	2101      	movs	r1, #1
    e92e:	f7ff fee3 	bl	e6f8 <_Balloc>
    e932:	2201      	movs	r2, #1
    e934:	6144      	str	r4, [r0, #20]
    e936:	6102      	str	r2, [r0, #16]
    e938:	bd10      	pop	{r4, pc}
    e93a:	bf00      	nop

0000e93c <__multiply>:
    e93c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e940:	460c      	mov	r4, r1
    e942:	690e      	ldr	r6, [r1, #16]
    e944:	b085      	sub	sp, #20
    e946:	6915      	ldr	r5, [r2, #16]
    e948:	4617      	mov	r7, r2
    e94a:	42ae      	cmp	r6, r5
    e94c:	da04      	bge.n	e958 <__multiply+0x1c>
    e94e:	4632      	mov	r2, r6
    e950:	463c      	mov	r4, r7
    e952:	462e      	mov	r6, r5
    e954:	460f      	mov	r7, r1
    e956:	4615      	mov	r5, r2
    e958:	68a3      	ldr	r3, [r4, #8]
    e95a:	eb06 0805 	add.w	r8, r6, r5
    e95e:	6861      	ldr	r1, [r4, #4]
    e960:	4598      	cmp	r8, r3
    e962:	bfc8      	it	gt
    e964:	3101      	addgt	r1, #1
    e966:	f7ff fec7 	bl	e6f8 <_Balloc>
    e96a:	eb00 0988 	add.w	r9, r0, r8, lsl #2
    e96e:	f100 0314 	add.w	r3, r0, #20
    e972:	f109 0914 	add.w	r9, r9, #20
    e976:	9001      	str	r0, [sp, #4]
    e978:	2000      	movs	r0, #0
    e97a:	454b      	cmp	r3, r9
    e97c:	d203      	bcs.n	e986 <__multiply+0x4a>
    e97e:	f843 0b04 	str.w	r0, [r3], #4
    e982:	4599      	cmp	r9, r3
    e984:	d8fb      	bhi.n	e97e <__multiply+0x42>
    e986:	eb07 0585 	add.w	r5, r7, r5, lsl #2
    e98a:	eb04 0686 	add.w	r6, r4, r6, lsl #2
    e98e:	3714      	adds	r7, #20
    e990:	3514      	adds	r5, #20
    e992:	3414      	adds	r4, #20
    e994:	3614      	adds	r6, #20
    e996:	42af      	cmp	r7, r5
    e998:	d257      	bcs.n	ea4a <__multiply+0x10e>
    e99a:	9a01      	ldr	r2, [sp, #4]
    e99c:	f8cd 9008 	str.w	r9, [sp, #8]
    e9a0:	46a9      	mov	r9, r5
    e9a2:	f8cd 800c 	str.w	r8, [sp, #12]
    e9a6:	f102 0c18 	add.w	ip, r2, #24
    e9aa:	46a0      	mov	r8, r4
    e9ac:	f857 4b04 	ldr.w	r4, [r7], #4
    e9b0:	b2a0      	uxth	r0, r4
    e9b2:	b1f0      	cbz	r0, e9f2 <__multiply+0xb6>
    e9b4:	4642      	mov	r2, r8
    e9b6:	f1ac 0304 	sub.w	r3, ip, #4
    e9ba:	2400      	movs	r4, #0
    e9bc:	f852 1b04 	ldr.w	r1, [r2], #4
    e9c0:	681d      	ldr	r5, [r3, #0]
    e9c2:	fa1f fa81 	uxth.w	sl, r1
    e9c6:	0c09      	lsrs	r1, r1, #16
    e9c8:	fa1f fb85 	uxth.w	fp, r5
    e9cc:	0c2d      	lsrs	r5, r5, #16
    e9ce:	fb00 ba0a 	mla	sl, r0, sl, fp
    e9d2:	fb00 5101 	mla	r1, r0, r1, r5
    e9d6:	4454      	add	r4, sl
    e9d8:	eb01 4114 	add.w	r1, r1, r4, lsr #16
    e9dc:	b2a4      	uxth	r4, r4
    e9de:	ea44 4501 	orr.w	r5, r4, r1, lsl #16
    e9e2:	0c0c      	lsrs	r4, r1, #16
    e9e4:	4296      	cmp	r6, r2
    e9e6:	f843 5b04 	str.w	r5, [r3], #4
    e9ea:	d8e7      	bhi.n	e9bc <__multiply+0x80>
    e9ec:	601c      	str	r4, [r3, #0]
    e9ee:	f857 4c04 	ldr.w	r4, [r7, #-4]
    e9f2:	0c24      	lsrs	r4, r4, #16
    e9f4:	d021      	beq.n	ea3a <__multiply+0xfe>
    e9f6:	f85c 1c04 	ldr.w	r1, [ip, #-4]
    e9fa:	4642      	mov	r2, r8
    e9fc:	4663      	mov	r3, ip
    e9fe:	2500      	movs	r5, #0
    ea00:	4608      	mov	r0, r1
    ea02:	f8b2 a000 	ldrh.w	sl, [r2]
    ea06:	0c00      	lsrs	r0, r0, #16
    ea08:	b289      	uxth	r1, r1
    ea0a:	469b      	mov	fp, r3
    ea0c:	fb04 000a 	mla	r0, r4, sl, r0
    ea10:	1945      	adds	r5, r0, r5
    ea12:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
    ea16:	f843 1c04 	str.w	r1, [r3, #-4]
    ea1a:	f853 0b04 	ldr.w	r0, [r3], #4
    ea1e:	f852 1b04 	ldr.w	r1, [r2], #4
    ea22:	fa1f fa80 	uxth.w	sl, r0
    ea26:	0c09      	lsrs	r1, r1, #16
    ea28:	fb04 a101 	mla	r1, r4, r1, sl
    ea2c:	eb01 4115 	add.w	r1, r1, r5, lsr #16
    ea30:	0c0d      	lsrs	r5, r1, #16
    ea32:	4296      	cmp	r6, r2
    ea34:	d8e5      	bhi.n	ea02 <__multiply+0xc6>
    ea36:	f8cb 1000 	str.w	r1, [fp]
    ea3a:	45b9      	cmp	r9, r7
    ea3c:	f10c 0c04 	add.w	ip, ip, #4
    ea40:	d8b4      	bhi.n	e9ac <__multiply+0x70>
    ea42:	f8dd 9008 	ldr.w	r9, [sp, #8]
    ea46:	f8dd 800c 	ldr.w	r8, [sp, #12]
    ea4a:	f1b8 0f00 	cmp.w	r8, #0
    ea4e:	dd0b      	ble.n	ea68 <__multiply+0x12c>
    ea50:	f859 3c04 	ldr.w	r3, [r9, #-4]
    ea54:	f1a9 0904 	sub.w	r9, r9, #4
    ea58:	b11b      	cbz	r3, ea62 <__multiply+0x126>
    ea5a:	e005      	b.n	ea68 <__multiply+0x12c>
    ea5c:	f859 3d04 	ldr.w	r3, [r9, #-4]!
    ea60:	b913      	cbnz	r3, ea68 <__multiply+0x12c>
    ea62:	f1b8 0801 	subs.w	r8, r8, #1
    ea66:	d1f9      	bne.n	ea5c <__multiply+0x120>
    ea68:	9b01      	ldr	r3, [sp, #4]
    ea6a:	4618      	mov	r0, r3
    ea6c:	f8c3 8010 	str.w	r8, [r3, #16]
    ea70:	b005      	add	sp, #20
    ea72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ea76:	bf00      	nop

0000ea78 <__pow5mult>:
    ea78:	f012 0303 	ands.w	r3, r2, #3
    ea7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    ea80:	4614      	mov	r4, r2
    ea82:	4680      	mov	r8, r0
    ea84:	460f      	mov	r7, r1
    ea86:	d12b      	bne.n	eae0 <__pow5mult+0x68>
    ea88:	10a4      	asrs	r4, r4, #2
    ea8a:	d01b      	beq.n	eac4 <__pow5mult+0x4c>
    ea8c:	f8d8 6048 	ldr.w	r6, [r8, #72]	; 0x48
    ea90:	b92e      	cbnz	r6, ea9e <__pow5mult+0x26>
    ea92:	e02e      	b.n	eaf2 <__pow5mult+0x7a>
    ea94:	1064      	asrs	r4, r4, #1
    ea96:	d015      	beq.n	eac4 <__pow5mult+0x4c>
    ea98:	6835      	ldr	r5, [r6, #0]
    ea9a:	b1b5      	cbz	r5, eaca <__pow5mult+0x52>
    ea9c:	462e      	mov	r6, r5
    ea9e:	07e0      	lsls	r0, r4, #31
    eaa0:	d5f8      	bpl.n	ea94 <__pow5mult+0x1c>
    eaa2:	4639      	mov	r1, r7
    eaa4:	4632      	mov	r2, r6
    eaa6:	4640      	mov	r0, r8
    eaa8:	f7ff ff48 	bl	e93c <__multiply>
    eaac:	b1b7      	cbz	r7, eadc <__pow5mult+0x64>
    eaae:	687a      	ldr	r2, [r7, #4]
    eab0:	1064      	asrs	r4, r4, #1
    eab2:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
    eab6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    eaba:	6039      	str	r1, [r7, #0]
    eabc:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
    eac0:	4607      	mov	r7, r0
    eac2:	d1e9      	bne.n	ea98 <__pow5mult+0x20>
    eac4:	4638      	mov	r0, r7
    eac6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    eaca:	4631      	mov	r1, r6
    eacc:	4632      	mov	r2, r6
    eace:	4640      	mov	r0, r8
    ead0:	f7ff ff34 	bl	e93c <__multiply>
    ead4:	6030      	str	r0, [r6, #0]
    ead6:	4606      	mov	r6, r0
    ead8:	6005      	str	r5, [r0, #0]
    eada:	e7e0      	b.n	ea9e <__pow5mult+0x26>
    eadc:	4607      	mov	r7, r0
    eade:	e7d9      	b.n	ea94 <__pow5mult+0x1c>
    eae0:	4a09      	ldr	r2, [pc, #36]	; (eb08 <__pow5mult+0x90>)
    eae2:	1e5d      	subs	r5, r3, #1
    eae4:	2300      	movs	r3, #0
    eae6:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
    eaea:	f7ff fe37 	bl	e75c <__multadd>
    eaee:	4607      	mov	r7, r0
    eaf0:	e7ca      	b.n	ea88 <__pow5mult+0x10>
    eaf2:	4640      	mov	r0, r8
    eaf4:	f240 2171 	movw	r1, #625	; 0x271
    eaf8:	f7ff ff16 	bl	e928 <__i2b>
    eafc:	2300      	movs	r3, #0
    eafe:	f8c8 0048 	str.w	r0, [r8, #72]	; 0x48
    eb02:	4606      	mov	r6, r0
    eb04:	6003      	str	r3, [r0, #0]
    eb06:	e7ca      	b.n	ea9e <__pow5mult+0x26>
    eb08:	00010ee0 	.word	0x00010ee0

0000eb0c <__lshift>:
    eb0c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eb10:	4693      	mov	fp, r2
    eb12:	690a      	ldr	r2, [r1, #16]
    eb14:	4688      	mov	r8, r1
    eb16:	ea4f 156b 	mov.w	r5, fp, asr #5
    eb1a:	688b      	ldr	r3, [r1, #8]
    eb1c:	eb05 0a02 	add.w	sl, r5, r2
    eb20:	4681      	mov	r9, r0
    eb22:	f10a 0601 	add.w	r6, sl, #1
    eb26:	6849      	ldr	r1, [r1, #4]
    eb28:	429e      	cmp	r6, r3
    eb2a:	dd03      	ble.n	eb34 <__lshift+0x28>
    eb2c:	005b      	lsls	r3, r3, #1
    eb2e:	3101      	adds	r1, #1
    eb30:	429e      	cmp	r6, r3
    eb32:	dcfb      	bgt.n	eb2c <__lshift+0x20>
    eb34:	4648      	mov	r0, r9
    eb36:	f7ff fddf 	bl	e6f8 <_Balloc>
    eb3a:	2d00      	cmp	r5, #0
    eb3c:	4602      	mov	r2, r0
    eb3e:	f100 0414 	add.w	r4, r0, #20
    eb42:	dd0a      	ble.n	eb5a <__lshift+0x4e>
    eb44:	2300      	movs	r3, #0
    eb46:	461f      	mov	r7, r3
    eb48:	3301      	adds	r3, #1
    eb4a:	f844 7b04 	str.w	r7, [r4], #4
    eb4e:	42ab      	cmp	r3, r5
    eb50:	d1fa      	bne.n	eb48 <__lshift+0x3c>
    eb52:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    eb56:	f103 0414 	add.w	r4, r3, #20
    eb5a:	f8d8 7010 	ldr.w	r7, [r8, #16]
    eb5e:	f108 0514 	add.w	r5, r8, #20
    eb62:	eb08 0787 	add.w	r7, r8, r7, lsl #2
    eb66:	3714      	adds	r7, #20
    eb68:	f01b 0b1f 	ands.w	fp, fp, #31
    eb6c:	d021      	beq.n	ebb2 <__lshift+0xa6>
    eb6e:	f1cb 0320 	rsb	r3, fp, #32
    eb72:	2100      	movs	r1, #0
    eb74:	6828      	ldr	r0, [r5, #0]
    eb76:	fa00 f00b 	lsl.w	r0, r0, fp
    eb7a:	4301      	orrs	r1, r0
    eb7c:	f844 1b04 	str.w	r1, [r4], #4
    eb80:	f855 1b04 	ldr.w	r1, [r5], #4
    eb84:	42af      	cmp	r7, r5
    eb86:	fa21 f103 	lsr.w	r1, r1, r3
    eb8a:	d8f3      	bhi.n	eb74 <__lshift+0x68>
    eb8c:	6021      	str	r1, [r4, #0]
    eb8e:	b109      	cbz	r1, eb94 <__lshift+0x88>
    eb90:	f10a 0602 	add.w	r6, sl, #2
    eb94:	f8d9 304c 	ldr.w	r3, [r9, #76]	; 0x4c
    eb98:	3e01      	subs	r6, #1
    eb9a:	f8d8 1004 	ldr.w	r1, [r8, #4]
    eb9e:	4610      	mov	r0, r2
    eba0:	6116      	str	r6, [r2, #16]
    eba2:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
    eba6:	f8c8 2000 	str.w	r2, [r8]
    ebaa:	f843 8021 	str.w	r8, [r3, r1, lsl #2]
    ebae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ebb2:	f855 3b04 	ldr.w	r3, [r5], #4
    ebb6:	42af      	cmp	r7, r5
    ebb8:	f844 3b04 	str.w	r3, [r4], #4
    ebbc:	d9ea      	bls.n	eb94 <__lshift+0x88>
    ebbe:	f855 3b04 	ldr.w	r3, [r5], #4
    ebc2:	42af      	cmp	r7, r5
    ebc4:	f844 3b04 	str.w	r3, [r4], #4
    ebc8:	d8f3      	bhi.n	ebb2 <__lshift+0xa6>
    ebca:	e7e3      	b.n	eb94 <__lshift+0x88>

0000ebcc <__mcmp>:
    ebcc:	4603      	mov	r3, r0
    ebce:	690a      	ldr	r2, [r1, #16]
    ebd0:	6900      	ldr	r0, [r0, #16]
    ebd2:	b430      	push	{r4, r5}
    ebd4:	1a80      	subs	r0, r0, r2
    ebd6:	d10f      	bne.n	ebf8 <__mcmp+0x2c>
    ebd8:	3204      	adds	r2, #4
    ebda:	f103 0514 	add.w	r5, r3, #20
    ebde:	0092      	lsls	r2, r2, #2
    ebe0:	189b      	adds	r3, r3, r2
    ebe2:	1889      	adds	r1, r1, r2
    ebe4:	3304      	adds	r3, #4
    ebe6:	3104      	adds	r1, #4
    ebe8:	f853 2d04 	ldr.w	r2, [r3, #-4]!
    ebec:	f851 4d04 	ldr.w	r4, [r1, #-4]!
    ebf0:	42a2      	cmp	r2, r4
    ebf2:	d103      	bne.n	ebfc <__mcmp+0x30>
    ebf4:	429d      	cmp	r5, r3
    ebf6:	d3f7      	bcc.n	ebe8 <__mcmp+0x1c>
    ebf8:	bc30      	pop	{r4, r5}
    ebfa:	4770      	bx	lr
    ebfc:	4294      	cmp	r4, r2
    ebfe:	bf94      	ite	ls
    ec00:	2001      	movls	r0, #1
    ec02:	f04f 30ff 	movhi.w	r0, #4294967295
    ec06:	e7f7      	b.n	ebf8 <__mcmp+0x2c>

0000ec08 <__mdiff>:
    ec08:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ec0c:	468b      	mov	fp, r1
    ec0e:	4604      	mov	r4, r0
    ec10:	4611      	mov	r1, r2
    ec12:	4658      	mov	r0, fp
    ec14:	4691      	mov	r9, r2
    ec16:	f7ff ffd9 	bl	ebcc <__mcmp>
    ec1a:	1e05      	subs	r5, r0, #0
    ec1c:	d061      	beq.n	ece2 <__mdiff+0xda>
    ec1e:	bfbc      	itt	lt
    ec20:	465b      	movlt	r3, fp
    ec22:	46cb      	movlt	fp, r9
    ec24:	4620      	mov	r0, r4
    ec26:	bfb8      	it	lt
    ec28:	4699      	movlt	r9, r3
    ec2a:	f8db 1004 	ldr.w	r1, [fp, #4]
    ec2e:	bfac      	ite	ge
    ec30:	f04f 0800 	movge.w	r8, #0
    ec34:	f04f 0801 	movlt.w	r8, #1
    ec38:	f7ff fd5e 	bl	e6f8 <_Balloc>
    ec3c:	f8db 7010 	ldr.w	r7, [fp, #16]
    ec40:	f109 0514 	add.w	r5, r9, #20
    ec44:	f8d9 3010 	ldr.w	r3, [r9, #16]
    ec48:	f10b 0614 	add.w	r6, fp, #20
    ec4c:	2400      	movs	r4, #0
    ec4e:	eb0b 0c87 	add.w	ip, fp, r7, lsl #2
    ec52:	eb09 0983 	add.w	r9, r9, r3, lsl #2
    ec56:	f10c 0c14 	add.w	ip, ip, #20
    ec5a:	f109 0914 	add.w	r9, r9, #20
    ec5e:	f100 0a14 	add.w	sl, r0, #20
    ec62:	f8c0 800c 	str.w	r8, [r0, #12]
    ec66:	f856 8b04 	ldr.w	r8, [r6], #4
    ec6a:	4653      	mov	r3, sl
    ec6c:	f855 ab04 	ldr.w	sl, [r5], #4
    ec70:	4632      	mov	r2, r6
    ec72:	fa1f f188 	uxth.w	r1, r8
    ec76:	1909      	adds	r1, r1, r4
    ec78:	fa1f fb8a 	uxth.w	fp, sl
    ec7c:	ebcb 0101 	rsb	r1, fp, r1
    ec80:	ea4f 441a 	mov.w	r4, sl, lsr #16
    ec84:	ebc4 4418 	rsb	r4, r4, r8, lsr #16
    ec88:	eb04 4421 	add.w	r4, r4, r1, asr #16
    ec8c:	b289      	uxth	r1, r1
    ec8e:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
    ec92:	1424      	asrs	r4, r4, #16
    ec94:	45a9      	cmp	r9, r5
    ec96:	f843 1b04 	str.w	r1, [r3], #4
    ec9a:	469a      	mov	sl, r3
    ec9c:	d8e3      	bhi.n	ec66 <__mdiff+0x5e>
    ec9e:	45b4      	cmp	ip, r6
    eca0:	4698      	mov	r8, r3
    eca2:	d914      	bls.n	ecce <__mdiff+0xc6>
    eca4:	f852 5b04 	ldr.w	r5, [r2], #4
    eca8:	b2a9      	uxth	r1, r5
    ecaa:	0c2d      	lsrs	r5, r5, #16
    ecac:	190c      	adds	r4, r1, r4
    ecae:	eb05 4524 	add.w	r5, r5, r4, asr #16
    ecb2:	b2a4      	uxth	r4, r4
    ecb4:	ea44 4105 	orr.w	r1, r4, r5, lsl #16
    ecb8:	142c      	asrs	r4, r5, #16
    ecba:	4594      	cmp	ip, r2
    ecbc:	f843 1b04 	str.w	r1, [r3], #4
    ecc0:	d8f0      	bhi.n	eca4 <__mdiff+0x9c>
    ecc2:	43f3      	mvns	r3, r6
    ecc4:	4463      	add	r3, ip
    ecc6:	f023 0303 	bic.w	r3, r3, #3
    ecca:	3304      	adds	r3, #4
    eccc:	4443      	add	r3, r8
    ecce:	3b04      	subs	r3, #4
    ecd0:	b921      	cbnz	r1, ecdc <__mdiff+0xd4>
    ecd2:	f853 2d04 	ldr.w	r2, [r3, #-4]!
    ecd6:	3f01      	subs	r7, #1
    ecd8:	2a00      	cmp	r2, #0
    ecda:	d0fa      	beq.n	ecd2 <__mdiff+0xca>
    ecdc:	6107      	str	r7, [r0, #16]
    ecde:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ece2:	4620      	mov	r0, r4
    ece4:	4629      	mov	r1, r5
    ece6:	f7ff fd07 	bl	e6f8 <_Balloc>
    ecea:	2301      	movs	r3, #1
    ecec:	6145      	str	r5, [r0, #20]
    ecee:	6103      	str	r3, [r0, #16]
    ecf0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ecf4 <__ulp>:
    ecf4:	2300      	movs	r3, #0
    ecf6:	f6c7 73f0 	movt	r3, #32752	; 0x7ff0
    ecfa:	400b      	ands	r3, r1
    ecfc:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
    ed00:	2b00      	cmp	r3, #0
    ed02:	dd02      	ble.n	ed0a <__ulp+0x16>
    ed04:	4619      	mov	r1, r3
    ed06:	2000      	movs	r0, #0
    ed08:	4770      	bx	lr
    ed0a:	425b      	negs	r3, r3
    ed0c:	2100      	movs	r1, #0
    ed0e:	151b      	asrs	r3, r3, #20
    ed10:	2b13      	cmp	r3, #19
    ed12:	dd0b      	ble.n	ed2c <__ulp+0x38>
    ed14:	2b32      	cmp	r3, #50	; 0x32
    ed16:	dd02      	ble.n	ed1e <__ulp+0x2a>
    ed18:	2301      	movs	r3, #1
    ed1a:	4618      	mov	r0, r3
    ed1c:	4770      	bx	lr
    ed1e:	2201      	movs	r2, #1
    ed20:	f1c3 0333 	rsb	r3, r3, #51	; 0x33
    ed24:	fa02 f303 	lsl.w	r3, r2, r3
    ed28:	4618      	mov	r0, r3
    ed2a:	4770      	bx	lr
    ed2c:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    ed30:	2000      	movs	r0, #0
    ed32:	fa42 f103 	asr.w	r1, r2, r3
    ed36:	4770      	bx	lr

0000ed38 <__b2d>:
    ed38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    ed3c:	f100 0814 	add.w	r8, r0, #20
    ed40:	6906      	ldr	r6, [r0, #16]
    ed42:	4689      	mov	r9, r1
    ed44:	3604      	adds	r6, #4
    ed46:	eb00 0686 	add.w	r6, r0, r6, lsl #2
    ed4a:	4634      	mov	r4, r6
    ed4c:	4637      	mov	r7, r6
    ed4e:	f854 5b04 	ldr.w	r5, [r4], #4
    ed52:	4628      	mov	r0, r5
    ed54:	f7ff fd9c 	bl	e890 <__hi0bits>
    ed58:	280a      	cmp	r0, #10
    ed5a:	f1c0 0320 	rsb	r3, r0, #32
    ed5e:	f8c9 3000 	str.w	r3, [r9]
    ed62:	dc18      	bgt.n	ed96 <__b2d+0x5e>
    ed64:	45b0      	cmp	r8, r6
    ed66:	f1c0 010b 	rsb	r1, r0, #11
    ed6a:	fa25 f701 	lsr.w	r7, r5, r1
    ed6e:	bf38      	it	cc
    ed70:	f854 4c08 	ldrcc.w	r4, [r4, #-8]
    ed74:	f047 577f 	orr.w	r7, r7, #1069547520	; 0x3fc00000
    ed78:	f447 1340 	orr.w	r3, r7, #3145728	; 0x300000
    ed7c:	bf34      	ite	cc
    ed7e:	fa24 f101 	lsrcc.w	r1, r4, r1
    ed82:	2100      	movcs	r1, #0
    ed84:	3015      	adds	r0, #21
    ed86:	fa05 f500 	lsl.w	r5, r5, r0
    ed8a:	ea41 0205 	orr.w	r2, r1, r5
    ed8e:	4610      	mov	r0, r2
    ed90:	4619      	mov	r1, r3
    ed92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    ed96:	2100      	movs	r1, #0
    ed98:	45b0      	cmp	r8, r6
    ed9a:	d202      	bcs.n	eda2 <__b2d+0x6a>
    ed9c:	f854 1c08 	ldr.w	r1, [r4, #-8]
    eda0:	1f37      	subs	r7, r6, #4
    eda2:	f1b0 040b 	subs.w	r4, r0, #11
    eda6:	d018      	beq.n	edda <__b2d+0xa2>
    eda8:	fa05 f504 	lsl.w	r5, r5, r4
    edac:	f1c0 002b 	rsb	r0, r0, #43	; 0x2b
    edb0:	4547      	cmp	r7, r8
    edb2:	f045 557f 	orr.w	r5, r5, #1069547520	; 0x3fc00000
    edb6:	fa21 f600 	lsr.w	r6, r1, r0
    edba:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
    edbe:	ea45 0306 	orr.w	r3, r5, r6
    edc2:	bf88      	it	hi
    edc4:	f857 5c04 	ldrhi.w	r5, [r7, #-4]
    edc8:	fa01 f104 	lsl.w	r1, r1, r4
    edcc:	bf8c      	ite	hi
    edce:	fa25 f000 	lsrhi.w	r0, r5, r0
    edd2:	2000      	movls	r0, #0
    edd4:	ea40 0201 	orr.w	r2, r0, r1
    edd8:	e7d9      	b.n	ed8e <__b2d+0x56>
    edda:	f045 557f 	orr.w	r5, r5, #1069547520	; 0x3fc00000
    edde:	460a      	mov	r2, r1
    ede0:	f445 1340 	orr.w	r3, r5, #3145728	; 0x300000
    ede4:	e7d3      	b.n	ed8e <__b2d+0x56>
    ede6:	bf00      	nop

0000ede8 <__d2b>:
    ede8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    edec:	b083      	sub	sp, #12
    edee:	2101      	movs	r1, #1
    edf0:	461d      	mov	r5, r3
    edf2:	4614      	mov	r4, r2
    edf4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
    edf6:	f7ff fc7f 	bl	e6f8 <_Balloc>
    edfa:	f3c5 560a 	ubfx	r6, r5, #20, #11
    edfe:	f025 437f 	bic.w	r3, r5, #4278190080	; 0xff000000
    ee02:	46a9      	mov	r9, r5
    ee04:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
    ee08:	4680      	mov	r8, r0
    ee0a:	b10e      	cbz	r6, ee10 <__d2b+0x28>
    ee0c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    ee10:	9301      	str	r3, [sp, #4]
    ee12:	2c00      	cmp	r4, #0
    ee14:	d024      	beq.n	ee60 <__d2b+0x78>
    ee16:	a802      	add	r0, sp, #8
    ee18:	f840 4d08 	str.w	r4, [r0, #-8]!
    ee1c:	4668      	mov	r0, sp
    ee1e:	f7ff fd55 	bl	e8cc <__lo0bits>
    ee22:	9b01      	ldr	r3, [sp, #4]
    ee24:	2800      	cmp	r0, #0
    ee26:	d131      	bne.n	ee8c <__d2b+0xa4>
    ee28:	9a00      	ldr	r2, [sp, #0]
    ee2a:	f8c8 2014 	str.w	r2, [r8, #20]
    ee2e:	2b00      	cmp	r3, #0
    ee30:	bf0c      	ite	eq
    ee32:	2401      	moveq	r4, #1
    ee34:	2402      	movne	r4, #2
    ee36:	f8c8 3018 	str.w	r3, [r8, #24]
    ee3a:	f8c8 4010 	str.w	r4, [r8, #16]
    ee3e:	b9e6      	cbnz	r6, ee7a <__d2b+0x92>
    ee40:	eb08 0384 	add.w	r3, r8, r4, lsl #2
    ee44:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
    ee48:	6038      	str	r0, [r7, #0]
    ee4a:	6918      	ldr	r0, [r3, #16]
    ee4c:	f7ff fd20 	bl	e890 <__hi0bits>
    ee50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ee52:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
    ee56:	6018      	str	r0, [r3, #0]
    ee58:	4640      	mov	r0, r8
    ee5a:	b003      	add	sp, #12
    ee5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    ee60:	a801      	add	r0, sp, #4
    ee62:	f7ff fd33 	bl	e8cc <__lo0bits>
    ee66:	2301      	movs	r3, #1
    ee68:	461c      	mov	r4, r3
    ee6a:	f8c8 3010 	str.w	r3, [r8, #16]
    ee6e:	9b01      	ldr	r3, [sp, #4]
    ee70:	f8c8 3014 	str.w	r3, [r8, #20]
    ee74:	3020      	adds	r0, #32
    ee76:	2e00      	cmp	r6, #0
    ee78:	d0e2      	beq.n	ee40 <__d2b+0x58>
    ee7a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    ee7c:	f2a6 4933 	subw	r9, r6, #1075	; 0x433
    ee80:	f1c0 0335 	rsb	r3, r0, #53	; 0x35
    ee84:	4448      	add	r0, r9
    ee86:	6038      	str	r0, [r7, #0]
    ee88:	6013      	str	r3, [r2, #0]
    ee8a:	e7e5      	b.n	ee58 <__d2b+0x70>
    ee8c:	f1c0 0120 	rsb	r1, r0, #32
    ee90:	9a00      	ldr	r2, [sp, #0]
    ee92:	fa03 f101 	lsl.w	r1, r3, r1
    ee96:	fa23 f300 	lsr.w	r3, r3, r0
    ee9a:	430a      	orrs	r2, r1
    ee9c:	9301      	str	r3, [sp, #4]
    ee9e:	f8c8 2014 	str.w	r2, [r8, #20]
    eea2:	e7c4      	b.n	ee2e <__d2b+0x46>

0000eea4 <__ratio>:
    eea4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    eea8:	b083      	sub	sp, #12
    eeaa:	4688      	mov	r8, r1
    eeac:	4669      	mov	r1, sp
    eeae:	4606      	mov	r6, r0
    eeb0:	f7ff ff42 	bl	ed38 <__b2d>
    eeb4:	460d      	mov	r5, r1
    eeb6:	4604      	mov	r4, r0
    eeb8:	a901      	add	r1, sp, #4
    eeba:	4640      	mov	r0, r8
    eebc:	f7ff ff3c 	bl	ed38 <__b2d>
    eec0:	462f      	mov	r7, r5
    eec2:	460b      	mov	r3, r1
    eec4:	4602      	mov	r2, r0
    eec6:	f8d8 1010 	ldr.w	r1, [r8, #16]
    eeca:	4699      	mov	r9, r3
    eecc:	6930      	ldr	r0, [r6, #16]
    eece:	4626      	mov	r6, r4
    eed0:	4690      	mov	r8, r2
    eed2:	ebc1 0e00 	rsb	lr, r1, r0
    eed6:	e89d 0003 	ldmia.w	sp, {r0, r1}
    eeda:	1a40      	subs	r0, r0, r1
    eedc:	eb00 114e 	add.w	r1, r0, lr, lsl #5
    eee0:	2900      	cmp	r1, #0
    eee2:	bfc9      	itett	gt
    eee4:	eb05 5701 	addgt.w	r7, r5, r1, lsl #20
    eee8:	eba3 5901 	suble.w	r9, r3, r1, lsl #20
    eeec:	4624      	movgt	r4, r4
    eeee:	463d      	movgt	r5, r7
    eef0:	bfdc      	itt	le
    eef2:	4612      	movle	r2, r2
    eef4:	464b      	movle	r3, r9
    eef6:	4620      	mov	r0, r4
    eef8:	4629      	mov	r1, r5
    eefa:	f001 f9d5 	bl	102a8 <__aeabi_ddiv>
    eefe:	b003      	add	sp, #12
    ef00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0000ef04 <_mprec_log10>:
    ef04:	2817      	cmp	r0, #23
    ef06:	b510      	push	{r4, lr}
    ef08:	4604      	mov	r4, r0
    ef0a:	dd0c      	ble.n	ef26 <_mprec_log10+0x22>
    ef0c:	2100      	movs	r1, #0
    ef0e:	2000      	movs	r0, #0
    ef10:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
    ef14:	2300      	movs	r3, #0
    ef16:	2200      	movs	r2, #0
    ef18:	f2c4 0324 	movt	r3, #16420	; 0x4024
    ef1c:	f001 f89a 	bl	10054 <__aeabi_dmul>
    ef20:	3c01      	subs	r4, #1
    ef22:	d1f7      	bne.n	ef14 <_mprec_log10+0x10>
    ef24:	bd10      	pop	{r4, pc}
    ef26:	4b03      	ldr	r3, [pc, #12]	; (ef34 <_mprec_log10+0x30>)
    ef28:	eb03 04c0 	add.w	r4, r3, r0, lsl #3
    ef2c:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
    ef30:	bd10      	pop	{r4, pc}
    ef32:	bf00      	nop
    ef34:	00010ee0 	.word	0x00010ee0

0000ef38 <__copybits>:
    ef38:	b470      	push	{r4, r5, r6}
    ef3a:	3901      	subs	r1, #1
    ef3c:	6915      	ldr	r5, [r2, #16]
    ef3e:	f102 0314 	add.w	r3, r2, #20
    ef42:	114e      	asrs	r6, r1, #5
    ef44:	3601      	adds	r6, #1
    ef46:	eb02 0585 	add.w	r5, r2, r5, lsl #2
    ef4a:	3514      	adds	r5, #20
    ef4c:	eb00 0686 	add.w	r6, r0, r6, lsl #2
    ef50:	42ab      	cmp	r3, r5
    ef52:	d20c      	bcs.n	ef6e <__copybits+0x36>
    ef54:	4601      	mov	r1, r0
    ef56:	f853 4b04 	ldr.w	r4, [r3], #4
    ef5a:	429d      	cmp	r5, r3
    ef5c:	f841 4b04 	str.w	r4, [r1], #4
    ef60:	d8f9      	bhi.n	ef56 <__copybits+0x1e>
    ef62:	1aab      	subs	r3, r5, r2
    ef64:	3b15      	subs	r3, #21
    ef66:	f023 0303 	bic.w	r3, r3, #3
    ef6a:	3304      	adds	r3, #4
    ef6c:	18c0      	adds	r0, r0, r3
    ef6e:	4286      	cmp	r6, r0
    ef70:	d904      	bls.n	ef7c <__copybits+0x44>
    ef72:	2300      	movs	r3, #0
    ef74:	f840 3b04 	str.w	r3, [r0], #4
    ef78:	4286      	cmp	r6, r0
    ef7a:	d8fb      	bhi.n	ef74 <__copybits+0x3c>
    ef7c:	bc70      	pop	{r4, r5, r6}
    ef7e:	4770      	bx	lr

0000ef80 <__any_on>:
    ef80:	b430      	push	{r4, r5}
    ef82:	114b      	asrs	r3, r1, #5
    ef84:	6904      	ldr	r4, [r0, #16]
    ef86:	f100 0214 	add.w	r2, r0, #20
    ef8a:	429c      	cmp	r4, r3
    ef8c:	bfb8      	it	lt
    ef8e:	4623      	movlt	r3, r4
    ef90:	db00      	blt.n	ef94 <__any_on+0x14>
    ef92:	dc11      	bgt.n	efb8 <__any_on+0x38>
    ef94:	3304      	adds	r3, #4
    ef96:	eb00 0083 	add.w	r0, r0, r3, lsl #2
    ef9a:	1d03      	adds	r3, r0, #4
    ef9c:	429a      	cmp	r2, r3
    ef9e:	d218      	bcs.n	efd2 <__any_on+0x52>
    efa0:	f853 3c04 	ldr.w	r3, [r3, #-4]
    efa4:	b92b      	cbnz	r3, efb2 <__any_on+0x32>
    efa6:	4282      	cmp	r2, r0
    efa8:	d213      	bcs.n	efd2 <__any_on+0x52>
    efaa:	f850 3d04 	ldr.w	r3, [r0, #-4]!
    efae:	2b00      	cmp	r3, #0
    efb0:	d0f9      	beq.n	efa6 <__any_on+0x26>
    efb2:	2001      	movs	r0, #1
    efb4:	bc30      	pop	{r4, r5}
    efb6:	4770      	bx	lr
    efb8:	f011 011f 	ands.w	r1, r1, #31
    efbc:	d0ea      	beq.n	ef94 <__any_on+0x14>
    efbe:	eb00 0483 	add.w	r4, r0, r3, lsl #2
    efc2:	6964      	ldr	r4, [r4, #20]
    efc4:	fa24 f501 	lsr.w	r5, r4, r1
    efc8:	fa05 f101 	lsl.w	r1, r5, r1
    efcc:	42a1      	cmp	r1, r4
    efce:	d1f0      	bne.n	efb2 <__any_on+0x32>
    efd0:	e7e0      	b.n	ef94 <__any_on+0x14>
    efd2:	2000      	movs	r0, #0
    efd4:	e7ee      	b.n	efb4 <__any_on+0x34>
    efd6:	bf00      	nop

0000efd8 <__fpclassifyd>:
    efd8:	ea50 0201 	orrs.w	r2, r0, r1
    efdc:	d101      	bne.n	efe2 <__fpclassifyd+0xa>
    efde:	2002      	movs	r0, #2
    efe0:	4770      	bx	lr
    efe2:	f1d0 0201 	rsbs	r2, r0, #1
    efe6:	bf38      	it	cc
    efe8:	2200      	movcc	r2, #0
    efea:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
    efee:	bf08      	it	eq
    eff0:	2800      	cmpeq	r0, #0
    eff2:	d0f4      	beq.n	efde <__fpclassifyd+0x6>
    eff4:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
    eff8:	f64f 71ff 	movw	r1, #65535	; 0xffff
    effc:	f5a3 1080 	sub.w	r0, r3, #1048576	; 0x100000
    f000:	f6c7 71df 	movt	r1, #32735	; 0x7fdf
    f004:	4288      	cmp	r0, r1
    f006:	d801      	bhi.n	f00c <__fpclassifyd+0x34>
    f008:	2004      	movs	r0, #4
    f00a:	4770      	bx	lr
    f00c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
    f010:	d201      	bcs.n	f016 <__fpclassifyd+0x3e>
    f012:	2003      	movs	r0, #3
    f014:	4770      	bx	lr
    f016:	2000      	movs	r0, #0
    f018:	f6c7 70f0 	movt	r0, #32752	; 0x7ff0
    f01c:	4283      	cmp	r3, r0
    f01e:	bf14      	ite	ne
    f020:	2000      	movne	r0, #0
    f022:	f002 0001 	andeq.w	r0, r2, #1
    f026:	4770      	bx	lr

0000f028 <nanf>:
    f028:	2000      	movs	r0, #0
    f02a:	f6c7 70c0 	movt	r0, #32704	; 0x7fc0
    f02e:	4770      	bx	lr

0000f030 <strcmp>:
    f030:	ea80 0201 	eor.w	r2, r0, r1
    f034:	f012 0f03 	tst.w	r2, #3
    f038:	f040 803a 	bne.w	f0b0 <strcmp_unaligned>
    f03c:	f010 0203 	ands.w	r2, r0, #3
    f040:	f020 0003 	bic.w	r0, r0, #3
    f044:	f021 0103 	bic.w	r1, r1, #3
    f048:	f850 cb04 	ldr.w	ip, [r0], #4
    f04c:	bf08      	it	eq
    f04e:	f851 3b04 	ldreq.w	r3, [r1], #4
    f052:	d00d      	beq.n	f070 <strcmp+0x40>
    f054:	f082 0203 	eor.w	r2, r2, #3
    f058:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    f05c:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
    f060:	fa23 f202 	lsr.w	r2, r3, r2
    f064:	f851 3b04 	ldr.w	r3, [r1], #4
    f068:	ea4c 0c02 	orr.w	ip, ip, r2
    f06c:	ea43 0302 	orr.w	r3, r3, r2
    f070:	f1ac 3201 	sub.w	r2, ip, #16843009	; 0x1010101
    f074:	459c      	cmp	ip, r3
    f076:	bf01      	itttt	eq
    f078:	ea22 020c 	biceq.w	r2, r2, ip
    f07c:	f012 3f80 	tsteq.w	r2, #2155905152	; 0x80808080
    f080:	f850 cb04 	ldreq.w	ip, [r0], #4
    f084:	f851 3b04 	ldreq.w	r3, [r1], #4
    f088:	d0f2      	beq.n	f070 <strcmp+0x40>
    f08a:	ea4f 600c 	mov.w	r0, ip, lsl #24
    f08e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
    f092:	2801      	cmp	r0, #1
    f094:	bf28      	it	cs
    f096:	ebb0 6f03 	cmpcs.w	r0, r3, lsl #24
    f09a:	bf08      	it	eq
    f09c:	0a1b      	lsreq	r3, r3, #8
    f09e:	d0f4      	beq.n	f08a <strcmp+0x5a>
    f0a0:	f003 03ff 	and.w	r3, r3, #255	; 0xff
    f0a4:	ea4f 6010 	mov.w	r0, r0, lsr #24
    f0a8:	eba0 0003 	sub.w	r0, r0, r3
    f0ac:	4770      	bx	lr
    f0ae:	bf00      	nop

0000f0b0 <strcmp_unaligned>:
    f0b0:	f010 0f03 	tst.w	r0, #3
    f0b4:	d00a      	beq.n	f0cc <strcmp_unaligned+0x1c>
    f0b6:	f810 2b01 	ldrb.w	r2, [r0], #1
    f0ba:	f811 3b01 	ldrb.w	r3, [r1], #1
    f0be:	2a01      	cmp	r2, #1
    f0c0:	bf28      	it	cs
    f0c2:	429a      	cmpcs	r2, r3
    f0c4:	d0f4      	beq.n	f0b0 <strcmp_unaligned>
    f0c6:	eba2 0003 	sub.w	r0, r2, r3
    f0ca:	4770      	bx	lr
    f0cc:	f84d 5d04 	str.w	r5, [sp, #-4]!
    f0d0:	f84d 4d04 	str.w	r4, [sp, #-4]!
    f0d4:	f04f 0201 	mov.w	r2, #1
    f0d8:	ea42 2202 	orr.w	r2, r2, r2, lsl #8
    f0dc:	ea42 4202 	orr.w	r2, r2, r2, lsl #16
    f0e0:	f001 0c03 	and.w	ip, r1, #3
    f0e4:	f021 0103 	bic.w	r1, r1, #3
    f0e8:	f850 4b04 	ldr.w	r4, [r0], #4
    f0ec:	f851 5b04 	ldr.w	r5, [r1], #4
    f0f0:	f1bc 0f02 	cmp.w	ip, #2
    f0f4:	d026      	beq.n	f144 <strcmp_unaligned+0x94>
    f0f6:	d84b      	bhi.n	f190 <strcmp_unaligned+0xe0>
    f0f8:	f024 4c7f 	bic.w	ip, r4, #4278190080	; 0xff000000
    f0fc:	ebbc 2f15 	cmp.w	ip, r5, lsr #8
    f100:	eba4 0302 	sub.w	r3, r4, r2
    f104:	ea23 0304 	bic.w	r3, r3, r4
    f108:	d10d      	bne.n	f126 <strcmp_unaligned+0x76>
    f10a:	ea13 13c2 	ands.w	r3, r3, r2, lsl #7
    f10e:	bf08      	it	eq
    f110:	f851 5b04 	ldreq.w	r5, [r1], #4
    f114:	d10a      	bne.n	f12c <strcmp_unaligned+0x7c>
    f116:	ea8c 0c04 	eor.w	ip, ip, r4
    f11a:	ebbc 6f05 	cmp.w	ip, r5, lsl #24
    f11e:	d10c      	bne.n	f13a <strcmp_unaligned+0x8a>
    f120:	f850 4b04 	ldr.w	r4, [r0], #4
    f124:	e7e8      	b.n	f0f8 <strcmp_unaligned+0x48>
    f126:	ea4f 2515 	mov.w	r5, r5, lsr #8
    f12a:	e05c      	b.n	f1e6 <strcmp_unaligned+0x136>
    f12c:	f033 437f 	bics.w	r3, r3, #4278190080	; 0xff000000
    f130:	d152      	bne.n	f1d8 <strcmp_unaligned+0x128>
    f132:	780d      	ldrb	r5, [r1, #0]
    f134:	ea4f 6c14 	mov.w	ip, r4, lsr #24
    f138:	e055      	b.n	f1e6 <strcmp_unaligned+0x136>
    f13a:	ea4f 6c14 	mov.w	ip, r4, lsr #24
    f13e:	f005 05ff 	and.w	r5, r5, #255	; 0xff
    f142:	e050      	b.n	f1e6 <strcmp_unaligned+0x136>
    f144:	ea4f 4c04 	mov.w	ip, r4, lsl #16
    f148:	eba4 0302 	sub.w	r3, r4, r2
    f14c:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
    f150:	ea23 0304 	bic.w	r3, r3, r4
    f154:	ebbc 4f15 	cmp.w	ip, r5, lsr #16
    f158:	d117      	bne.n	f18a <strcmp_unaligned+0xda>
    f15a:	ea13 13c2 	ands.w	r3, r3, r2, lsl #7
    f15e:	bf08      	it	eq
    f160:	f851 5b04 	ldreq.w	r5, [r1], #4
    f164:	d107      	bne.n	f176 <strcmp_unaligned+0xc6>
    f166:	ea8c 0c04 	eor.w	ip, ip, r4
    f16a:	ebbc 4f05 	cmp.w	ip, r5, lsl #16
    f16e:	d108      	bne.n	f182 <strcmp_unaligned+0xd2>
    f170:	f850 4b04 	ldr.w	r4, [r0], #4
    f174:	e7e6      	b.n	f144 <strcmp_unaligned+0x94>
    f176:	041b      	lsls	r3, r3, #16
    f178:	d12e      	bne.n	f1d8 <strcmp_unaligned+0x128>
    f17a:	880d      	ldrh	r5, [r1, #0]
    f17c:	ea4f 4c14 	mov.w	ip, r4, lsr #16
    f180:	e031      	b.n	f1e6 <strcmp_unaligned+0x136>
    f182:	ea4f 4505 	mov.w	r5, r5, lsl #16
    f186:	ea4f 4c14 	mov.w	ip, r4, lsr #16
    f18a:	ea4f 4515 	mov.w	r5, r5, lsr #16
    f18e:	e02a      	b.n	f1e6 <strcmp_unaligned+0x136>
    f190:	f004 0cff 	and.w	ip, r4, #255	; 0xff
    f194:	ebbc 6f15 	cmp.w	ip, r5, lsr #24
    f198:	eba4 0302 	sub.w	r3, r4, r2
    f19c:	ea23 0304 	bic.w	r3, r3, r4
    f1a0:	d10d      	bne.n	f1be <strcmp_unaligned+0x10e>
    f1a2:	ea13 13c2 	ands.w	r3, r3, r2, lsl #7
    f1a6:	bf08      	it	eq
    f1a8:	f851 5b04 	ldreq.w	r5, [r1], #4
    f1ac:	d10a      	bne.n	f1c4 <strcmp_unaligned+0x114>
    f1ae:	ea8c 0c04 	eor.w	ip, ip, r4
    f1b2:	ebbc 2f05 	cmp.w	ip, r5, lsl #8
    f1b6:	d10a      	bne.n	f1ce <strcmp_unaligned+0x11e>
    f1b8:	f850 4b04 	ldr.w	r4, [r0], #4
    f1bc:	e7e8      	b.n	f190 <strcmp_unaligned+0xe0>
    f1be:	ea4f 6515 	mov.w	r5, r5, lsr #24
    f1c2:	e010      	b.n	f1e6 <strcmp_unaligned+0x136>
    f1c4:	f014 0fff 	tst.w	r4, #255	; 0xff
    f1c8:	d006      	beq.n	f1d8 <strcmp_unaligned+0x128>
    f1ca:	f851 5b04 	ldr.w	r5, [r1], #4
    f1ce:	ea4f 2c14 	mov.w	ip, r4, lsr #8
    f1d2:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
    f1d6:	e006      	b.n	f1e6 <strcmp_unaligned+0x136>
    f1d8:	f04f 0000 	mov.w	r0, #0
    f1dc:	f85d 4b04 	ldr.w	r4, [sp], #4
    f1e0:	f85d 5b04 	ldr.w	r5, [sp], #4
    f1e4:	4770      	bx	lr
    f1e6:	f00c 02ff 	and.w	r2, ip, #255	; 0xff
    f1ea:	f005 00ff 	and.w	r0, r5, #255	; 0xff
    f1ee:	2801      	cmp	r0, #1
    f1f0:	bf28      	it	cs
    f1f2:	4290      	cmpcs	r0, r2
    f1f4:	bf04      	itt	eq
    f1f6:	ea4f 2c1c 	moveq.w	ip, ip, lsr #8
    f1fa:	0a2d      	lsreq	r5, r5, #8
    f1fc:	d0f3      	beq.n	f1e6 <strcmp_unaligned+0x136>
    f1fe:	eba2 0000 	sub.w	r0, r2, r0
    f202:	f85d 4b04 	ldr.w	r4, [sp], #4
    f206:	f85d 5b04 	ldr.w	r5, [sp], #4
    f20a:	4770      	bx	lr

0000f20c <strlen>:
    f20c:	f020 0103 	bic.w	r1, r0, #3
    f210:	f010 0003 	ands.w	r0, r0, #3
    f214:	f1c0 0000 	rsb	r0, r0, #0
    f218:	f851 3b04 	ldr.w	r3, [r1], #4
    f21c:	f100 0c04 	add.w	ip, r0, #4
    f220:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
    f224:	f06f 0200 	mvn.w	r2, #0
    f228:	bf1c      	itt	ne
    f22a:	fa22 f20c 	lsrne.w	r2, r2, ip
    f22e:	4313      	orrne	r3, r2
    f230:	f04f 0c01 	mov.w	ip, #1
    f234:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
    f238:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
    f23c:	eba3 020c 	sub.w	r2, r3, ip
    f240:	ea22 0203 	bic.w	r2, r2, r3
    f244:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
    f248:	bf04      	itt	eq
    f24a:	f851 3b04 	ldreq.w	r3, [r1], #4
    f24e:	3004      	addeq	r0, #4
    f250:	d0f4      	beq.n	f23c <strlen+0x30>
    f252:	f013 0fff 	tst.w	r3, #255	; 0xff
    f256:	bf1f      	itttt	ne
    f258:	3001      	addne	r0, #1
    f25a:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
    f25e:	3001      	addne	r0, #1
    f260:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
    f264:	bf18      	it	ne
    f266:	3001      	addne	r0, #1
    f268:	4770      	bx	lr
    f26a:	bf00      	nop

0000f26c <_calloc_r>:
    f26c:	b510      	push	{r4, lr}
    f26e:	fb01 f102 	mul.w	r1, r1, r2
    f272:	f000 f82b 	bl	f2cc <_malloc_r>
    f276:	4604      	mov	r4, r0
    f278:	b170      	cbz	r0, f298 <_calloc_r+0x2c>
    f27a:	f850 2c04 	ldr.w	r2, [r0, #-4]
    f27e:	f022 0203 	bic.w	r2, r2, #3
    f282:	3a04      	subs	r2, #4
    f284:	2a24      	cmp	r2, #36	; 0x24
    f286:	d81c      	bhi.n	f2c2 <_calloc_r+0x56>
    f288:	2a13      	cmp	r2, #19
    f28a:	bf98      	it	ls
    f28c:	4603      	movls	r3, r0
    f28e:	d805      	bhi.n	f29c <_calloc_r+0x30>
    f290:	2200      	movs	r2, #0
    f292:	601a      	str	r2, [r3, #0]
    f294:	605a      	str	r2, [r3, #4]
    f296:	609a      	str	r2, [r3, #8]
    f298:	4620      	mov	r0, r4
    f29a:	bd10      	pop	{r4, pc}
    f29c:	2100      	movs	r1, #0
    f29e:	2a1b      	cmp	r2, #27
    f2a0:	6001      	str	r1, [r0, #0]
    f2a2:	bf98      	it	ls
    f2a4:	f100 0308 	addls.w	r3, r0, #8
    f2a8:	6041      	str	r1, [r0, #4]
    f2aa:	d9f1      	bls.n	f290 <_calloc_r+0x24>
    f2ac:	2a24      	cmp	r2, #36	; 0x24
    f2ae:	6081      	str	r1, [r0, #8]
    f2b0:	60c1      	str	r1, [r0, #12]
    f2b2:	bf11      	iteee	ne
    f2b4:	f100 0310 	addne.w	r3, r0, #16
    f2b8:	6101      	streq	r1, [r0, #16]
    f2ba:	f100 0318 	addeq.w	r3, r0, #24
    f2be:	6141      	streq	r1, [r0, #20]
    f2c0:	e7e6      	b.n	f290 <_calloc_r+0x24>
    f2c2:	2100      	movs	r1, #0
    f2c4:	f7fd fca2 	bl	cc0c <memset>
    f2c8:	4620      	mov	r0, r4
    f2ca:	bd10      	pop	{r4, pc}

0000f2cc <_malloc_r>:
    f2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f2d0:	f101 040b 	add.w	r4, r1, #11
    f2d4:	2c16      	cmp	r4, #22
    f2d6:	b083      	sub	sp, #12
    f2d8:	4606      	mov	r6, r0
    f2da:	d92d      	bls.n	f338 <_malloc_r+0x6c>
    f2dc:	f024 0407 	bic.w	r4, r4, #7
    f2e0:	0fe3      	lsrs	r3, r4, #31
    f2e2:	428c      	cmp	r4, r1
    f2e4:	bf2c      	ite	cs
    f2e6:	4619      	movcs	r1, r3
    f2e8:	f043 0101 	orrcc.w	r1, r3, #1
    f2ec:	2900      	cmp	r1, #0
    f2ee:	d12c      	bne.n	f34a <_malloc_r+0x7e>
    f2f0:	4630      	mov	r0, r6
    f2f2:	f000 faa3 	bl	f83c <__malloc_lock>
    f2f6:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
    f2fa:	d22b      	bcs.n	f354 <_malloc_r+0x88>
    f2fc:	ea4f 0cd4 	mov.w	ip, r4, lsr #3
    f300:	4fb9      	ldr	r7, [pc, #740]	; (f5e8 <_malloc_r+0x31c>)
    f302:	eb07 02cc 	add.w	r2, r7, ip, lsl #3
    f306:	68d3      	ldr	r3, [r2, #12]
    f308:	4293      	cmp	r3, r2
    f30a:	f000 8200 	beq.w	f70e <_malloc_r+0x442>
    f30e:	6859      	ldr	r1, [r3, #4]
    f310:	f103 0808 	add.w	r8, r3, #8
    f314:	68da      	ldr	r2, [r3, #12]
    f316:	4630      	mov	r0, r6
    f318:	f021 0403 	bic.w	r4, r1, #3
    f31c:	6899      	ldr	r1, [r3, #8]
    f31e:	191b      	adds	r3, r3, r4
    f320:	685c      	ldr	r4, [r3, #4]
    f322:	60ca      	str	r2, [r1, #12]
    f324:	f044 0401 	orr.w	r4, r4, #1
    f328:	6091      	str	r1, [r2, #8]
    f32a:	605c      	str	r4, [r3, #4]
    f32c:	f000 fa88 	bl	f840 <__malloc_unlock>
    f330:	4640      	mov	r0, r8
    f332:	b003      	add	sp, #12
    f334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f338:	2300      	movs	r3, #0
    f33a:	2410      	movs	r4, #16
    f33c:	428c      	cmp	r4, r1
    f33e:	bf2c      	ite	cs
    f340:	4619      	movcs	r1, r3
    f342:	f043 0101 	orrcc.w	r1, r3, #1
    f346:	2900      	cmp	r1, #0
    f348:	d0d2      	beq.n	f2f0 <_malloc_r+0x24>
    f34a:	230c      	movs	r3, #12
    f34c:	f04f 0800 	mov.w	r8, #0
    f350:	6033      	str	r3, [r6, #0]
    f352:	e7ed      	b.n	f330 <_malloc_r+0x64>
    f354:	ea5f 2c54 	movs.w	ip, r4, lsr #9
    f358:	bf04      	itt	eq
    f35a:	ea4f 0cd4 	moveq.w	ip, r4, lsr #3
    f35e:	ea4f 054c 	moveq.w	r5, ip, lsl #1
    f362:	f040 8089 	bne.w	f478 <_malloc_r+0x1ac>
    f366:	4fa0      	ldr	r7, [pc, #640]	; (f5e8 <_malloc_r+0x31c>)
    f368:	eb07 0585 	add.w	r5, r7, r5, lsl #2
    f36c:	68eb      	ldr	r3, [r5, #12]
    f36e:	429d      	cmp	r5, r3
    f370:	d106      	bne.n	f380 <_malloc_r+0xb4>
    f372:	e00d      	b.n	f390 <_malloc_r+0xc4>
    f374:	2a00      	cmp	r2, #0
    f376:	f280 8149 	bge.w	f60c <_malloc_r+0x340>
    f37a:	68db      	ldr	r3, [r3, #12]
    f37c:	429d      	cmp	r5, r3
    f37e:	d007      	beq.n	f390 <_malloc_r+0xc4>
    f380:	6859      	ldr	r1, [r3, #4]
    f382:	f021 0103 	bic.w	r1, r1, #3
    f386:	1b0a      	subs	r2, r1, r4
    f388:	2a0f      	cmp	r2, #15
    f38a:	ddf3      	ble.n	f374 <_malloc_r+0xa8>
    f38c:	f10c 3cff 	add.w	ip, ip, #4294967295
    f390:	f10c 0c01 	add.w	ip, ip, #1
    f394:	4a94      	ldr	r2, [pc, #592]	; (f5e8 <_malloc_r+0x31c>)
    f396:	693b      	ldr	r3, [r7, #16]
    f398:	f102 0e08 	add.w	lr, r2, #8
    f39c:	4573      	cmp	r3, lr
    f39e:	bf08      	it	eq
    f3a0:	f8d2 9004 	ldreq.w	r9, [r2, #4]
    f3a4:	d022      	beq.n	f3ec <_malloc_r+0x120>
    f3a6:	6858      	ldr	r0, [r3, #4]
    f3a8:	f020 0003 	bic.w	r0, r0, #3
    f3ac:	1b01      	subs	r1, r0, r4
    f3ae:	290f      	cmp	r1, #15
    f3b0:	f300 8179 	bgt.w	f6a6 <_malloc_r+0x3da>
    f3b4:	2900      	cmp	r1, #0
    f3b6:	f8c2 e014 	str.w	lr, [r2, #20]
    f3ba:	f8c2 e010 	str.w	lr, [r2, #16]
    f3be:	da66      	bge.n	f48e <_malloc_r+0x1c2>
    f3c0:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
    f3c4:	f080 8145 	bcs.w	f652 <_malloc_r+0x386>
    f3c8:	08c1      	lsrs	r1, r0, #3
    f3ca:	f04f 0801 	mov.w	r8, #1
    f3ce:	eb02 00c1 	add.w	r0, r2, r1, lsl #3
    f3d2:	1089      	asrs	r1, r1, #2
    f3d4:	fa08 f801 	lsl.w	r8, r8, r1
    f3d8:	6851      	ldr	r1, [r2, #4]
    f3da:	6885      	ldr	r5, [r0, #8]
    f3dc:	60d8      	str	r0, [r3, #12]
    f3de:	ea48 0901 	orr.w	r9, r8, r1
    f3e2:	f8c2 9004 	str.w	r9, [r2, #4]
    f3e6:	609d      	str	r5, [r3, #8]
    f3e8:	60eb      	str	r3, [r5, #12]
    f3ea:	6083      	str	r3, [r0, #8]
    f3ec:	2201      	movs	r2, #1
    f3ee:	ea4f 03ac 	mov.w	r3, ip, asr #2
    f3f2:	fa02 f303 	lsl.w	r3, r2, r3
    f3f6:	454b      	cmp	r3, r9
    f3f8:	d854      	bhi.n	f4a4 <_malloc_r+0x1d8>
    f3fa:	ea19 0f03 	tst.w	r9, r3
    f3fe:	d10d      	bne.n	f41c <_malloc_r+0x150>
    f400:	4093      	lsls	r3, r2
    f402:	f02c 0c03 	bic.w	ip, ip, #3
    f406:	ea19 0f03 	tst.w	r9, r3
    f40a:	f10c 0c04 	add.w	ip, ip, #4
    f40e:	d105      	bne.n	f41c <_malloc_r+0x150>
    f410:	005b      	lsls	r3, r3, #1
    f412:	f10c 0c04 	add.w	ip, ip, #4
    f416:	ea19 0f03 	tst.w	r9, r3
    f41a:	d0f9      	beq.n	f410 <_malloc_r+0x144>
    f41c:	eb07 09cc 	add.w	r9, r7, ip, lsl #3
    f420:	46e0      	mov	r8, ip
    f422:	4648      	mov	r0, r9
    f424:	68c2      	ldr	r2, [r0, #12]
    f426:	4290      	cmp	r0, r2
    f428:	d107      	bne.n	f43a <_malloc_r+0x16e>
    f42a:	e150      	b.n	f6ce <_malloc_r+0x402>
    f42c:	2900      	cmp	r1, #0
    f42e:	f280 8178 	bge.w	f722 <_malloc_r+0x456>
    f432:	68d2      	ldr	r2, [r2, #12]
    f434:	4290      	cmp	r0, r2
    f436:	f000 814a 	beq.w	f6ce <_malloc_r+0x402>
    f43a:	6855      	ldr	r5, [r2, #4]
    f43c:	f025 0503 	bic.w	r5, r5, #3
    f440:	1b29      	subs	r1, r5, r4
    f442:	290f      	cmp	r1, #15
    f444:	ddf2      	ble.n	f42c <_malloc_r+0x160>
    f446:	4690      	mov	r8, r2
    f448:	1913      	adds	r3, r2, r4
    f44a:	68d5      	ldr	r5, [r2, #12]
    f44c:	f044 0001 	orr.w	r0, r4, #1
    f450:	f858 4f08 	ldr.w	r4, [r8, #8]!
    f454:	f041 0c01 	orr.w	ip, r1, #1
    f458:	6050      	str	r0, [r2, #4]
    f45a:	4630      	mov	r0, r6
    f45c:	f8c3 c004 	str.w	ip, [r3, #4]
    f460:	60e5      	str	r5, [r4, #12]
    f462:	60ac      	str	r4, [r5, #8]
    f464:	617b      	str	r3, [r7, #20]
    f466:	613b      	str	r3, [r7, #16]
    f468:	f8c3 e00c 	str.w	lr, [r3, #12]
    f46c:	f8c3 e008 	str.w	lr, [r3, #8]
    f470:	5059      	str	r1, [r3, r1]
    f472:	f000 f9e5 	bl	f840 <__malloc_unlock>
    f476:	e75b      	b.n	f330 <_malloc_r+0x64>
    f478:	f1bc 0f04 	cmp.w	ip, #4
    f47c:	f200 80d5 	bhi.w	f62a <_malloc_r+0x35e>
    f480:	ea4f 1c94 	mov.w	ip, r4, lsr #6
    f484:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
    f488:	ea4f 054c 	mov.w	r5, ip, lsl #1
    f48c:	e76b      	b.n	f366 <_malloc_r+0x9a>
    f48e:	181a      	adds	r2, r3, r0
    f490:	f103 0808 	add.w	r8, r3, #8
    f494:	4630      	mov	r0, r6
    f496:	6853      	ldr	r3, [r2, #4]
    f498:	f043 0301 	orr.w	r3, r3, #1
    f49c:	6053      	str	r3, [r2, #4]
    f49e:	f000 f9cf 	bl	f840 <__malloc_unlock>
    f4a2:	e745      	b.n	f330 <_malloc_r+0x64>
    f4a4:	68bd      	ldr	r5, [r7, #8]
    f4a6:	686b      	ldr	r3, [r5, #4]
    f4a8:	f023 0903 	bic.w	r9, r3, #3
    f4ac:	454c      	cmp	r4, r9
    f4ae:	d804      	bhi.n	f4ba <_malloc_r+0x1ee>
    f4b0:	ebc4 0309 	rsb	r3, r4, r9
    f4b4:	2b0f      	cmp	r3, #15
    f4b6:	f300 809b 	bgt.w	f5f0 <_malloc_r+0x324>
    f4ba:	f8df a130 	ldr.w	sl, [pc, #304]	; f5ec <_malloc_r+0x320>
    f4be:	eb05 0209 	add.w	r2, r5, r9
    f4c2:	f8d7 1408 	ldr.w	r1, [r7, #1032]	; 0x408
    f4c6:	f8da 3000 	ldr.w	r3, [sl]
    f4ca:	3101      	adds	r1, #1
    f4cc:	4423      	add	r3, r4
    f4ce:	bf08      	it	eq
    f4d0:	f103 0b10 	addeq.w	fp, r3, #16
    f4d4:	d006      	beq.n	f4e4 <_malloc_r+0x218>
    f4d6:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    f4da:	330f      	adds	r3, #15
    f4dc:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
    f4e0:	f023 0b0f 	bic.w	fp, r3, #15
    f4e4:	4630      	mov	r0, r6
    f4e6:	4659      	mov	r1, fp
    f4e8:	9201      	str	r2, [sp, #4]
    f4ea:	f7f3 f97f 	bl	27ec <_sbrk_r>
    f4ee:	9a01      	ldr	r2, [sp, #4]
    f4f0:	f1b0 3fff 	cmp.w	r0, #4294967295
    f4f4:	4680      	mov	r8, r0
    f4f6:	f000 815b 	beq.w	f7b0 <_malloc_r+0x4e4>
    f4fa:	4282      	cmp	r2, r0
    f4fc:	f200 8127 	bhi.w	f74e <_malloc_r+0x482>
    f500:	f8da 3004 	ldr.w	r3, [sl, #4]
    f504:	4542      	cmp	r2, r8
    f506:	445b      	add	r3, fp
    f508:	f8ca 3004 	str.w	r3, [sl, #4]
    f50c:	f000 8159 	beq.w	f7c2 <_malloc_r+0x4f6>
    f510:	f8d7 1408 	ldr.w	r1, [r7, #1032]	; 0x408
    f514:	4630      	mov	r0, r6
    f516:	3101      	adds	r1, #1
    f518:	bf17      	itett	ne
    f51a:	ebc2 0208 	rsbne	r2, r2, r8
    f51e:	4b32      	ldreq	r3, [pc, #200]	; (f5e8 <_malloc_r+0x31c>)
    f520:	189b      	addne	r3, r3, r2
    f522:	f8ca 3004 	strne.w	r3, [sl, #4]
    f526:	bf08      	it	eq
    f528:	f8c3 8408 	streq.w	r8, [r3, #1032]	; 0x408
    f52c:	f018 0307 	ands.w	r3, r8, #7
    f530:	bf1f      	itttt	ne
    f532:	f1c3 0208 	rsbne	r2, r3, #8
    f536:	f5c3 5380 	rsbne	r3, r3, #4096	; 0x1000
    f53a:	4490      	addne	r8, r2
    f53c:	f103 0208 	addne.w	r2, r3, #8
    f540:	eb08 030b 	add.w	r3, r8, fp
    f544:	bf08      	it	eq
    f546:	f44f 5280 	moveq.w	r2, #4096	; 0x1000
    f54a:	051b      	lsls	r3, r3, #20
    f54c:	0d1b      	lsrs	r3, r3, #20
    f54e:	ebc3 0b02 	rsb	fp, r3, r2
    f552:	4659      	mov	r1, fp
    f554:	f7f3 f94a 	bl	27ec <_sbrk_r>
    f558:	1c43      	adds	r3, r0, #1
    f55a:	f000 813e 	beq.w	f7da <_malloc_r+0x50e>
    f55e:	ebc8 0200 	rsb	r2, r8, r0
    f562:	445a      	add	r2, fp
    f564:	f042 0201 	orr.w	r2, r2, #1
    f568:	f8da 3004 	ldr.w	r3, [sl, #4]
    f56c:	42bd      	cmp	r5, r7
    f56e:	f8c7 8008 	str.w	r8, [r7, #8]
    f572:	445b      	add	r3, fp
    f574:	f8c8 2004 	str.w	r2, [r8, #4]
    f578:	f8ca 3004 	str.w	r3, [sl, #4]
    f57c:	d017      	beq.n	f5ae <_malloc_r+0x2e2>
    f57e:	f1b9 0f0f 	cmp.w	r9, #15
    f582:	f240 8104 	bls.w	f78e <_malloc_r+0x4c2>
    f586:	f1a9 020c 	sub.w	r2, r9, #12
    f58a:	6869      	ldr	r1, [r5, #4]
    f58c:	f022 0207 	bic.w	r2, r2, #7
    f590:	f04f 0e05 	mov.w	lr, #5
    f594:	18a8      	adds	r0, r5, r2
    f596:	2a0f      	cmp	r2, #15
    f598:	f001 0101 	and.w	r1, r1, #1
    f59c:	ea42 0101 	orr.w	r1, r2, r1
    f5a0:	6069      	str	r1, [r5, #4]
    f5a2:	f8c0 e004 	str.w	lr, [r0, #4]
    f5a6:	f8c0 e008 	str.w	lr, [r0, #8]
    f5aa:	f200 811a 	bhi.w	f7e2 <_malloc_r+0x516>
    f5ae:	f8da 202c 	ldr.w	r2, [sl, #44]	; 0x2c
    f5b2:	68bd      	ldr	r5, [r7, #8]
    f5b4:	4293      	cmp	r3, r2
    f5b6:	bf84      	itt	hi
    f5b8:	4a0c      	ldrhi	r2, [pc, #48]	; (f5ec <_malloc_r+0x320>)
    f5ba:	62d3      	strhi	r3, [r2, #44]	; 0x2c
    f5bc:	f8da 2030 	ldr.w	r2, [sl, #48]	; 0x30
    f5c0:	4293      	cmp	r3, r2
    f5c2:	bf84      	itt	hi
    f5c4:	4a09      	ldrhi	r2, [pc, #36]	; (f5ec <_malloc_r+0x320>)
    f5c6:	6313      	strhi	r3, [r2, #48]	; 0x30
    f5c8:	686a      	ldr	r2, [r5, #4]
    f5ca:	f022 0203 	bic.w	r2, r2, #3
    f5ce:	4294      	cmp	r4, r2
    f5d0:	ebc4 0302 	rsb	r3, r4, r2
    f5d4:	d801      	bhi.n	f5da <_malloc_r+0x30e>
    f5d6:	2b0f      	cmp	r3, #15
    f5d8:	dc0a      	bgt.n	f5f0 <_malloc_r+0x324>
    f5da:	4630      	mov	r0, r6
    f5dc:	f04f 0800 	mov.w	r8, #0
    f5e0:	f000 f92e 	bl	f840 <__malloc_unlock>
    f5e4:	e6a4      	b.n	f330 <_malloc_r+0x64>
    f5e6:	bf00      	nop
    f5e8:	100004fc 	.word	0x100004fc
    f5ec:	10000c38 	.word	0x10000c38
    f5f0:	192a      	adds	r2, r5, r4
    f5f2:	f043 0301 	orr.w	r3, r3, #1
    f5f6:	f044 0401 	orr.w	r4, r4, #1
    f5fa:	4630      	mov	r0, r6
    f5fc:	606c      	str	r4, [r5, #4]
    f5fe:	f105 0808 	add.w	r8, r5, #8
    f602:	6053      	str	r3, [r2, #4]
    f604:	60ba      	str	r2, [r7, #8]
    f606:	f000 f91b 	bl	f840 <__malloc_unlock>
    f60a:	e691      	b.n	f330 <_malloc_r+0x64>
    f60c:	1859      	adds	r1, r3, r1
    f60e:	68da      	ldr	r2, [r3, #12]
    f610:	689c      	ldr	r4, [r3, #8]
    f612:	4630      	mov	r0, r6
    f614:	684d      	ldr	r5, [r1, #4]
    f616:	f103 0808 	add.w	r8, r3, #8
    f61a:	f045 0501 	orr.w	r5, r5, #1
    f61e:	60e2      	str	r2, [r4, #12]
    f620:	6094      	str	r4, [r2, #8]
    f622:	604d      	str	r5, [r1, #4]
    f624:	f000 f90c 	bl	f840 <__malloc_unlock>
    f628:	e682      	b.n	f330 <_malloc_r+0x64>
    f62a:	f1bc 0f14 	cmp.w	ip, #20
    f62e:	bf9c      	itt	ls
    f630:	f10c 0c5b 	addls.w	ip, ip, #91	; 0x5b
    f634:	ea4f 054c 	movls.w	r5, ip, lsl #1
    f638:	f67f ae95 	bls.w	f366 <_malloc_r+0x9a>
    f63c:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
    f640:	f200 808e 	bhi.w	f760 <_malloc_r+0x494>
    f644:	ea4f 3c14 	mov.w	ip, r4, lsr #12
    f648:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
    f64c:	ea4f 054c 	mov.w	r5, ip, lsl #1
    f650:	e689      	b.n	f366 <_malloc_r+0x9a>
    f652:	0a42      	lsrs	r2, r0, #9
    f654:	2a04      	cmp	r2, #4
    f656:	d973      	bls.n	f740 <_malloc_r+0x474>
    f658:	2a14      	cmp	r2, #20
    f65a:	bf9c      	itt	ls
    f65c:	f102 095b 	addls.w	r9, r2, #91	; 0x5b
    f660:	ea4f 0549 	movls.w	r5, r9, lsl #1
    f664:	d908      	bls.n	f678 <_malloc_r+0x3ac>
    f666:	2a54      	cmp	r2, #84	; 0x54
    f668:	f200 80c3 	bhi.w	f7f2 <_malloc_r+0x526>
    f66c:	ea4f 3910 	mov.w	r9, r0, lsr #12
    f670:	f109 096e 	add.w	r9, r9, #110	; 0x6e
    f674:	ea4f 0549 	mov.w	r5, r9, lsl #1
    f678:	eb07 0585 	add.w	r5, r7, r5, lsl #2
    f67c:	f8df 81b4 	ldr.w	r8, [pc, #436]	; f834 <_malloc_r+0x568>
    f680:	68aa      	ldr	r2, [r5, #8]
    f682:	42aa      	cmp	r2, r5
    f684:	d076      	beq.n	f774 <_malloc_r+0x4a8>
    f686:	6851      	ldr	r1, [r2, #4]
    f688:	f021 0103 	bic.w	r1, r1, #3
    f68c:	4288      	cmp	r0, r1
    f68e:	d202      	bcs.n	f696 <_malloc_r+0x3ca>
    f690:	6892      	ldr	r2, [r2, #8]
    f692:	4295      	cmp	r5, r2
    f694:	d1f7      	bne.n	f686 <_malloc_r+0x3ba>
    f696:	68d0      	ldr	r0, [r2, #12]
    f698:	f8d7 9004 	ldr.w	r9, [r7, #4]
    f69c:	60d8      	str	r0, [r3, #12]
    f69e:	609a      	str	r2, [r3, #8]
    f6a0:	60d3      	str	r3, [r2, #12]
    f6a2:	6083      	str	r3, [r0, #8]
    f6a4:	e6a2      	b.n	f3ec <_malloc_r+0x120>
    f6a6:	191d      	adds	r5, r3, r4
    f6a8:	f041 0701 	orr.w	r7, r1, #1
    f6ac:	6155      	str	r5, [r2, #20]
    f6ae:	f044 0401 	orr.w	r4, r4, #1
    f6b2:	6115      	str	r5, [r2, #16]
    f6b4:	4630      	mov	r0, r6
    f6b6:	605c      	str	r4, [r3, #4]
    f6b8:	f103 0808 	add.w	r8, r3, #8
    f6bc:	f8c5 e00c 	str.w	lr, [r5, #12]
    f6c0:	f8c5 e008 	str.w	lr, [r5, #8]
    f6c4:	606f      	str	r7, [r5, #4]
    f6c6:	5069      	str	r1, [r5, r1]
    f6c8:	f000 f8ba 	bl	f840 <__malloc_unlock>
    f6cc:	e630      	b.n	f330 <_malloc_r+0x64>
    f6ce:	f108 0801 	add.w	r8, r8, #1
    f6d2:	3008      	adds	r0, #8
    f6d4:	f018 0f03 	tst.w	r8, #3
    f6d8:	f47f aea4 	bne.w	f424 <_malloc_r+0x158>
    f6dc:	464a      	mov	r2, r9
    f6de:	f01c 0f03 	tst.w	ip, #3
    f6e2:	f1a2 0108 	sub.w	r1, r2, #8
    f6e6:	f10c 3cff 	add.w	ip, ip, #4294967295
    f6ea:	f000 809a 	beq.w	f822 <_malloc_r+0x556>
    f6ee:	6812      	ldr	r2, [r2, #0]
    f6f0:	428a      	cmp	r2, r1
    f6f2:	d0f4      	beq.n	f6de <_malloc_r+0x412>
    f6f4:	687a      	ldr	r2, [r7, #4]
    f6f6:	005b      	lsls	r3, r3, #1
    f6f8:	4293      	cmp	r3, r2
    f6fa:	f63f aed3 	bhi.w	f4a4 <_malloc_r+0x1d8>
    f6fe:	2b00      	cmp	r3, #0
    f700:	f43f aed0 	beq.w	f4a4 <_malloc_r+0x1d8>
    f704:	421a      	tst	r2, r3
    f706:	f000 8091 	beq.w	f82c <_malloc_r+0x560>
    f70a:	46c4      	mov	ip, r8
    f70c:	e686      	b.n	f41c <_malloc_r+0x150>
    f70e:	f103 0208 	add.w	r2, r3, #8
    f712:	695b      	ldr	r3, [r3, #20]
    f714:	429a      	cmp	r2, r3
    f716:	bf08      	it	eq
    f718:	f10c 0c02 	addeq.w	ip, ip, #2
    f71c:	f43f ae3a 	beq.w	f394 <_malloc_r+0xc8>
    f720:	e5f5      	b.n	f30e <_malloc_r+0x42>
    f722:	4690      	mov	r8, r2
    f724:	1955      	adds	r5, r2, r5
    f726:	68d3      	ldr	r3, [r2, #12]
    f728:	4630      	mov	r0, r6
    f72a:	f858 2f08 	ldr.w	r2, [r8, #8]!
    f72e:	6869      	ldr	r1, [r5, #4]
    f730:	60d3      	str	r3, [r2, #12]
    f732:	f041 0101 	orr.w	r1, r1, #1
    f736:	609a      	str	r2, [r3, #8]
    f738:	6069      	str	r1, [r5, #4]
    f73a:	f000 f881 	bl	f840 <__malloc_unlock>
    f73e:	e5f7      	b.n	f330 <_malloc_r+0x64>
    f740:	ea4f 1990 	mov.w	r9, r0, lsr #6
    f744:	f109 0938 	add.w	r9, r9, #56	; 0x38
    f748:	ea4f 0549 	mov.w	r5, r9, lsl #1
    f74c:	e794      	b.n	f678 <_malloc_r+0x3ac>
    f74e:	42bd      	cmp	r5, r7
    f750:	f43f aed6 	beq.w	f500 <_malloc_r+0x234>
    f754:	4b37      	ldr	r3, [pc, #220]	; (f834 <_malloc_r+0x568>)
    f756:	689d      	ldr	r5, [r3, #8]
    f758:	686a      	ldr	r2, [r5, #4]
    f75a:	f022 0203 	bic.w	r2, r2, #3
    f75e:	e736      	b.n	f5ce <_malloc_r+0x302>
    f760:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
    f764:	d819      	bhi.n	f79a <_malloc_r+0x4ce>
    f766:	ea4f 3cd4 	mov.w	ip, r4, lsr #15
    f76a:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
    f76e:	ea4f 054c 	mov.w	r5, ip, lsl #1
    f772:	e5f8      	b.n	f366 <_malloc_r+0x9a>
    f774:	2501      	movs	r5, #1
    f776:	f8d8 1004 	ldr.w	r1, [r8, #4]
    f77a:	ea4f 09a9 	mov.w	r9, r9, asr #2
    f77e:	4610      	mov	r0, r2
    f780:	fa05 f509 	lsl.w	r5, r5, r9
    f784:	ea45 0901 	orr.w	r9, r5, r1
    f788:	f8c8 9004 	str.w	r9, [r8, #4]
    f78c:	e786      	b.n	f69c <_malloc_r+0x3d0>
    f78e:	2301      	movs	r3, #1
    f790:	4645      	mov	r5, r8
    f792:	f8c8 3004 	str.w	r3, [r8, #4]
    f796:	2200      	movs	r2, #0
    f798:	e719      	b.n	f5ce <_malloc_r+0x302>
    f79a:	f240 5354 	movw	r3, #1364	; 0x554
    f79e:	459c      	cmp	ip, r3
    f7a0:	d80b      	bhi.n	f7ba <_malloc_r+0x4ee>
    f7a2:	ea4f 4c94 	mov.w	ip, r4, lsr #18
    f7a6:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
    f7aa:	ea4f 054c 	mov.w	r5, ip, lsl #1
    f7ae:	e5da      	b.n	f366 <_malloc_r+0x9a>
    f7b0:	68bd      	ldr	r5, [r7, #8]
    f7b2:	686a      	ldr	r2, [r5, #4]
    f7b4:	f022 0203 	bic.w	r2, r2, #3
    f7b8:	e709      	b.n	f5ce <_malloc_r+0x302>
    f7ba:	25fc      	movs	r5, #252	; 0xfc
    f7bc:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
    f7c0:	e5d1      	b.n	f366 <_malloc_r+0x9a>
    f7c2:	0511      	lsls	r1, r2, #20
    f7c4:	0d09      	lsrs	r1, r1, #20
    f7c6:	2900      	cmp	r1, #0
    f7c8:	f47f aea2 	bne.w	f510 <_malloc_r+0x244>
    f7cc:	68ba      	ldr	r2, [r7, #8]
    f7ce:	eb0b 0109 	add.w	r1, fp, r9
    f7d2:	f041 0101 	orr.w	r1, r1, #1
    f7d6:	6051      	str	r1, [r2, #4]
    f7d8:	e6e9      	b.n	f5ae <_malloc_r+0x2e2>
    f7da:	2201      	movs	r2, #1
    f7dc:	f04f 0b00 	mov.w	fp, #0
    f7e0:	e6c2      	b.n	f568 <_malloc_r+0x29c>
    f7e2:	4630      	mov	r0, r6
    f7e4:	f105 0108 	add.w	r1, r5, #8
    f7e8:	f000 f878 	bl	f8dc <_free_r>
    f7ec:	4b12      	ldr	r3, [pc, #72]	; (f838 <_malloc_r+0x56c>)
    f7ee:	685b      	ldr	r3, [r3, #4]
    f7f0:	e6dd      	b.n	f5ae <_malloc_r+0x2e2>
    f7f2:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
    f7f6:	d806      	bhi.n	f806 <_malloc_r+0x53a>
    f7f8:	ea4f 39d0 	mov.w	r9, r0, lsr #15
    f7fc:	f109 0977 	add.w	r9, r9, #119	; 0x77
    f800:	ea4f 0549 	mov.w	r5, r9, lsl #1
    f804:	e738      	b.n	f678 <_malloc_r+0x3ac>
    f806:	f240 5154 	movw	r1, #1364	; 0x554
    f80a:	25fc      	movs	r5, #252	; 0xfc
    f80c:	428a      	cmp	r2, r1
    f80e:	f04f 097e 	mov.w	r9, #126	; 0x7e
    f812:	bf9e      	ittt	ls
    f814:	ea4f 4990 	movls.w	r9, r0, lsr #18
    f818:	f109 097c 	addls.w	r9, r9, #124	; 0x7c
    f81c:	ea4f 0549 	movls.w	r5, r9, lsl #1
    f820:	e72a      	b.n	f678 <_malloc_r+0x3ac>
    f822:	687a      	ldr	r2, [r7, #4]
    f824:	ea22 0203 	bic.w	r2, r2, r3
    f828:	607a      	str	r2, [r7, #4]
    f82a:	e764      	b.n	f6f6 <_malloc_r+0x42a>
    f82c:	005b      	lsls	r3, r3, #1
    f82e:	f108 0804 	add.w	r8, r8, #4
    f832:	e767      	b.n	f704 <_malloc_r+0x438>
    f834:	100004fc 	.word	0x100004fc
    f838:	10000c38 	.word	0x10000c38

0000f83c <__malloc_lock>:
    f83c:	4770      	bx	lr
    f83e:	bf00      	nop

0000f840 <__malloc_unlock>:
    f840:	4770      	bx	lr
    f842:	bf00      	nop

0000f844 <_malloc_trim_r>:
    f844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f846:	460f      	mov	r7, r1
    f848:	4d21      	ldr	r5, [pc, #132]	; (f8d0 <_malloc_trim_r+0x8c>)
    f84a:	4604      	mov	r4, r0
    f84c:	f7ff fff6 	bl	f83c <__malloc_lock>
    f850:	68ab      	ldr	r3, [r5, #8]
    f852:	685e      	ldr	r6, [r3, #4]
    f854:	f026 0603 	bic.w	r6, r6, #3
    f858:	f606 73ef 	addw	r3, r6, #4079	; 0xfef
    f85c:	1bdf      	subs	r7, r3, r7
    f85e:	0b3f      	lsrs	r7, r7, #12
    f860:	3f01      	subs	r7, #1
    f862:	033f      	lsls	r7, r7, #12
    f864:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
    f868:	db07      	blt.n	f87a <_malloc_trim_r+0x36>
    f86a:	2100      	movs	r1, #0
    f86c:	4620      	mov	r0, r4
    f86e:	f7f2 ffbd 	bl	27ec <_sbrk_r>
    f872:	68ab      	ldr	r3, [r5, #8]
    f874:	199b      	adds	r3, r3, r6
    f876:	4298      	cmp	r0, r3
    f878:	d004      	beq.n	f884 <_malloc_trim_r+0x40>
    f87a:	4620      	mov	r0, r4
    f87c:	f7ff ffe0 	bl	f840 <__malloc_unlock>
    f880:	2000      	movs	r0, #0
    f882:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f884:	4279      	negs	r1, r7
    f886:	4620      	mov	r0, r4
    f888:	f7f2 ffb0 	bl	27ec <_sbrk_r>
    f88c:	3001      	adds	r0, #1
    f88e:	d00d      	beq.n	f8ac <_malloc_trim_r+0x68>
    f890:	4b10      	ldr	r3, [pc, #64]	; (f8d4 <_malloc_trim_r+0x90>)
    f892:	1bf6      	subs	r6, r6, r7
    f894:	68a9      	ldr	r1, [r5, #8]
    f896:	4620      	mov	r0, r4
    f898:	f046 0601 	orr.w	r6, r6, #1
    f89c:	681a      	ldr	r2, [r3, #0]
    f89e:	604e      	str	r6, [r1, #4]
    f8a0:	1bd7      	subs	r7, r2, r7
    f8a2:	601f      	str	r7, [r3, #0]
    f8a4:	f7ff ffcc 	bl	f840 <__malloc_unlock>
    f8a8:	2001      	movs	r0, #1
    f8aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f8ac:	2100      	movs	r1, #0
    f8ae:	4620      	mov	r0, r4
    f8b0:	f7f2 ff9c 	bl	27ec <_sbrk_r>
    f8b4:	68ab      	ldr	r3, [r5, #8]
    f8b6:	1ac2      	subs	r2, r0, r3
    f8b8:	2a0f      	cmp	r2, #15
    f8ba:	ddde      	ble.n	f87a <_malloc_trim_r+0x36>
    f8bc:	f042 0201 	orr.w	r2, r2, #1
    f8c0:	605a      	str	r2, [r3, #4]
    f8c2:	4b05      	ldr	r3, [pc, #20]	; (f8d8 <_malloc_trim_r+0x94>)
    f8c4:	681b      	ldr	r3, [r3, #0]
    f8c6:	1ac0      	subs	r0, r0, r3
    f8c8:	4b02      	ldr	r3, [pc, #8]	; (f8d4 <_malloc_trim_r+0x90>)
    f8ca:	6018      	str	r0, [r3, #0]
    f8cc:	e7d5      	b.n	f87a <_malloc_trim_r+0x36>
    f8ce:	bf00      	nop
    f8d0:	100004fc 	.word	0x100004fc
    f8d4:	10000c3c 	.word	0x10000c3c
    f8d8:	10000904 	.word	0x10000904

0000f8dc <_free_r>:
    f8dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f8de:	460d      	mov	r5, r1
    f8e0:	4606      	mov	r6, r0
    f8e2:	2900      	cmp	r1, #0
    f8e4:	d055      	beq.n	f992 <_free_r+0xb6>
    f8e6:	f7ff ffa9 	bl	f83c <__malloc_lock>
    f8ea:	f855 1c04 	ldr.w	r1, [r5, #-4]
    f8ee:	f8df c168 	ldr.w	ip, [pc, #360]	; fa58 <_free_r+0x17c>
    f8f2:	f1a5 0408 	sub.w	r4, r5, #8
    f8f6:	f021 0301 	bic.w	r3, r1, #1
    f8fa:	18e2      	adds	r2, r4, r3
    f8fc:	f8dc 0008 	ldr.w	r0, [ip, #8]
    f900:	6857      	ldr	r7, [r2, #4]
    f902:	4290      	cmp	r0, r2
    f904:	f027 0703 	bic.w	r7, r7, #3
    f908:	d064      	beq.n	f9d4 <_free_r+0xf8>
    f90a:	f011 0101 	ands.w	r1, r1, #1
    f90e:	6057      	str	r7, [r2, #4]
    f910:	d032      	beq.n	f978 <_free_r+0x9c>
    f912:	2100      	movs	r1, #0
    f914:	19d0      	adds	r0, r2, r7
    f916:	6840      	ldr	r0, [r0, #4]
    f918:	07c0      	lsls	r0, r0, #31
    f91a:	d406      	bmi.n	f92a <_free_r+0x4e>
    f91c:	19db      	adds	r3, r3, r7
    f91e:	6890      	ldr	r0, [r2, #8]
    f920:	2900      	cmp	r1, #0
    f922:	d049      	beq.n	f9b8 <_free_r+0xdc>
    f924:	68d2      	ldr	r2, [r2, #12]
    f926:	60c2      	str	r2, [r0, #12]
    f928:	6090      	str	r0, [r2, #8]
    f92a:	f043 0201 	orr.w	r2, r3, #1
    f92e:	50e3      	str	r3, [r4, r3]
    f930:	6062      	str	r2, [r4, #4]
    f932:	b9e1      	cbnz	r1, f96e <_free_r+0x92>
    f934:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    f938:	d32c      	bcc.n	f994 <_free_r+0xb8>
    f93a:	0a5a      	lsrs	r2, r3, #9
    f93c:	2a04      	cmp	r2, #4
    f93e:	d865      	bhi.n	fa0c <_free_r+0x130>
    f940:	0998      	lsrs	r0, r3, #6
    f942:	3038      	adds	r0, #56	; 0x38
    f944:	0041      	lsls	r1, r0, #1
    f946:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
    f94a:	4943      	ldr	r1, [pc, #268]	; (fa58 <_free_r+0x17c>)
    f94c:	f8dc 2008 	ldr.w	r2, [ip, #8]
    f950:	4562      	cmp	r2, ip
    f952:	d066      	beq.n	fa22 <_free_r+0x146>
    f954:	6851      	ldr	r1, [r2, #4]
    f956:	f021 0103 	bic.w	r1, r1, #3
    f95a:	428b      	cmp	r3, r1
    f95c:	d202      	bcs.n	f964 <_free_r+0x88>
    f95e:	6892      	ldr	r2, [r2, #8]
    f960:	4594      	cmp	ip, r2
    f962:	d1f7      	bne.n	f954 <_free_r+0x78>
    f964:	68d3      	ldr	r3, [r2, #12]
    f966:	60e3      	str	r3, [r4, #12]
    f968:	60a2      	str	r2, [r4, #8]
    f96a:	60d4      	str	r4, [r2, #12]
    f96c:	609c      	str	r4, [r3, #8]
    f96e:	4630      	mov	r0, r6
    f970:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    f974:	f7ff bf64 	b.w	f840 <__malloc_unlock>
    f978:	f855 0c08 	ldr.w	r0, [r5, #-8]
    f97c:	f10c 0508 	add.w	r5, ip, #8
    f980:	1a24      	subs	r4, r4, r0
    f982:	181b      	adds	r3, r3, r0
    f984:	68a0      	ldr	r0, [r4, #8]
    f986:	42a8      	cmp	r0, r5
    f988:	d03e      	beq.n	fa08 <_free_r+0x12c>
    f98a:	68e5      	ldr	r5, [r4, #12]
    f98c:	60c5      	str	r5, [r0, #12]
    f98e:	60a8      	str	r0, [r5, #8]
    f990:	e7c0      	b.n	f914 <_free_r+0x38>
    f992:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    f994:	08db      	lsrs	r3, r3, #3
    f996:	2101      	movs	r1, #1
    f998:	f8dc 0004 	ldr.w	r0, [ip, #4]
    f99c:	eb0c 02c3 	add.w	r2, ip, r3, lsl #3
    f9a0:	109b      	asrs	r3, r3, #2
    f9a2:	fa01 f303 	lsl.w	r3, r1, r3
    f9a6:	60e2      	str	r2, [r4, #12]
    f9a8:	6891      	ldr	r1, [r2, #8]
    f9aa:	4318      	orrs	r0, r3
    f9ac:	f8cc 0004 	str.w	r0, [ip, #4]
    f9b0:	60a1      	str	r1, [r4, #8]
    f9b2:	60cc      	str	r4, [r1, #12]
    f9b4:	6094      	str	r4, [r2, #8]
    f9b6:	e7da      	b.n	f96e <_free_r+0x92>
    f9b8:	4d28      	ldr	r5, [pc, #160]	; (fa5c <_free_r+0x180>)
    f9ba:	42a8      	cmp	r0, r5
    f9bc:	d1b2      	bne.n	f924 <_free_r+0x48>
    f9be:	f8cc 4014 	str.w	r4, [ip, #20]
    f9c2:	f043 0201 	orr.w	r2, r3, #1
    f9c6:	f8cc 4010 	str.w	r4, [ip, #16]
    f9ca:	60e0      	str	r0, [r4, #12]
    f9cc:	60a0      	str	r0, [r4, #8]
    f9ce:	6062      	str	r2, [r4, #4]
    f9d0:	50e3      	str	r3, [r4, r3]
    f9d2:	e7cc      	b.n	f96e <_free_r+0x92>
    f9d4:	18ff      	adds	r7, r7, r3
    f9d6:	07cb      	lsls	r3, r1, #31
    f9d8:	d407      	bmi.n	f9ea <_free_r+0x10e>
    f9da:	f855 3c08 	ldr.w	r3, [r5, #-8]
    f9de:	1ae4      	subs	r4, r4, r3
    f9e0:	18ff      	adds	r7, r7, r3
    f9e2:	68a2      	ldr	r2, [r4, #8]
    f9e4:	68e3      	ldr	r3, [r4, #12]
    f9e6:	60d3      	str	r3, [r2, #12]
    f9e8:	609a      	str	r2, [r3, #8]
    f9ea:	f047 0301 	orr.w	r3, r7, #1
    f9ee:	6063      	str	r3, [r4, #4]
    f9f0:	4b1b      	ldr	r3, [pc, #108]	; (fa60 <_free_r+0x184>)
    f9f2:	f8cc 4008 	str.w	r4, [ip, #8]
    f9f6:	681b      	ldr	r3, [r3, #0]
    f9f8:	429f      	cmp	r7, r3
    f9fa:	d3b8      	bcc.n	f96e <_free_r+0x92>
    f9fc:	4b19      	ldr	r3, [pc, #100]	; (fa64 <_free_r+0x188>)
    f9fe:	4630      	mov	r0, r6
    fa00:	6819      	ldr	r1, [r3, #0]
    fa02:	f7ff ff1f 	bl	f844 <_malloc_trim_r>
    fa06:	e7b2      	b.n	f96e <_free_r+0x92>
    fa08:	2101      	movs	r1, #1
    fa0a:	e783      	b.n	f914 <_free_r+0x38>
    fa0c:	f102 005b 	add.w	r0, r2, #91	; 0x5b
    fa10:	0041      	lsls	r1, r0, #1
    fa12:	2a14      	cmp	r2, #20
    fa14:	d997      	bls.n	f946 <_free_r+0x6a>
    fa16:	2a54      	cmp	r2, #84	; 0x54
    fa18:	d80c      	bhi.n	fa34 <_free_r+0x158>
    fa1a:	0b18      	lsrs	r0, r3, #12
    fa1c:	306e      	adds	r0, #110	; 0x6e
    fa1e:	0041      	lsls	r1, r0, #1
    fa20:	e791      	b.n	f946 <_free_r+0x6a>
    fa22:	2701      	movs	r7, #1
    fa24:	684d      	ldr	r5, [r1, #4]
    fa26:	1080      	asrs	r0, r0, #2
    fa28:	4613      	mov	r3, r2
    fa2a:	fa07 f000 	lsl.w	r0, r7, r0
    fa2e:	4305      	orrs	r5, r0
    fa30:	604d      	str	r5, [r1, #4]
    fa32:	e798      	b.n	f966 <_free_r+0x8a>
    fa34:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
    fa38:	d803      	bhi.n	fa42 <_free_r+0x166>
    fa3a:	0bd8      	lsrs	r0, r3, #15
    fa3c:	3077      	adds	r0, #119	; 0x77
    fa3e:	0041      	lsls	r1, r0, #1
    fa40:	e781      	b.n	f946 <_free_r+0x6a>
    fa42:	f240 5154 	movw	r1, #1364	; 0x554
    fa46:	428a      	cmp	r2, r1
    fa48:	d803      	bhi.n	fa52 <_free_r+0x176>
    fa4a:	0c98      	lsrs	r0, r3, #18
    fa4c:	307c      	adds	r0, #124	; 0x7c
    fa4e:	0041      	lsls	r1, r0, #1
    fa50:	e779      	b.n	f946 <_free_r+0x6a>
    fa52:	21fc      	movs	r1, #252	; 0xfc
    fa54:	207e      	movs	r0, #126	; 0x7e
    fa56:	e776      	b.n	f946 <_free_r+0x6a>
    fa58:	100004fc 	.word	0x100004fc
    fa5c:	10000504 	.word	0x10000504
    fa60:	10000908 	.word	0x10000908
    fa64:	10000c38 	.word	0x10000c38

0000fa68 <__aeabi_uidiv>:
    fa68:	1e4a      	subs	r2, r1, #1
    fa6a:	bf08      	it	eq
    fa6c:	4770      	bxeq	lr
    fa6e:	f0c0 8124 	bcc.w	fcba <__aeabi_uidiv+0x252>
    fa72:	4288      	cmp	r0, r1
    fa74:	f240 8116 	bls.w	fca4 <__aeabi_uidiv+0x23c>
    fa78:	4211      	tst	r1, r2
    fa7a:	f000 8117 	beq.w	fcac <__aeabi_uidiv+0x244>
    fa7e:	fab0 f380 	clz	r3, r0
    fa82:	fab1 f281 	clz	r2, r1
    fa86:	eba2 0303 	sub.w	r3, r2, r3
    fa8a:	f1c3 031f 	rsb	r3, r3, #31
    fa8e:	a204      	add	r2, pc, #16	; (adr r2, faa0 <__aeabi_uidiv+0x38>)
    fa90:	eb02 1303 	add.w	r3, r2, r3, lsl #4
    fa94:	f04f 0200 	mov.w	r2, #0
    fa98:	469f      	mov	pc, r3
    fa9a:	bf00      	nop
    fa9c:	f3af 8000 	nop.w
    faa0:	ebb0 7fc1 	cmp.w	r0, r1, lsl #31
    faa4:	bf00      	nop
    faa6:	eb42 0202 	adc.w	r2, r2, r2
    faaa:	bf28      	it	cs
    faac:	eba0 70c1 	subcs.w	r0, r0, r1, lsl #31
    fab0:	ebb0 7f81 	cmp.w	r0, r1, lsl #30
    fab4:	bf00      	nop
    fab6:	eb42 0202 	adc.w	r2, r2, r2
    faba:	bf28      	it	cs
    fabc:	eba0 7081 	subcs.w	r0, r0, r1, lsl #30
    fac0:	ebb0 7f41 	cmp.w	r0, r1, lsl #29
    fac4:	bf00      	nop
    fac6:	eb42 0202 	adc.w	r2, r2, r2
    faca:	bf28      	it	cs
    facc:	eba0 7041 	subcs.w	r0, r0, r1, lsl #29
    fad0:	ebb0 7f01 	cmp.w	r0, r1, lsl #28
    fad4:	bf00      	nop
    fad6:	eb42 0202 	adc.w	r2, r2, r2
    fada:	bf28      	it	cs
    fadc:	eba0 7001 	subcs.w	r0, r0, r1, lsl #28
    fae0:	ebb0 6fc1 	cmp.w	r0, r1, lsl #27
    fae4:	bf00      	nop
    fae6:	eb42 0202 	adc.w	r2, r2, r2
    faea:	bf28      	it	cs
    faec:	eba0 60c1 	subcs.w	r0, r0, r1, lsl #27
    faf0:	ebb0 6f81 	cmp.w	r0, r1, lsl #26
    faf4:	bf00      	nop
    faf6:	eb42 0202 	adc.w	r2, r2, r2
    fafa:	bf28      	it	cs
    fafc:	eba0 6081 	subcs.w	r0, r0, r1, lsl #26
    fb00:	ebb0 6f41 	cmp.w	r0, r1, lsl #25
    fb04:	bf00      	nop
    fb06:	eb42 0202 	adc.w	r2, r2, r2
    fb0a:	bf28      	it	cs
    fb0c:	eba0 6041 	subcs.w	r0, r0, r1, lsl #25
    fb10:	ebb0 6f01 	cmp.w	r0, r1, lsl #24
    fb14:	bf00      	nop
    fb16:	eb42 0202 	adc.w	r2, r2, r2
    fb1a:	bf28      	it	cs
    fb1c:	eba0 6001 	subcs.w	r0, r0, r1, lsl #24
    fb20:	ebb0 5fc1 	cmp.w	r0, r1, lsl #23
    fb24:	bf00      	nop
    fb26:	eb42 0202 	adc.w	r2, r2, r2
    fb2a:	bf28      	it	cs
    fb2c:	eba0 50c1 	subcs.w	r0, r0, r1, lsl #23
    fb30:	ebb0 5f81 	cmp.w	r0, r1, lsl #22
    fb34:	bf00      	nop
    fb36:	eb42 0202 	adc.w	r2, r2, r2
    fb3a:	bf28      	it	cs
    fb3c:	eba0 5081 	subcs.w	r0, r0, r1, lsl #22
    fb40:	ebb0 5f41 	cmp.w	r0, r1, lsl #21
    fb44:	bf00      	nop
    fb46:	eb42 0202 	adc.w	r2, r2, r2
    fb4a:	bf28      	it	cs
    fb4c:	eba0 5041 	subcs.w	r0, r0, r1, lsl #21
    fb50:	ebb0 5f01 	cmp.w	r0, r1, lsl #20
    fb54:	bf00      	nop
    fb56:	eb42 0202 	adc.w	r2, r2, r2
    fb5a:	bf28      	it	cs
    fb5c:	eba0 5001 	subcs.w	r0, r0, r1, lsl #20
    fb60:	ebb0 4fc1 	cmp.w	r0, r1, lsl #19
    fb64:	bf00      	nop
    fb66:	eb42 0202 	adc.w	r2, r2, r2
    fb6a:	bf28      	it	cs
    fb6c:	eba0 40c1 	subcs.w	r0, r0, r1, lsl #19
    fb70:	ebb0 4f81 	cmp.w	r0, r1, lsl #18
    fb74:	bf00      	nop
    fb76:	eb42 0202 	adc.w	r2, r2, r2
    fb7a:	bf28      	it	cs
    fb7c:	eba0 4081 	subcs.w	r0, r0, r1, lsl #18
    fb80:	ebb0 4f41 	cmp.w	r0, r1, lsl #17
    fb84:	bf00      	nop
    fb86:	eb42 0202 	adc.w	r2, r2, r2
    fb8a:	bf28      	it	cs
    fb8c:	eba0 4041 	subcs.w	r0, r0, r1, lsl #17
    fb90:	ebb0 4f01 	cmp.w	r0, r1, lsl #16
    fb94:	bf00      	nop
    fb96:	eb42 0202 	adc.w	r2, r2, r2
    fb9a:	bf28      	it	cs
    fb9c:	eba0 4001 	subcs.w	r0, r0, r1, lsl #16
    fba0:	ebb0 3fc1 	cmp.w	r0, r1, lsl #15
    fba4:	bf00      	nop
    fba6:	eb42 0202 	adc.w	r2, r2, r2
    fbaa:	bf28      	it	cs
    fbac:	eba0 30c1 	subcs.w	r0, r0, r1, lsl #15
    fbb0:	ebb0 3f81 	cmp.w	r0, r1, lsl #14
    fbb4:	bf00      	nop
    fbb6:	eb42 0202 	adc.w	r2, r2, r2
    fbba:	bf28      	it	cs
    fbbc:	eba0 3081 	subcs.w	r0, r0, r1, lsl #14
    fbc0:	ebb0 3f41 	cmp.w	r0, r1, lsl #13
    fbc4:	bf00      	nop
    fbc6:	eb42 0202 	adc.w	r2, r2, r2
    fbca:	bf28      	it	cs
    fbcc:	eba0 3041 	subcs.w	r0, r0, r1, lsl #13
    fbd0:	ebb0 3f01 	cmp.w	r0, r1, lsl #12
    fbd4:	bf00      	nop
    fbd6:	eb42 0202 	adc.w	r2, r2, r2
    fbda:	bf28      	it	cs
    fbdc:	eba0 3001 	subcs.w	r0, r0, r1, lsl #12
    fbe0:	ebb0 2fc1 	cmp.w	r0, r1, lsl #11
    fbe4:	bf00      	nop
    fbe6:	eb42 0202 	adc.w	r2, r2, r2
    fbea:	bf28      	it	cs
    fbec:	eba0 20c1 	subcs.w	r0, r0, r1, lsl #11
    fbf0:	ebb0 2f81 	cmp.w	r0, r1, lsl #10
    fbf4:	bf00      	nop
    fbf6:	eb42 0202 	adc.w	r2, r2, r2
    fbfa:	bf28      	it	cs
    fbfc:	eba0 2081 	subcs.w	r0, r0, r1, lsl #10
    fc00:	ebb0 2f41 	cmp.w	r0, r1, lsl #9
    fc04:	bf00      	nop
    fc06:	eb42 0202 	adc.w	r2, r2, r2
    fc0a:	bf28      	it	cs
    fc0c:	eba0 2041 	subcs.w	r0, r0, r1, lsl #9
    fc10:	ebb0 2f01 	cmp.w	r0, r1, lsl #8
    fc14:	bf00      	nop
    fc16:	eb42 0202 	adc.w	r2, r2, r2
    fc1a:	bf28      	it	cs
    fc1c:	eba0 2001 	subcs.w	r0, r0, r1, lsl #8
    fc20:	ebb0 1fc1 	cmp.w	r0, r1, lsl #7
    fc24:	bf00      	nop
    fc26:	eb42 0202 	adc.w	r2, r2, r2
    fc2a:	bf28      	it	cs
    fc2c:	eba0 10c1 	subcs.w	r0, r0, r1, lsl #7
    fc30:	ebb0 1f81 	cmp.w	r0, r1, lsl #6
    fc34:	bf00      	nop
    fc36:	eb42 0202 	adc.w	r2, r2, r2
    fc3a:	bf28      	it	cs
    fc3c:	eba0 1081 	subcs.w	r0, r0, r1, lsl #6
    fc40:	ebb0 1f41 	cmp.w	r0, r1, lsl #5
    fc44:	bf00      	nop
    fc46:	eb42 0202 	adc.w	r2, r2, r2
    fc4a:	bf28      	it	cs
    fc4c:	eba0 1041 	subcs.w	r0, r0, r1, lsl #5
    fc50:	ebb0 1f01 	cmp.w	r0, r1, lsl #4
    fc54:	bf00      	nop
    fc56:	eb42 0202 	adc.w	r2, r2, r2
    fc5a:	bf28      	it	cs
    fc5c:	eba0 1001 	subcs.w	r0, r0, r1, lsl #4
    fc60:	ebb0 0fc1 	cmp.w	r0, r1, lsl #3
    fc64:	bf00      	nop
    fc66:	eb42 0202 	adc.w	r2, r2, r2
    fc6a:	bf28      	it	cs
    fc6c:	eba0 00c1 	subcs.w	r0, r0, r1, lsl #3
    fc70:	ebb0 0f81 	cmp.w	r0, r1, lsl #2
    fc74:	bf00      	nop
    fc76:	eb42 0202 	adc.w	r2, r2, r2
    fc7a:	bf28      	it	cs
    fc7c:	eba0 0081 	subcs.w	r0, r0, r1, lsl #2
    fc80:	ebb0 0f41 	cmp.w	r0, r1, lsl #1
    fc84:	bf00      	nop
    fc86:	eb42 0202 	adc.w	r2, r2, r2
    fc8a:	bf28      	it	cs
    fc8c:	eba0 0041 	subcs.w	r0, r0, r1, lsl #1
    fc90:	ebb0 0f01 	cmp.w	r0, r1
    fc94:	bf00      	nop
    fc96:	eb42 0202 	adc.w	r2, r2, r2
    fc9a:	bf28      	it	cs
    fc9c:	eba0 0001 	subcs.w	r0, r0, r1
    fca0:	4610      	mov	r0, r2
    fca2:	4770      	bx	lr
    fca4:	bf0c      	ite	eq
    fca6:	2001      	moveq	r0, #1
    fca8:	2000      	movne	r0, #0
    fcaa:	4770      	bx	lr
    fcac:	fab1 f281 	clz	r2, r1
    fcb0:	f1c2 021f 	rsb	r2, r2, #31
    fcb4:	fa20 f002 	lsr.w	r0, r0, r2
    fcb8:	4770      	bx	lr
    fcba:	b108      	cbz	r0, fcc0 <__aeabi_uidiv+0x258>
    fcbc:	f04f 30ff 	mov.w	r0, #4294967295
    fcc0:	f000 b80e 	b.w	fce0 <__aeabi_idiv0>

0000fcc4 <__aeabi_uidivmod>:
    fcc4:	2900      	cmp	r1, #0
    fcc6:	d0f8      	beq.n	fcba <__aeabi_uidiv+0x252>
    fcc8:	e92d 4003 	stmdb	sp!, {r0, r1, lr}
    fccc:	f7ff fecc 	bl	fa68 <__aeabi_uidiv>
    fcd0:	e8bd 4006 	ldmia.w	sp!, {r1, r2, lr}
    fcd4:	fb02 f300 	mul.w	r3, r2, r0
    fcd8:	eba1 0103 	sub.w	r1, r1, r3
    fcdc:	4770      	bx	lr
    fcde:	bf00      	nop

0000fce0 <__aeabi_idiv0>:
    fce0:	4770      	bx	lr
    fce2:	bf00      	nop

0000fce4 <__aeabi_drsub>:
    fce4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
    fce8:	e002      	b.n	fcf0 <__adddf3>
    fcea:	bf00      	nop

0000fcec <__aeabi_dsub>:
    fcec:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0000fcf0 <__adddf3>:
    fcf0:	b530      	push	{r4, r5, lr}
    fcf2:	ea4f 0441 	mov.w	r4, r1, lsl #1
    fcf6:	ea4f 0543 	mov.w	r5, r3, lsl #1
    fcfa:	ea94 0f05 	teq	r4, r5
    fcfe:	bf08      	it	eq
    fd00:	ea90 0f02 	teqeq	r0, r2
    fd04:	bf1f      	itttt	ne
    fd06:	ea54 0c00 	orrsne.w	ip, r4, r0
    fd0a:	ea55 0c02 	orrsne.w	ip, r5, r2
    fd0e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
    fd12:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    fd16:	f000 80e2 	beq.w	fede <__adddf3+0x1ee>
    fd1a:	ea4f 5454 	mov.w	r4, r4, lsr #21
    fd1e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
    fd22:	bfb8      	it	lt
    fd24:	426d      	neglt	r5, r5
    fd26:	dd0c      	ble.n	fd42 <__adddf3+0x52>
    fd28:	442c      	add	r4, r5
    fd2a:	ea80 0202 	eor.w	r2, r0, r2
    fd2e:	ea81 0303 	eor.w	r3, r1, r3
    fd32:	ea82 0000 	eor.w	r0, r2, r0
    fd36:	ea83 0101 	eor.w	r1, r3, r1
    fd3a:	ea80 0202 	eor.w	r2, r0, r2
    fd3e:	ea81 0303 	eor.w	r3, r1, r3
    fd42:	2d36      	cmp	r5, #54	; 0x36
    fd44:	bf88      	it	hi
    fd46:	bd30      	pophi	{r4, r5, pc}
    fd48:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    fd4c:	ea4f 3101 	mov.w	r1, r1, lsl #12
    fd50:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
    fd54:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
    fd58:	d002      	beq.n	fd60 <__adddf3+0x70>
    fd5a:	4240      	negs	r0, r0
    fd5c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    fd60:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
    fd64:	ea4f 3303 	mov.w	r3, r3, lsl #12
    fd68:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
    fd6c:	d002      	beq.n	fd74 <__adddf3+0x84>
    fd6e:	4252      	negs	r2, r2
    fd70:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    fd74:	ea94 0f05 	teq	r4, r5
    fd78:	f000 80a7 	beq.w	feca <__adddf3+0x1da>
    fd7c:	f1a4 0401 	sub.w	r4, r4, #1
    fd80:	f1d5 0e20 	rsbs	lr, r5, #32
    fd84:	db0d      	blt.n	fda2 <__adddf3+0xb2>
    fd86:	fa02 fc0e 	lsl.w	ip, r2, lr
    fd8a:	fa22 f205 	lsr.w	r2, r2, r5
    fd8e:	1880      	adds	r0, r0, r2
    fd90:	f141 0100 	adc.w	r1, r1, #0
    fd94:	fa03 f20e 	lsl.w	r2, r3, lr
    fd98:	1880      	adds	r0, r0, r2
    fd9a:	fa43 f305 	asr.w	r3, r3, r5
    fd9e:	4159      	adcs	r1, r3
    fda0:	e00e      	b.n	fdc0 <__adddf3+0xd0>
    fda2:	f1a5 0520 	sub.w	r5, r5, #32
    fda6:	f10e 0e20 	add.w	lr, lr, #32
    fdaa:	2a01      	cmp	r2, #1
    fdac:	fa03 fc0e 	lsl.w	ip, r3, lr
    fdb0:	bf28      	it	cs
    fdb2:	f04c 0c02 	orrcs.w	ip, ip, #2
    fdb6:	fa43 f305 	asr.w	r3, r3, r5
    fdba:	18c0      	adds	r0, r0, r3
    fdbc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
    fdc0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    fdc4:	d507      	bpl.n	fdd6 <__adddf3+0xe6>
    fdc6:	f04f 0e00 	mov.w	lr, #0
    fdca:	f1dc 0c00 	rsbs	ip, ip, #0
    fdce:	eb7e 0000 	sbcs.w	r0, lr, r0
    fdd2:	eb6e 0101 	sbc.w	r1, lr, r1
    fdd6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    fdda:	d31b      	bcc.n	fe14 <__adddf3+0x124>
    fddc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
    fde0:	d30c      	bcc.n	fdfc <__adddf3+0x10c>
    fde2:	0849      	lsrs	r1, r1, #1
    fde4:	ea5f 0030 	movs.w	r0, r0, rrx
    fde8:	ea4f 0c3c 	mov.w	ip, ip, rrx
    fdec:	f104 0401 	add.w	r4, r4, #1
    fdf0:	ea4f 5244 	mov.w	r2, r4, lsl #21
    fdf4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
    fdf8:	f080 809a 	bcs.w	ff30 <__adddf3+0x240>
    fdfc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    fe00:	bf08      	it	eq
    fe02:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    fe06:	f150 0000 	adcs.w	r0, r0, #0
    fe0a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    fe0e:	ea41 0105 	orr.w	r1, r1, r5
    fe12:	bd30      	pop	{r4, r5, pc}
    fe14:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
    fe18:	4140      	adcs	r0, r0
    fe1a:	eb41 0101 	adc.w	r1, r1, r1
    fe1e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    fe22:	f1a4 0401 	sub.w	r4, r4, #1
    fe26:	d1e9      	bne.n	fdfc <__adddf3+0x10c>
    fe28:	f091 0f00 	teq	r1, #0
    fe2c:	bf04      	itt	eq
    fe2e:	4601      	moveq	r1, r0
    fe30:	2000      	moveq	r0, #0
    fe32:	fab1 f381 	clz	r3, r1
    fe36:	bf08      	it	eq
    fe38:	3320      	addeq	r3, #32
    fe3a:	f1a3 030b 	sub.w	r3, r3, #11
    fe3e:	f1b3 0220 	subs.w	r2, r3, #32
    fe42:	da0c      	bge.n	fe5e <__adddf3+0x16e>
    fe44:	320c      	adds	r2, #12
    fe46:	dd08      	ble.n	fe5a <__adddf3+0x16a>
    fe48:	f102 0c14 	add.w	ip, r2, #20
    fe4c:	f1c2 020c 	rsb	r2, r2, #12
    fe50:	fa01 f00c 	lsl.w	r0, r1, ip
    fe54:	fa21 f102 	lsr.w	r1, r1, r2
    fe58:	e00c      	b.n	fe74 <__adddf3+0x184>
    fe5a:	f102 0214 	add.w	r2, r2, #20
    fe5e:	bfd8      	it	le
    fe60:	f1c2 0c20 	rsble	ip, r2, #32
    fe64:	fa01 f102 	lsl.w	r1, r1, r2
    fe68:	fa20 fc0c 	lsr.w	ip, r0, ip
    fe6c:	bfdc      	itt	le
    fe6e:	ea41 010c 	orrle.w	r1, r1, ip
    fe72:	4090      	lslle	r0, r2
    fe74:	1ae4      	subs	r4, r4, r3
    fe76:	bfa2      	ittt	ge
    fe78:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
    fe7c:	4329      	orrge	r1, r5
    fe7e:	bd30      	popge	{r4, r5, pc}
    fe80:	ea6f 0404 	mvn.w	r4, r4
    fe84:	3c1f      	subs	r4, #31
    fe86:	da1c      	bge.n	fec2 <__adddf3+0x1d2>
    fe88:	340c      	adds	r4, #12
    fe8a:	dc0e      	bgt.n	feaa <__adddf3+0x1ba>
    fe8c:	f104 0414 	add.w	r4, r4, #20
    fe90:	f1c4 0220 	rsb	r2, r4, #32
    fe94:	fa20 f004 	lsr.w	r0, r0, r4
    fe98:	fa01 f302 	lsl.w	r3, r1, r2
    fe9c:	ea40 0003 	orr.w	r0, r0, r3
    fea0:	fa21 f304 	lsr.w	r3, r1, r4
    fea4:	ea45 0103 	orr.w	r1, r5, r3
    fea8:	bd30      	pop	{r4, r5, pc}
    feaa:	f1c4 040c 	rsb	r4, r4, #12
    feae:	f1c4 0220 	rsb	r2, r4, #32
    feb2:	fa20 f002 	lsr.w	r0, r0, r2
    feb6:	fa01 f304 	lsl.w	r3, r1, r4
    feba:	ea40 0003 	orr.w	r0, r0, r3
    febe:	4629      	mov	r1, r5
    fec0:	bd30      	pop	{r4, r5, pc}
    fec2:	fa21 f004 	lsr.w	r0, r1, r4
    fec6:	4629      	mov	r1, r5
    fec8:	bd30      	pop	{r4, r5, pc}
    feca:	f094 0f00 	teq	r4, #0
    fece:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
    fed2:	bf06      	itte	eq
    fed4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
    fed8:	3401      	addeq	r4, #1
    feda:	3d01      	subne	r5, #1
    fedc:	e74e      	b.n	fd7c <__adddf3+0x8c>
    fede:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    fee2:	bf18      	it	ne
    fee4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    fee8:	d029      	beq.n	ff3e <__adddf3+0x24e>
    feea:	ea94 0f05 	teq	r4, r5
    feee:	bf08      	it	eq
    fef0:	ea90 0f02 	teqeq	r0, r2
    fef4:	d005      	beq.n	ff02 <__adddf3+0x212>
    fef6:	ea54 0c00 	orrs.w	ip, r4, r0
    fefa:	bf04      	itt	eq
    fefc:	4619      	moveq	r1, r3
    fefe:	4610      	moveq	r0, r2
    ff00:	bd30      	pop	{r4, r5, pc}
    ff02:	ea91 0f03 	teq	r1, r3
    ff06:	bf1e      	ittt	ne
    ff08:	2100      	movne	r1, #0
    ff0a:	2000      	movne	r0, #0
    ff0c:	bd30      	popne	{r4, r5, pc}
    ff0e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
    ff12:	d105      	bne.n	ff20 <__adddf3+0x230>
    ff14:	0040      	lsls	r0, r0, #1
    ff16:	4149      	adcs	r1, r1
    ff18:	bf28      	it	cs
    ff1a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
    ff1e:	bd30      	pop	{r4, r5, pc}
    ff20:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
    ff24:	bf3c      	itt	cc
    ff26:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
    ff2a:	bd30      	popcc	{r4, r5, pc}
    ff2c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    ff30:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
    ff34:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    ff38:	f04f 0000 	mov.w	r0, #0
    ff3c:	bd30      	pop	{r4, r5, pc}
    ff3e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    ff42:	bf1a      	itte	ne
    ff44:	4619      	movne	r1, r3
    ff46:	4610      	movne	r0, r2
    ff48:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
    ff4c:	bf1c      	itt	ne
    ff4e:	460b      	movne	r3, r1
    ff50:	4602      	movne	r2, r0
    ff52:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    ff56:	bf06      	itte	eq
    ff58:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
    ff5c:	ea91 0f03 	teqeq	r1, r3
    ff60:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
    ff64:	bd30      	pop	{r4, r5, pc}
    ff66:	bf00      	nop

0000ff68 <__aeabi_ui2d>:
    ff68:	f090 0f00 	teq	r0, #0
    ff6c:	bf04      	itt	eq
    ff6e:	2100      	moveq	r1, #0
    ff70:	4770      	bxeq	lr
    ff72:	b530      	push	{r4, r5, lr}
    ff74:	f44f 6480 	mov.w	r4, #1024	; 0x400
    ff78:	f104 0432 	add.w	r4, r4, #50	; 0x32
    ff7c:	f04f 0500 	mov.w	r5, #0
    ff80:	f04f 0100 	mov.w	r1, #0
    ff84:	e750      	b.n	fe28 <__adddf3+0x138>
    ff86:	bf00      	nop

0000ff88 <__aeabi_i2d>:
    ff88:	f090 0f00 	teq	r0, #0
    ff8c:	bf04      	itt	eq
    ff8e:	2100      	moveq	r1, #0
    ff90:	4770      	bxeq	lr
    ff92:	b530      	push	{r4, r5, lr}
    ff94:	f44f 6480 	mov.w	r4, #1024	; 0x400
    ff98:	f104 0432 	add.w	r4, r4, #50	; 0x32
    ff9c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
    ffa0:	bf48      	it	mi
    ffa2:	4240      	negmi	r0, r0
    ffa4:	f04f 0100 	mov.w	r1, #0
    ffa8:	e73e      	b.n	fe28 <__adddf3+0x138>
    ffaa:	bf00      	nop

0000ffac <__aeabi_f2d>:
    ffac:	0042      	lsls	r2, r0, #1
    ffae:	ea4f 01e2 	mov.w	r1, r2, asr #3
    ffb2:	ea4f 0131 	mov.w	r1, r1, rrx
    ffb6:	ea4f 7002 	mov.w	r0, r2, lsl #28
    ffba:	bf1f      	itttt	ne
    ffbc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
    ffc0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    ffc4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
    ffc8:	4770      	bxne	lr
    ffca:	f092 0f00 	teq	r2, #0
    ffce:	bf14      	ite	ne
    ffd0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    ffd4:	4770      	bxeq	lr
    ffd6:	b530      	push	{r4, r5, lr}
    ffd8:	f44f 7460 	mov.w	r4, #896	; 0x380
    ffdc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    ffe0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    ffe4:	e720      	b.n	fe28 <__adddf3+0x138>
    ffe6:	bf00      	nop

0000ffe8 <__aeabi_ul2d>:
    ffe8:	ea50 0201 	orrs.w	r2, r0, r1
    ffec:	bf08      	it	eq
    ffee:	4770      	bxeq	lr
    fff0:	b530      	push	{r4, r5, lr}
    fff2:	f04f 0500 	mov.w	r5, #0
    fff6:	e00a      	b.n	1000e <__aeabi_l2d+0x16>

0000fff8 <__aeabi_l2d>:
    fff8:	ea50 0201 	orrs.w	r2, r0, r1
    fffc:	bf08      	it	eq
    fffe:	4770      	bxeq	lr
   10000:	b530      	push	{r4, r5, lr}
   10002:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   10006:	d502      	bpl.n	1000e <__aeabi_l2d+0x16>
   10008:	4240      	negs	r0, r0
   1000a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   1000e:	f44f 6480 	mov.w	r4, #1024	; 0x400
   10012:	f104 0432 	add.w	r4, r4, #50	; 0x32
   10016:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   1001a:	f43f aedc 	beq.w	fdd6 <__adddf3+0xe6>
   1001e:	f04f 0203 	mov.w	r2, #3
   10022:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   10026:	bf18      	it	ne
   10028:	3203      	addne	r2, #3
   1002a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   1002e:	bf18      	it	ne
   10030:	3203      	addne	r2, #3
   10032:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   10036:	f1c2 0320 	rsb	r3, r2, #32
   1003a:	fa00 fc03 	lsl.w	ip, r0, r3
   1003e:	fa20 f002 	lsr.w	r0, r0, r2
   10042:	fa01 fe03 	lsl.w	lr, r1, r3
   10046:	ea40 000e 	orr.w	r0, r0, lr
   1004a:	fa21 f102 	lsr.w	r1, r1, r2
   1004e:	4414      	add	r4, r2
   10050:	e6c1      	b.n	fdd6 <__adddf3+0xe6>
   10052:	bf00      	nop

00010054 <__aeabi_dmul>:
   10054:	b570      	push	{r4, r5, r6, lr}
   10056:	f04f 0cff 	mov.w	ip, #255	; 0xff
   1005a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   1005e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   10062:	bf1d      	ittte	ne
   10064:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   10068:	ea94 0f0c 	teqne	r4, ip
   1006c:	ea95 0f0c 	teqne	r5, ip
   10070:	f000 f8de 	bleq	10230 <__aeabi_dmul+0x1dc>
   10074:	442c      	add	r4, r5
   10076:	ea81 0603 	eor.w	r6, r1, r3
   1007a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   1007e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   10082:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   10086:	bf18      	it	ne
   10088:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   1008c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   10090:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   10094:	d038      	beq.n	10108 <__aeabi_dmul+0xb4>
   10096:	fba0 ce02 	umull	ip, lr, r0, r2
   1009a:	f04f 0500 	mov.w	r5, #0
   1009e:	fbe1 e502 	umlal	lr, r5, r1, r2
   100a2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   100a6:	fbe0 e503 	umlal	lr, r5, r0, r3
   100aa:	f04f 0600 	mov.w	r6, #0
   100ae:	fbe1 5603 	umlal	r5, r6, r1, r3
   100b2:	f09c 0f00 	teq	ip, #0
   100b6:	bf18      	it	ne
   100b8:	f04e 0e01 	orrne.w	lr, lr, #1
   100bc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   100c0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   100c4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   100c8:	d204      	bcs.n	100d4 <__aeabi_dmul+0x80>
   100ca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   100ce:	416d      	adcs	r5, r5
   100d0:	eb46 0606 	adc.w	r6, r6, r6
   100d4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   100d8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   100dc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   100e0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   100e4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   100e8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   100ec:	bf88      	it	hi
   100ee:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   100f2:	d81e      	bhi.n	10132 <__aeabi_dmul+0xde>
   100f4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   100f8:	bf08      	it	eq
   100fa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   100fe:	f150 0000 	adcs.w	r0, r0, #0
   10102:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   10106:	bd70      	pop	{r4, r5, r6, pc}
   10108:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   1010c:	ea46 0101 	orr.w	r1, r6, r1
   10110:	ea40 0002 	orr.w	r0, r0, r2
   10114:	ea81 0103 	eor.w	r1, r1, r3
   10118:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   1011c:	bfc2      	ittt	gt
   1011e:	ebd4 050c 	rsbsgt	r5, r4, ip
   10122:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   10126:	bd70      	popgt	{r4, r5, r6, pc}
   10128:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1012c:	f04f 0e00 	mov.w	lr, #0
   10130:	3c01      	subs	r4, #1
   10132:	f300 80ab 	bgt.w	1028c <__aeabi_dmul+0x238>
   10136:	f114 0f36 	cmn.w	r4, #54	; 0x36
   1013a:	bfde      	ittt	le
   1013c:	2000      	movle	r0, #0
   1013e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   10142:	bd70      	pople	{r4, r5, r6, pc}
   10144:	f1c4 0400 	rsb	r4, r4, #0
   10148:	3c20      	subs	r4, #32
   1014a:	da35      	bge.n	101b8 <__aeabi_dmul+0x164>
   1014c:	340c      	adds	r4, #12
   1014e:	dc1b      	bgt.n	10188 <__aeabi_dmul+0x134>
   10150:	f104 0414 	add.w	r4, r4, #20
   10154:	f1c4 0520 	rsb	r5, r4, #32
   10158:	fa00 f305 	lsl.w	r3, r0, r5
   1015c:	fa20 f004 	lsr.w	r0, r0, r4
   10160:	fa01 f205 	lsl.w	r2, r1, r5
   10164:	ea40 0002 	orr.w	r0, r0, r2
   10168:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   1016c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   10170:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   10174:	fa21 f604 	lsr.w	r6, r1, r4
   10178:	eb42 0106 	adc.w	r1, r2, r6
   1017c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   10180:	bf08      	it	eq
   10182:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   10186:	bd70      	pop	{r4, r5, r6, pc}
   10188:	f1c4 040c 	rsb	r4, r4, #12
   1018c:	f1c4 0520 	rsb	r5, r4, #32
   10190:	fa00 f304 	lsl.w	r3, r0, r4
   10194:	fa20 f005 	lsr.w	r0, r0, r5
   10198:	fa01 f204 	lsl.w	r2, r1, r4
   1019c:	ea40 0002 	orr.w	r0, r0, r2
   101a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   101a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   101a8:	f141 0100 	adc.w	r1, r1, #0
   101ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   101b0:	bf08      	it	eq
   101b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   101b6:	bd70      	pop	{r4, r5, r6, pc}
   101b8:	f1c4 0520 	rsb	r5, r4, #32
   101bc:	fa00 f205 	lsl.w	r2, r0, r5
   101c0:	ea4e 0e02 	orr.w	lr, lr, r2
   101c4:	fa20 f304 	lsr.w	r3, r0, r4
   101c8:	fa01 f205 	lsl.w	r2, r1, r5
   101cc:	ea43 0302 	orr.w	r3, r3, r2
   101d0:	fa21 f004 	lsr.w	r0, r1, r4
   101d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   101d8:	fa21 f204 	lsr.w	r2, r1, r4
   101dc:	ea20 0002 	bic.w	r0, r0, r2
   101e0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   101e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   101e8:	bf08      	it	eq
   101ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   101ee:	bd70      	pop	{r4, r5, r6, pc}
   101f0:	f094 0f00 	teq	r4, #0
   101f4:	d10f      	bne.n	10216 <__aeabi_dmul+0x1c2>
   101f6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   101fa:	0040      	lsls	r0, r0, #1
   101fc:	eb41 0101 	adc.w	r1, r1, r1
   10200:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   10204:	bf08      	it	eq
   10206:	3c01      	subeq	r4, #1
   10208:	d0f7      	beq.n	101fa <__aeabi_dmul+0x1a6>
   1020a:	ea41 0106 	orr.w	r1, r1, r6
   1020e:	f095 0f00 	teq	r5, #0
   10212:	bf18      	it	ne
   10214:	4770      	bxne	lr
   10216:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   1021a:	0052      	lsls	r2, r2, #1
   1021c:	eb43 0303 	adc.w	r3, r3, r3
   10220:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   10224:	bf08      	it	eq
   10226:	3d01      	subeq	r5, #1
   10228:	d0f7      	beq.n	1021a <__aeabi_dmul+0x1c6>
   1022a:	ea43 0306 	orr.w	r3, r3, r6
   1022e:	4770      	bx	lr
   10230:	ea94 0f0c 	teq	r4, ip
   10234:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   10238:	bf18      	it	ne
   1023a:	ea95 0f0c 	teqne	r5, ip
   1023e:	d00c      	beq.n	1025a <__aeabi_dmul+0x206>
   10240:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   10244:	bf18      	it	ne
   10246:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   1024a:	d1d1      	bne.n	101f0 <__aeabi_dmul+0x19c>
   1024c:	ea81 0103 	eor.w	r1, r1, r3
   10250:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   10254:	f04f 0000 	mov.w	r0, #0
   10258:	bd70      	pop	{r4, r5, r6, pc}
   1025a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1025e:	bf06      	itte	eq
   10260:	4610      	moveq	r0, r2
   10262:	4619      	moveq	r1, r3
   10264:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   10268:	d019      	beq.n	1029e <__aeabi_dmul+0x24a>
   1026a:	ea94 0f0c 	teq	r4, ip
   1026e:	d102      	bne.n	10276 <__aeabi_dmul+0x222>
   10270:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   10274:	d113      	bne.n	1029e <__aeabi_dmul+0x24a>
   10276:	ea95 0f0c 	teq	r5, ip
   1027a:	d105      	bne.n	10288 <__aeabi_dmul+0x234>
   1027c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   10280:	bf1c      	itt	ne
   10282:	4610      	movne	r0, r2
   10284:	4619      	movne	r1, r3
   10286:	d10a      	bne.n	1029e <__aeabi_dmul+0x24a>
   10288:	ea81 0103 	eor.w	r1, r1, r3
   1028c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   10290:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   10294:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   10298:	f04f 0000 	mov.w	r0, #0
   1029c:	bd70      	pop	{r4, r5, r6, pc}
   1029e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   102a2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   102a6:	bd70      	pop	{r4, r5, r6, pc}

000102a8 <__aeabi_ddiv>:
   102a8:	b570      	push	{r4, r5, r6, lr}
   102aa:	f04f 0cff 	mov.w	ip, #255	; 0xff
   102ae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   102b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   102b6:	bf1d      	ittte	ne
   102b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   102bc:	ea94 0f0c 	teqne	r4, ip
   102c0:	ea95 0f0c 	teqne	r5, ip
   102c4:	f000 f8a7 	bleq	10416 <__aeabi_ddiv+0x16e>
   102c8:	eba4 0405 	sub.w	r4, r4, r5
   102cc:	ea81 0e03 	eor.w	lr, r1, r3
   102d0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   102d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   102d8:	f000 8088 	beq.w	103ec <__aeabi_ddiv+0x144>
   102dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
   102e0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   102e4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   102e8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   102ec:	ea4f 2202 	mov.w	r2, r2, lsl #8
   102f0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   102f4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   102f8:	ea4f 2600 	mov.w	r6, r0, lsl #8
   102fc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   10300:	429d      	cmp	r5, r3
   10302:	bf08      	it	eq
   10304:	4296      	cmpeq	r6, r2
   10306:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   1030a:	f504 7440 	add.w	r4, r4, #768	; 0x300
   1030e:	d202      	bcs.n	10316 <__aeabi_ddiv+0x6e>
   10310:	085b      	lsrs	r3, r3, #1
   10312:	ea4f 0232 	mov.w	r2, r2, rrx
   10316:	1ab6      	subs	r6, r6, r2
   10318:	eb65 0503 	sbc.w	r5, r5, r3
   1031c:	085b      	lsrs	r3, r3, #1
   1031e:	ea4f 0232 	mov.w	r2, r2, rrx
   10322:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   10326:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   1032a:	ebb6 0e02 	subs.w	lr, r6, r2
   1032e:	eb75 0e03 	sbcs.w	lr, r5, r3
   10332:	bf22      	ittt	cs
   10334:	1ab6      	subcs	r6, r6, r2
   10336:	4675      	movcs	r5, lr
   10338:	ea40 000c 	orrcs.w	r0, r0, ip
   1033c:	085b      	lsrs	r3, r3, #1
   1033e:	ea4f 0232 	mov.w	r2, r2, rrx
   10342:	ebb6 0e02 	subs.w	lr, r6, r2
   10346:	eb75 0e03 	sbcs.w	lr, r5, r3
   1034a:	bf22      	ittt	cs
   1034c:	1ab6      	subcs	r6, r6, r2
   1034e:	4675      	movcs	r5, lr
   10350:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   10354:	085b      	lsrs	r3, r3, #1
   10356:	ea4f 0232 	mov.w	r2, r2, rrx
   1035a:	ebb6 0e02 	subs.w	lr, r6, r2
   1035e:	eb75 0e03 	sbcs.w	lr, r5, r3
   10362:	bf22      	ittt	cs
   10364:	1ab6      	subcs	r6, r6, r2
   10366:	4675      	movcs	r5, lr
   10368:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1036c:	085b      	lsrs	r3, r3, #1
   1036e:	ea4f 0232 	mov.w	r2, r2, rrx
   10372:	ebb6 0e02 	subs.w	lr, r6, r2
   10376:	eb75 0e03 	sbcs.w	lr, r5, r3
   1037a:	bf22      	ittt	cs
   1037c:	1ab6      	subcs	r6, r6, r2
   1037e:	4675      	movcs	r5, lr
   10380:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   10384:	ea55 0e06 	orrs.w	lr, r5, r6
   10388:	d018      	beq.n	103bc <__aeabi_ddiv+0x114>
   1038a:	ea4f 1505 	mov.w	r5, r5, lsl #4
   1038e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   10392:	ea4f 1606 	mov.w	r6, r6, lsl #4
   10396:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   1039a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   1039e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   103a2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   103a6:	d1c0      	bne.n	1032a <__aeabi_ddiv+0x82>
   103a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   103ac:	d10b      	bne.n	103c6 <__aeabi_ddiv+0x11e>
   103ae:	ea41 0100 	orr.w	r1, r1, r0
   103b2:	f04f 0000 	mov.w	r0, #0
   103b6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   103ba:	e7b6      	b.n	1032a <__aeabi_ddiv+0x82>
   103bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   103c0:	bf04      	itt	eq
   103c2:	4301      	orreq	r1, r0
   103c4:	2000      	moveq	r0, #0
   103c6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   103ca:	bf88      	it	hi
   103cc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   103d0:	f63f aeaf 	bhi.w	10132 <__aeabi_dmul+0xde>
   103d4:	ebb5 0c03 	subs.w	ip, r5, r3
   103d8:	bf04      	itt	eq
   103da:	ebb6 0c02 	subseq.w	ip, r6, r2
   103de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   103e2:	f150 0000 	adcs.w	r0, r0, #0
   103e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   103ea:	bd70      	pop	{r4, r5, r6, pc}
   103ec:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   103f0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   103f4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   103f8:	bfc2      	ittt	gt
   103fa:	ebd4 050c 	rsbsgt	r5, r4, ip
   103fe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   10402:	bd70      	popgt	{r4, r5, r6, pc}
   10404:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   10408:	f04f 0e00 	mov.w	lr, #0
   1040c:	3c01      	subs	r4, #1
   1040e:	e690      	b.n	10132 <__aeabi_dmul+0xde>
   10410:	ea45 0e06 	orr.w	lr, r5, r6
   10414:	e68d      	b.n	10132 <__aeabi_dmul+0xde>
   10416:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   1041a:	ea94 0f0c 	teq	r4, ip
   1041e:	bf08      	it	eq
   10420:	ea95 0f0c 	teqeq	r5, ip
   10424:	f43f af3b 	beq.w	1029e <__aeabi_dmul+0x24a>
   10428:	ea94 0f0c 	teq	r4, ip
   1042c:	d10a      	bne.n	10444 <__aeabi_ddiv+0x19c>
   1042e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   10432:	f47f af34 	bne.w	1029e <__aeabi_dmul+0x24a>
   10436:	ea95 0f0c 	teq	r5, ip
   1043a:	f47f af25 	bne.w	10288 <__aeabi_dmul+0x234>
   1043e:	4610      	mov	r0, r2
   10440:	4619      	mov	r1, r3
   10442:	e72c      	b.n	1029e <__aeabi_dmul+0x24a>
   10444:	ea95 0f0c 	teq	r5, ip
   10448:	d106      	bne.n	10458 <__aeabi_ddiv+0x1b0>
   1044a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   1044e:	f43f aefd 	beq.w	1024c <__aeabi_dmul+0x1f8>
   10452:	4610      	mov	r0, r2
   10454:	4619      	mov	r1, r3
   10456:	e722      	b.n	1029e <__aeabi_dmul+0x24a>
   10458:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   1045c:	bf18      	it	ne
   1045e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   10462:	f47f aec5 	bne.w	101f0 <__aeabi_dmul+0x19c>
   10466:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   1046a:	f47f af0d 	bne.w	10288 <__aeabi_dmul+0x234>
   1046e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   10472:	f47f aeeb 	bne.w	1024c <__aeabi_dmul+0x1f8>
   10476:	e712      	b.n	1029e <__aeabi_dmul+0x24a>

00010478 <__gedf2>:
   10478:	f04f 3cff 	mov.w	ip, #4294967295
   1047c:	e006      	b.n	1048c <__cmpdf2+0x4>
   1047e:	bf00      	nop

00010480 <__ledf2>:
   10480:	f04f 0c01 	mov.w	ip, #1
   10484:	e002      	b.n	1048c <__cmpdf2+0x4>
   10486:	bf00      	nop

00010488 <__cmpdf2>:
   10488:	f04f 0c01 	mov.w	ip, #1
   1048c:	f84d cd04 	str.w	ip, [sp, #-4]!
   10490:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   10494:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   10498:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   1049c:	bf18      	it	ne
   1049e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   104a2:	d01b      	beq.n	104dc <__cmpdf2+0x54>
   104a4:	b001      	add	sp, #4
   104a6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   104aa:	bf0c      	ite	eq
   104ac:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   104b0:	ea91 0f03 	teqne	r1, r3
   104b4:	bf02      	ittt	eq
   104b6:	ea90 0f02 	teqeq	r0, r2
   104ba:	2000      	moveq	r0, #0
   104bc:	4770      	bxeq	lr
   104be:	f110 0f00 	cmn.w	r0, #0
   104c2:	ea91 0f03 	teq	r1, r3
   104c6:	bf58      	it	pl
   104c8:	4299      	cmppl	r1, r3
   104ca:	bf08      	it	eq
   104cc:	4290      	cmpeq	r0, r2
   104ce:	bf2c      	ite	cs
   104d0:	17d8      	asrcs	r0, r3, #31
   104d2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   104d6:	f040 0001 	orr.w	r0, r0, #1
   104da:	4770      	bx	lr
   104dc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   104e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   104e4:	d102      	bne.n	104ec <__cmpdf2+0x64>
   104e6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   104ea:	d107      	bne.n	104fc <__cmpdf2+0x74>
   104ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   104f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   104f4:	d1d6      	bne.n	104a4 <__cmpdf2+0x1c>
   104f6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   104fa:	d0d3      	beq.n	104a4 <__cmpdf2+0x1c>
   104fc:	f85d 0b04 	ldr.w	r0, [sp], #4
   10500:	4770      	bx	lr
   10502:	bf00      	nop

00010504 <__aeabi_cdrcmple>:
   10504:	4684      	mov	ip, r0
   10506:	4610      	mov	r0, r2
   10508:	4662      	mov	r2, ip
   1050a:	468c      	mov	ip, r1
   1050c:	4619      	mov	r1, r3
   1050e:	4663      	mov	r3, ip
   10510:	e000      	b.n	10514 <__aeabi_cdcmpeq>
   10512:	bf00      	nop

00010514 <__aeabi_cdcmpeq>:
   10514:	b501      	push	{r0, lr}
   10516:	f7ff ffb7 	bl	10488 <__cmpdf2>
   1051a:	2800      	cmp	r0, #0
   1051c:	bf48      	it	mi
   1051e:	f110 0f00 	cmnmi.w	r0, #0
   10522:	bd01      	pop	{r0, pc}

00010524 <__aeabi_dcmpeq>:
   10524:	f84d ed08 	str.w	lr, [sp, #-8]!
   10528:	f7ff fff4 	bl	10514 <__aeabi_cdcmpeq>
   1052c:	bf0c      	ite	eq
   1052e:	2001      	moveq	r0, #1
   10530:	2000      	movne	r0, #0
   10532:	f85d fb08 	ldr.w	pc, [sp], #8
   10536:	bf00      	nop

00010538 <__aeabi_dcmplt>:
   10538:	f84d ed08 	str.w	lr, [sp, #-8]!
   1053c:	f7ff ffea 	bl	10514 <__aeabi_cdcmpeq>
   10540:	bf34      	ite	cc
   10542:	2001      	movcc	r0, #1
   10544:	2000      	movcs	r0, #0
   10546:	f85d fb08 	ldr.w	pc, [sp], #8
   1054a:	bf00      	nop

0001054c <__aeabi_dcmple>:
   1054c:	f84d ed08 	str.w	lr, [sp, #-8]!
   10550:	f7ff ffe0 	bl	10514 <__aeabi_cdcmpeq>
   10554:	bf94      	ite	ls
   10556:	2001      	movls	r0, #1
   10558:	2000      	movhi	r0, #0
   1055a:	f85d fb08 	ldr.w	pc, [sp], #8
   1055e:	bf00      	nop

00010560 <__aeabi_dcmpge>:
   10560:	f84d ed08 	str.w	lr, [sp, #-8]!
   10564:	f7ff ffce 	bl	10504 <__aeabi_cdrcmple>
   10568:	bf94      	ite	ls
   1056a:	2001      	movls	r0, #1
   1056c:	2000      	movhi	r0, #0
   1056e:	f85d fb08 	ldr.w	pc, [sp], #8
   10572:	bf00      	nop

00010574 <__aeabi_dcmpgt>:
   10574:	f84d ed08 	str.w	lr, [sp, #-8]!
   10578:	f7ff ffc4 	bl	10504 <__aeabi_cdrcmple>
   1057c:	bf34      	ite	cc
   1057e:	2001      	movcc	r0, #1
   10580:	2000      	movcs	r0, #0
   10582:	f85d fb08 	ldr.w	pc, [sp], #8
   10586:	bf00      	nop

00010588 <__aeabi_d2iz>:
   10588:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1058c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   10590:	d215      	bcs.n	105be <__aeabi_d2iz+0x36>
   10592:	d511      	bpl.n	105b8 <__aeabi_d2iz+0x30>
   10594:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   10598:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   1059c:	d912      	bls.n	105c4 <__aeabi_d2iz+0x3c>
   1059e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   105a2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   105a6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   105aa:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   105ae:	fa23 f002 	lsr.w	r0, r3, r2
   105b2:	bf18      	it	ne
   105b4:	4240      	negne	r0, r0
   105b6:	4770      	bx	lr
   105b8:	f04f 0000 	mov.w	r0, #0
   105bc:	4770      	bx	lr
   105be:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   105c2:	d105      	bne.n	105d0 <__aeabi_d2iz+0x48>
   105c4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   105c8:	bf08      	it	eq
   105ca:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   105ce:	4770      	bx	lr
   105d0:	f04f 0000 	mov.w	r0, #0
   105d4:	4770      	bx	lr
   105d6:	bf00      	nop

000105d8 <__aeabi_d2uiz>:
   105d8:	004a      	lsls	r2, r1, #1
   105da:	d211      	bcs.n	10600 <__aeabi_d2uiz+0x28>
   105dc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   105e0:	d211      	bcs.n	10606 <__aeabi_d2uiz+0x2e>
   105e2:	d50d      	bpl.n	10600 <__aeabi_d2uiz+0x28>
   105e4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   105e8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   105ec:	d40e      	bmi.n	1060c <__aeabi_d2uiz+0x34>
   105ee:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   105f2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   105f6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   105fa:	fa23 f002 	lsr.w	r0, r3, r2
   105fe:	4770      	bx	lr
   10600:	f04f 0000 	mov.w	r0, #0
   10604:	4770      	bx	lr
   10606:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   1060a:	d102      	bne.n	10612 <__aeabi_d2uiz+0x3a>
   1060c:	f04f 30ff 	mov.w	r0, #4294967295
   10610:	4770      	bx	lr
   10612:	f04f 0000 	mov.w	r0, #0
   10616:	4770      	bx	lr

00010618 <__aeabi_d2f>:
   10618:	ea4f 0241 	mov.w	r2, r1, lsl #1
   1061c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
   10620:	bf24      	itt	cs
   10622:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
   10626:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   1062a:	d90d      	bls.n	10648 <__aeabi_d2f+0x30>
   1062c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   10630:	ea4f 02c0 	mov.w	r2, r0, lsl #3
   10634:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
   10638:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
   1063c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
   10640:	bf08      	it	eq
   10642:	f020 0001 	biceq.w	r0, r0, #1
   10646:	4770      	bx	lr
   10648:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
   1064c:	d121      	bne.n	10692 <__aeabi_d2f+0x7a>
   1064e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
   10652:	bfbc      	itt	lt
   10654:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
   10658:	4770      	bxlt	lr
   1065a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   1065e:	ea4f 5252 	mov.w	r2, r2, lsr #21
   10662:	f1c2 0218 	rsb	r2, r2, #24
   10666:	f1c2 0c20 	rsb	ip, r2, #32
   1066a:	fa10 f30c 	lsls.w	r3, r0, ip
   1066e:	fa20 f002 	lsr.w	r0, r0, r2
   10672:	bf18      	it	ne
   10674:	f040 0001 	orrne.w	r0, r0, #1
   10678:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   1067c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
   10680:	fa03 fc0c 	lsl.w	ip, r3, ip
   10684:	ea40 000c 	orr.w	r0, r0, ip
   10688:	fa23 f302 	lsr.w	r3, r3, r2
   1068c:	ea4f 0343 	mov.w	r3, r3, lsl #1
   10690:	e7cc      	b.n	1062c <__aeabi_d2f+0x14>
   10692:	ea7f 5362 	mvns.w	r3, r2, asr #21
   10696:	d107      	bne.n	106a8 <__aeabi_d2f+0x90>
   10698:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
   1069c:	bf1e      	ittt	ne
   1069e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
   106a2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
   106a6:	4770      	bxne	lr
   106a8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
   106ac:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   106b0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   106b4:	4770      	bx	lr
   106b6:	bf00      	nop

000106b8 <__aeabi_fmul>:
   106b8:	f04f 0cff 	mov.w	ip, #255	; 0xff
   106bc:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   106c0:	bf1e      	ittt	ne
   106c2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   106c6:	ea92 0f0c 	teqne	r2, ip
   106ca:	ea93 0f0c 	teqne	r3, ip
   106ce:	d06f      	beq.n	107b0 <__aeabi_fmul+0xf8>
   106d0:	441a      	add	r2, r3
   106d2:	ea80 0c01 	eor.w	ip, r0, r1
   106d6:	0240      	lsls	r0, r0, #9
   106d8:	bf18      	it	ne
   106da:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   106de:	d01e      	beq.n	1071e <__aeabi_fmul+0x66>
   106e0:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   106e4:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   106e8:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   106ec:	fba0 3101 	umull	r3, r1, r0, r1
   106f0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   106f4:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   106f8:	bf3e      	ittt	cc
   106fa:	0049      	lslcc	r1, r1, #1
   106fc:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   10700:	005b      	lslcc	r3, r3, #1
   10702:	ea40 0001 	orr.w	r0, r0, r1
   10706:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   1070a:	2afd      	cmp	r2, #253	; 0xfd
   1070c:	d81d      	bhi.n	1074a <__aeabi_fmul+0x92>
   1070e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   10712:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   10716:	bf08      	it	eq
   10718:	f020 0001 	biceq.w	r0, r0, #1
   1071c:	4770      	bx	lr
   1071e:	f090 0f00 	teq	r0, #0
   10722:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   10726:	bf08      	it	eq
   10728:	0249      	lsleq	r1, r1, #9
   1072a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   1072e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   10732:	3a7f      	subs	r2, #127	; 0x7f
   10734:	bfc2      	ittt	gt
   10736:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   1073a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   1073e:	4770      	bxgt	lr
   10740:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   10744:	f04f 0300 	mov.w	r3, #0
   10748:	3a01      	subs	r2, #1
   1074a:	dc5d      	bgt.n	10808 <__aeabi_fmul+0x150>
   1074c:	f112 0f19 	cmn.w	r2, #25
   10750:	bfdc      	itt	le
   10752:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   10756:	4770      	bxle	lr
   10758:	f1c2 0200 	rsb	r2, r2, #0
   1075c:	0041      	lsls	r1, r0, #1
   1075e:	fa21 f102 	lsr.w	r1, r1, r2
   10762:	f1c2 0220 	rsb	r2, r2, #32
   10766:	fa00 fc02 	lsl.w	ip, r0, r2
   1076a:	ea5f 0031 	movs.w	r0, r1, rrx
   1076e:	f140 0000 	adc.w	r0, r0, #0
   10772:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   10776:	bf08      	it	eq
   10778:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   1077c:	4770      	bx	lr
   1077e:	f092 0f00 	teq	r2, #0
   10782:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   10786:	bf02      	ittt	eq
   10788:	0040      	lsleq	r0, r0, #1
   1078a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   1078e:	3a01      	subeq	r2, #1
   10790:	d0f9      	beq.n	10786 <__aeabi_fmul+0xce>
   10792:	ea40 000c 	orr.w	r0, r0, ip
   10796:	f093 0f00 	teq	r3, #0
   1079a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   1079e:	bf02      	ittt	eq
   107a0:	0049      	lsleq	r1, r1, #1
   107a2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   107a6:	3b01      	subeq	r3, #1
   107a8:	d0f9      	beq.n	1079e <__aeabi_fmul+0xe6>
   107aa:	ea41 010c 	orr.w	r1, r1, ip
   107ae:	e78f      	b.n	106d0 <__aeabi_fmul+0x18>
   107b0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   107b4:	ea92 0f0c 	teq	r2, ip
   107b8:	bf18      	it	ne
   107ba:	ea93 0f0c 	teqne	r3, ip
   107be:	d00a      	beq.n	107d6 <__aeabi_fmul+0x11e>
   107c0:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   107c4:	bf18      	it	ne
   107c6:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   107ca:	d1d8      	bne.n	1077e <__aeabi_fmul+0xc6>
   107cc:	ea80 0001 	eor.w	r0, r0, r1
   107d0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   107d4:	4770      	bx	lr
   107d6:	f090 0f00 	teq	r0, #0
   107da:	bf17      	itett	ne
   107dc:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   107e0:	4608      	moveq	r0, r1
   107e2:	f091 0f00 	teqne	r1, #0
   107e6:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   107ea:	d014      	beq.n	10816 <__aeabi_fmul+0x15e>
   107ec:	ea92 0f0c 	teq	r2, ip
   107f0:	d101      	bne.n	107f6 <__aeabi_fmul+0x13e>
   107f2:	0242      	lsls	r2, r0, #9
   107f4:	d10f      	bne.n	10816 <__aeabi_fmul+0x15e>
   107f6:	ea93 0f0c 	teq	r3, ip
   107fa:	d103      	bne.n	10804 <__aeabi_fmul+0x14c>
   107fc:	024b      	lsls	r3, r1, #9
   107fe:	bf18      	it	ne
   10800:	4608      	movne	r0, r1
   10802:	d108      	bne.n	10816 <__aeabi_fmul+0x15e>
   10804:	ea80 0001 	eor.w	r0, r0, r1
   10808:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   1080c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   10810:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   10814:	4770      	bx	lr
   10816:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   1081a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   1081e:	4770      	bx	lr

00010820 <__aeabi_fdiv>:
   10820:	f04f 0cff 	mov.w	ip, #255	; 0xff
   10824:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   10828:	bf1e      	ittt	ne
   1082a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   1082e:	ea92 0f0c 	teqne	r2, ip
   10832:	ea93 0f0c 	teqne	r3, ip
   10836:	d069      	beq.n	1090c <__aeabi_fdiv+0xec>
   10838:	eba2 0203 	sub.w	r2, r2, r3
   1083c:	ea80 0c01 	eor.w	ip, r0, r1
   10840:	0249      	lsls	r1, r1, #9
   10842:	ea4f 2040 	mov.w	r0, r0, lsl #9
   10846:	d037      	beq.n	108b8 <__aeabi_fdiv+0x98>
   10848:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   1084c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   10850:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   10854:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   10858:	428b      	cmp	r3, r1
   1085a:	bf38      	it	cc
   1085c:	005b      	lslcc	r3, r3, #1
   1085e:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   10862:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   10866:	428b      	cmp	r3, r1
   10868:	bf24      	itt	cs
   1086a:	1a5b      	subcs	r3, r3, r1
   1086c:	ea40 000c 	orrcs.w	r0, r0, ip
   10870:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   10874:	bf24      	itt	cs
   10876:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   1087a:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   1087e:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   10882:	bf24      	itt	cs
   10884:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   10888:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   1088c:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   10890:	bf24      	itt	cs
   10892:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   10896:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   1089a:	011b      	lsls	r3, r3, #4
   1089c:	bf18      	it	ne
   1089e:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   108a2:	d1e0      	bne.n	10866 <__aeabi_fdiv+0x46>
   108a4:	2afd      	cmp	r2, #253	; 0xfd
   108a6:	f63f af50 	bhi.w	1074a <__aeabi_fmul+0x92>
   108aa:	428b      	cmp	r3, r1
   108ac:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   108b0:	bf08      	it	eq
   108b2:	f020 0001 	biceq.w	r0, r0, #1
   108b6:	4770      	bx	lr
   108b8:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   108bc:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   108c0:	327f      	adds	r2, #127	; 0x7f
   108c2:	bfc2      	ittt	gt
   108c4:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   108c8:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   108cc:	4770      	bxgt	lr
   108ce:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   108d2:	f04f 0300 	mov.w	r3, #0
   108d6:	3a01      	subs	r2, #1
   108d8:	e737      	b.n	1074a <__aeabi_fmul+0x92>
   108da:	f092 0f00 	teq	r2, #0
   108de:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   108e2:	bf02      	ittt	eq
   108e4:	0040      	lsleq	r0, r0, #1
   108e6:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   108ea:	3a01      	subeq	r2, #1
   108ec:	d0f9      	beq.n	108e2 <__aeabi_fdiv+0xc2>
   108ee:	ea40 000c 	orr.w	r0, r0, ip
   108f2:	f093 0f00 	teq	r3, #0
   108f6:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   108fa:	bf02      	ittt	eq
   108fc:	0049      	lsleq	r1, r1, #1
   108fe:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   10902:	3b01      	subeq	r3, #1
   10904:	d0f9      	beq.n	108fa <__aeabi_fdiv+0xda>
   10906:	ea41 010c 	orr.w	r1, r1, ip
   1090a:	e795      	b.n	10838 <__aeabi_fdiv+0x18>
   1090c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   10910:	ea92 0f0c 	teq	r2, ip
   10914:	d108      	bne.n	10928 <__aeabi_fdiv+0x108>
   10916:	0242      	lsls	r2, r0, #9
   10918:	f47f af7d 	bne.w	10816 <__aeabi_fmul+0x15e>
   1091c:	ea93 0f0c 	teq	r3, ip
   10920:	f47f af70 	bne.w	10804 <__aeabi_fmul+0x14c>
   10924:	4608      	mov	r0, r1
   10926:	e776      	b.n	10816 <__aeabi_fmul+0x15e>
   10928:	ea93 0f0c 	teq	r3, ip
   1092c:	d104      	bne.n	10938 <__aeabi_fdiv+0x118>
   1092e:	024b      	lsls	r3, r1, #9
   10930:	f43f af4c 	beq.w	107cc <__aeabi_fmul+0x114>
   10934:	4608      	mov	r0, r1
   10936:	e76e      	b.n	10816 <__aeabi_fmul+0x15e>
   10938:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   1093c:	bf18      	it	ne
   1093e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   10942:	d1ca      	bne.n	108da <__aeabi_fdiv+0xba>
   10944:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   10948:	f47f af5c 	bne.w	10804 <__aeabi_fmul+0x14c>
   1094c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   10950:	f47f af3c 	bne.w	107cc <__aeabi_fmul+0x114>
   10954:	e75f      	b.n	10816 <__aeabi_fmul+0x15e>
   10956:	bf00      	nop
   10958:	ffffffff 	.word	0xffffffff
   1095c:	00010102 	.word	0x00010102
   10960:	00000001 	.word	0x00000001
   10964:	0000000d 	.word	0x0000000d
   10968:	ffffffff 	.word	0xffffffff
   1096c:	00010102 	.word	0x00010102
   10970:	00000001 	.word	0x00000001
   10974:	52504724 	.word	0x52504724
   10978:	0000434d 	.word	0x0000434d
   1097c:	56504724 	.word	0x56504724
   10980:	00004754 	.word	0x00004754
   10984:	47504724 	.word	0x47504724
   10988:	00004147 	.word	0x00004147
   1098c:	47504724 	.word	0x47504724
   10990:	00004153 	.word	0x00004153
   10994:	47504724 	.word	0x47504724
   10998:	00004c4c 	.word	0x00004c4c
   1099c:	54504724 	.word	0x54504724
   109a0:	00005458 	.word	0x00005458
   109a4:	53544e41 	.word	0x53544e41
   109a8:	55544154 	.word	0x55544154
   109ac:	00003d53 	.word	0x00003d53
   109b0:	54494e49 	.word	0x54494e49
   109b4:	00000000 	.word	0x00000000
   109b8:	544e4f44 	.word	0x544e4f44
   109bc:	574f4e4b 	.word	0x574f4e4b
   109c0:	00000000 	.word	0x00000000
   109c4:	00004b4f 	.word	0x00004b4f
   109c8:	524f4853 	.word	0x524f4853
   109cc:	00000054 	.word	0x00000054
   109d0:	4e45504f 	.word	0x4e45504f
   109d4:	00000000 	.word	0x00000000

000109d8 <sens>:
   109d8:	3c0f5c29 3c8f5c29 3d8f5c29 3d8f5c29     )\.<)\.<)\.=)\.=

000109e8 <pPort>:
   109e8:	40088000 40030000 400ac000              ...@...@...@

000109f4 <SER_NVIC>:
   109f4:	00070605 6c6c6163 6f6f6220 616f6c74     ....call bootloa
   10a04:	21726564 00000000                       der!....

00010a0c <max_addr>:
   10a0c:	000007ff 000003ff                       ........

00010a14 <oo9do6AD>:
   10a14:	3456a947 515f4b36 2200e4ff cf009e5d     G.V46K_Q..."]...
   10a24:	1848d0e0 6fc7b63e 01d38f9a f65d2530     ..H.>..o....0%].
   10a34:	a898c82b 3004841d 6e2de622 6ed3ffb9     +......0".-n...n
   10a44:	16157e2b a6d2ae28 8815f7ab 3c4fcf09     +~..(.........O<

00010a54 <RegBase>:
   10a54:	40048000 4b414550 7479532d 44206d65     ...@PEAK-Sytem D
   10a64:	736d7261 74646174 00000000              armstadt....

00010a70 <sb>:
   10a70:	7b777c63 c56f6bf2 2b670130 76abd7fe     c|w{.ko.0.g+...v
   10a80:	7dc982ca f04759fa afa2d4ad c072a49c     ...}.YG.......r.
   10a90:	2693fdb7 ccf73f36 f1e5a534 1531d871     ...&6?..4...q.1.
   10aa0:	c323c704 9a059618 e2801207 75b227eb     ..#..........'.u
   10ab0:	1a2c8309 a05a6e1b b3d63b52 842fe329     ..,..nZ.R;..)./.
   10ac0:	ed00d153 5bb1fc20 39becb6a cf584c4a     S... ..[j..9JLX.
   10ad0:	fbaaefd0 85334d43 7f02f945 a89f3c50     ....CM3.E...P<..
   10ae0:	8f40a351 f5389d92 21dab6bc d2f3ff10     Q.@...8....!....
   10af0:	ec130ccd 1744975f 3d7ea7c4 73195d64     ...._.D...~=d].s
   10b00:	dc4f8160 88902a22 14b8ee46 db0b5ede     `.O."*..F....^..
   10b10:	0a3a32e0 5c240649 62acd3c2 79e49591     .2:.I.$\...b...y
   10b20:	6d37c8e7 a94ed58d eaf4566c 08ae7a65     ..7m..N.lV..ez..
   10b30:	2e2578ba c6b4a61c 1f74dde8 8a8bbd4b     .x%.......t.K...
   10b40:	66b53e70 0ef60348 b9573561 9e1dc186     p>.fH...a5W.....
   10b50:	1198f8e1 948ed969 e9871e9b df2855ce     ....i........U(.
   10b60:	0d89a18c 6842e6bf 0f2d9941 16bb54b0     ......BhA.-..T..

00010b70 <f2_sb>:
   10b70:	f6eef8c6 91ded6ff 56ce0260 ec4db5e7     ........`..V..M.
   10b80:	fa891f8f fb8eb2ef 455fb341 9be45323     ........A._E#S..
   10b90:	4c3de175 83f57e6c f9d15168 2a62abe2     u.=Ll~..hQ....b*
   10ba0:	9d469508 2f0a3730 df1b240e ea7f4ecd     ..F.07./.$...N..
   10bb0:	34581d12 5bb4dc36 7db776a4 135edd52     ..X46..[.v.}R.^.
   10bc0:	c100b9a6 b679e340 72678dd4 85b09894     ....@.y...gr....
   10bd0:	ed4fc5bb 11669a86 fe04e98a 4b2578a0     ..O...f......x%K
   10be0:	05805da2 f170213f 42af7763 bffde520     .]..?!p.cw.B ...
   10bf0:	c3261881 2e8835be 7afc5593 e632bac8     ..&..5...U.z..2.
   10c00:	a39e19c0 0b3b5444 286bc78c ad16bca7     ....DT;...k(....
   10c10:	147464db b8480c92 c443bd9f f2d33139     .dt...H...C.91..
   10c20:	da6e8bd5 499cb101 cff3acd8 1047f4ca     ..n....I......G.
   10c30:	5c4af06f 97735738 3ee8a1cb 0f0d6196     o.J\8Ws....>.a..
   10c40:	cc717ce0 1cf70690 69ae6ac2 273a9917     .|q......j.i..:'
   10c50:	222bebd9 3307a9d2 c9153c2d a550aa87     ..+"...3-<....P.
   10c60:	1a095903 d084d765 1e5a2982 2c6da87b     .Y..e....)Z.{.m,

00010c70 <f3_sb>:
   10c70:	8d9984a5 54b1bd0d 7da90350 9ae66219     .......TP..}.b..
   10c80:	87409d45 0bc9eb15 eafd67ec 5b96f7bf     E.@......g.....[
   10c90:	6aae1cc2 4f02415a 0834f45c 3f537393     ...jZA.O\.4..sS?
   10ca0:	5e65520c b50fa128 3d9b3609 9fcd6926     .Re^(....6.=&i..
   10cb0:	2e749e1b fbeeb22d ce614df6 97713e7b     ..t.-....Ma.{>q.
   10cc0:	2c0068f5 edc81f60 4bd946be 4ae8d4de     .h.,`....F.K...J
   10cd0:	16e52a6b 9455d7c5 810610cf e3ba44f0     k*....U......D..
   10ce0:	8ac0fef3 0448bcad 6375c1df 6d0e1a30     ......H...uc0..m
   10cf0:	2f35144c 39cca2e1 4782f257 952be7ac     L.5/...9W..G..+.
   10d00:	7fd198a0 83ab7e66 3cd329ca 761de279     ....f~...).<y..v
   10d10:	1e4e563b e46c0adb a6ef6e5d 8b37a4a8     ;VN...l.]n....7.
   10d20:	b7594332 e0d2648c 2507fab4 18e98eaf     2CY..d.....%....
   10d30:	726f88d5 51c7f124 219c7c23 8586dcdd     ..or$..Q#|.!....
   10d40:	aac44290 120105d8 d0f95fa3 b9275891     .B......._...X'.
   10d50:	33b31338 a78970bb 209222b6 7a78ff49     8..3.p...". I.xz
   10d60:	1780f88f b8c631da 1177b0c3 3ad6fccb     .....1....w....:

00010d70 <tinytens>:
   10d70:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   10d80:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   10d90:	64ac6f43 0e180628 0000666e 74696e69     Co.d(...nf..init
   10da0:	00000079 00006e61                       y...an..

00010da8 <_ctype_>:
   10da8:	20202000 20202020 28282020 20282828     .         ((((( 
   10db8:	20202020 20202020 20202020 20202020                     
   10dc8:	10108820 10101010 10101010 10101010      ...............
   10dd8:	04040410 04040404 10040404 10101010     ................
   10de8:	41411010 41414141 01010101 01010101     ..AAAAAA........
   10df8:	01010101 01010101 01010101 10101010     ................
   10e08:	42421010 42424242 02020202 02020202     ..BBBBBB........
   10e18:	02020202 02020202 02020202 10101010     ................
   10e28:	00000020 00000000 00000000 00000000      ...............
	...
   10eac:	44434241 00004645 64636261 00006665     ABCDEF..abcdef..
   10ebc:	33323130 37363534 00003938              0123456789..

00010ec8 <_global_impure_ptr>:
   10ec8:	10000058 00000043 49534f50 00000058     X...C...POSIX...
   10ed8:	00000000 0000002e                       ........

00010ee0 <p05.5251>:
   10ee0:	00000005 00000019 0000007d 00000000     ........}.......

00010ef0 <__mprec_tens>:
   10ef0:	00000000 3ff00000 00000000 40240000     .......?......$@
   10f00:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   10f10:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   10f20:	00000000 412e8480 00000000 416312d0     .......A......cA
   10f30:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   10f40:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   10f50:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   10f60:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   10f70:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   10f80:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   10f90:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   10fa0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   10fb0:	79d99db4 44ea7843                       ...yCx.D

00010fb8 <__mprec_tinytens>:
   10fb8:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   10fc8:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   10fd8:	64ac6f43 0ac80628                       Co.d(...

00010fe0 <__mprec_bigtens>:
   10fe0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   10ff0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   11000:	7f73bf3c 75154fdd                       <.s..O.u
